Parameters : Source1B.txt QBasic1C-calls-star.txt ResultQBasic1C-calls-star.xml
Beginning to parse Simple Program.
Begin CodeParser
End CodeParser
Begin DesignExtractor
DE: Extracted Relationships
Building CFG
End DesignExtractor
End of parsing Simple Program.
Iteration1
Beginning to evaluate Query File.
New Category :  BASIC queries with Calls*
1 - Calls* :: 
assign a;
Select a such that Calls* (_,_)
1, 2, 4, 5, 7, 9, 14, 15, 16, 17, 18
5000
Evaluating query 1 - Calls* :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*(_, _)

 EVALUATING CALLS* (_ _)
---STARTING CALLS STAR---
tk1=_ and tk2=_
In intersect Pairs: both do not exist
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: 1 2 4 5 7 9 14 15 16 17 18 
Correct answer: 1 2 4 5 7 9 14 15 16 17 18 
2 - Calls* ::
while w;
Select w such that Calls* (_,_)
6
5000
Evaluating query 2 - Calls* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*(_, _)

 EVALUATING CALLS* (_ _)
---STARTING CALLS STAR---
tk1=_ and tk2=_
In intersect Pairs: both do not exist
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: 6 
Correct answer: 6 
3 - Calls* ::
procedure p, q;
Select p such that Calls* (p, q)
First, Second, Fourth, Fifth, Sixth, Seventh
5000
Evaluating query 3 - Calls* ::
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*(p, q)

 EVALUATING CALLS* (p q)
---STARTING CALLS STAR---
tk1 = p and tk2 = q
in recursive Call
rootindex = 1 currentIndex= 1
after getting called
in recursive Call
rootindex = 1 currentIndex= 2
after getting called
in recursive Call
rootindex = 1 currentIndex= 3
after getting called
in recursive Call
rootindex = 1 currentIndex= 4
after getting called
in recursive Call
rootindex = 1 currentIndex= 1
after getting called
in recursive Call
rootindex = 1 currentIndex= 6
after getting called
in recursive Call
rootindex = 1 currentIndex= 5
after getting called
in recursive Call
rootindex = 1 currentIndex= 7
after getting called
in recursive Call
rootindex = 2 currentIndex= 2
after getting called
in recursive Call
rootindex = 2 currentIndex= 4
after getting called
in recursive Call
rootindex = 2 currentIndex= 6
after getting called
in recursive Call
rootindex = 3 currentIndex= 3
after getting called
in recursive Call
rootindex = 4 currentIndex= 4
after getting called
in recursive Call
rootindex = 4 currentIndex= 6
after getting called
in recursive Call
rootindex = 5 currentIndex= 5
after getting called
in recursive Call
rootindex = 6 currentIndex= 6
after getting called
in recursive Call
rootindex = 7 currentIndex= 7
after getting called
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Insert links for tk2 = q
IN INSERT LINKS INSERTING TOKEN = q
q Not Found in Linkages and relIndex = 0
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 20
FIRST PARAM = p
it2->ans1 = 7
it2->ans1 = 6
it2->ans1 = 5
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
RETURNING FINAL ANSWERS




Your answer: Seventh Sixth Fifth Fourth Second First 
Correct answer: First Second Fourth Fifth Sixth Seventh 
4 - Calls* ::
procedure p;
Select p such that Calls* (p, _)
First, Second, Fourth, Fifth, Sixth, Seventh
5000
Evaluating query 4 - Calls* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*(p, _)

 EVALUATING CALLS* (p _)
---STARTING CALLS STAR---
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 6
FIRST PARAM = p
it2->ans1 = 7
it2->ans1 = 6
it2->ans1 = 5
it2->ans1 = 4
it2->ans1 = 2
it2->ans1 = 1
RETURNING FINAL ANSWERS




Your answer: Seventh Sixth Fifth Fourth Second First 
Correct answer: First Second Fourth Fifth Sixth Seventh 
5 - Calls* ::
procedure p, q;
Select q such that Calls* (p, q)
First, Second, Third, Fourth, Fifth, Sixth, Seventh
5000
Evaluating query 5 - Calls* ::
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*(p, q)

 EVALUATING CALLS* (p q)
---STARTING CALLS STAR---
tk1 = p and tk2 = q
in recursive Call
rootindex = 1 currentIndex= 1
after getting called
in recursive Call
rootindex = 1 currentIndex= 2
after getting called
in recursive Call
rootindex = 1 currentIndex= 3
after getting called
in recursive Call
rootindex = 1 currentIndex= 4
after getting called
in recursive Call
rootindex = 1 currentIndex= 1
after getting called
in recursive Call
rootindex = 1 currentIndex= 6
after getting called
in recursive Call
rootindex = 1 currentIndex= 5
after getting called
in recursive Call
rootindex = 1 currentIndex= 7
after getting called
in recursive Call
rootindex = 2 currentIndex= 2
after getting called
in recursive Call
rootindex = 2 currentIndex= 4
after getting called
in recursive Call
rootindex = 2 currentIndex= 6
after getting called
in recursive Call
rootindex = 3 currentIndex= 3
after getting called
in recursive Call
rootindex = 4 currentIndex= 4
after getting called
in recursive Call
rootindex = 4 currentIndex= 6
after getting called
in recursive Call
rootindex = 5 currentIndex= 5
after getting called
in recursive Call
rootindex = 6 currentIndex= 6
after getting called
in recursive Call
rootindex = 7 currentIndex= 7
after getting called
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Insert links for tk2 = q
IN INSERT LINKS INSERTING TOKEN = q
q Not Found in Linkages and relIndex = 0
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = q p.size = 20
FIRST PARAM = p
SECOND PARAM = q
it2->ans2 = 6
it2->ans2 = 2
it2->ans2 = 7
it2->ans2 = 2
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 5
it2->ans2 = 2
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 4
it2->ans2 = 3
it2->ans2 = 7
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 2
it2->ans2 = 1
it2->ans2 = 4
it2->ans2 = 3
it2->ans2 = 2
RETURNING FINAL ANSWERS




Your answer: Sixth Second Seventh First Fifth Fourth Third 
Correct answer: First Second Third Fourth Fifth Sixth Seventh 
6 - Calls* ::
procedure p;
Select p such that Calls* (_, p)
First, Second, Third, Fourth, Fifth, Sixth, Seventh
5000
Evaluating query 6 - Calls* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*(_, p)

 EVALUATING CALLS* (_ p)
---STARTING CALLS STAR---
In intersect Pairs: both do not exist
Insert links for tk2 = p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 7
FIRST PARAM = _
SECOND PARAM = p
it2->ans2 = 7
it2->ans2 = 6
it2->ans2 = 5
it2->ans2 = 4
it2->ans2 = 3
it2->ans2 = 2
it2->ans2 = 1
RETURNING FINAL ANSWERS




Your answer: Seventh Sixth Fifth Fourth Third Second First 
Correct answer: First Second Third Fourth Fifth Sixth Seventh 
7 - Calls* ::
procedure p;
Select BOOLEAN such that Calls* (_, _)
true
5000
Evaluating query 7 - Calls* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*(_, _)

 EVALUATING CALLS* (_ _)
---STARTING CALLS STAR---
tk1=_ and tk2=_
In intersect Pairs: both do not exist
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
8 - Calls* ::
procedure p;
Select BOOLEAN such that Calls* ("First", "Second")
true
5000
Evaluating query 8 - Calls* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*("First", "Second")

 EVALUATING CALLS* ("First" "Second")
---STARTING CALLS STAR---
rootIndex = 1 currentIndex = 1 targetIndex = 2
Iterating throught called vector. *i = 2
recursiveCallBoolean returns TRUE
In intersect Pairs: both do not exist
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
9 - Calls* :: 
procedure p;
Select BOOLEAN such that Calls* ("Third", "First")
false
5000
Evaluating query 9 - Calls* :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*("Third", "First")

 EVALUATING CALLS* ("Third" "First")
---STARTING CALLS STAR---
rootIndex = 3 currentIndex = 3 targetIndex = 1
In intersect Pairs: both do not exist
---END OF CALLS STAR---
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: false 
Correct answer: false 
10 - Calls* :: 
procedure p;
Select BOOLEAN such that Calls* ("Second", "First")
true
5000
Evaluating query 10 - Calls* :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*("Second", "First")

 EVALUATING CALLS* ("Second" "First")
---STARTING CALLS STAR---
rootIndex = 2 currentIndex = 2 targetIndex = 1
Iterating throught called vector. *i = 3
rootIndex = 2 currentIndex = 3 targetIndex = 1
Iterating throught called vector. *i = 4
rootIndex = 2 currentIndex = 4 targetIndex = 1
Iterating throught called vector. *i = 1
recursiveCallBoolean returns TRUE
Iterating throught called vector. *i = 5
rootIndex = 2 currentIndex = 5 targetIndex = 1
Iterating throught called vector. *i = 7
rootIndex = 2 currentIndex = 7 targetIndex = 1
Iterating throught called vector. *i = 6
rootIndex = 2 currentIndex = 6 targetIndex = 1
Iterating throught called vector. *i = 2
rootIndex = 2 currentIndex = 2 targetIndex = 1
Iterating throught called vector. *i = 3
rootIndex = 2 currentIndex = 4 targetIndex = 1
Iterating throught called vector. *i = 1
recursiveCallBoolean returns TRUE
Iterating throught called vector. *i = 5
In intersect Pairs: both do not exist
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
11 - Calls* ::
procedure p;
Select p such that Calls* ("Second", p)
First, Second, Third, Fourth, Fifth, Sixth
5000
Evaluating query 11 - Calls* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*("Second", p)

 EVALUATING CALLS* ("Second" p)
---STARTING CALLS STAR---
in recursive Call
rootindex = 2 currentIndex= 2
after getting called
in recursive Call
rootindex = 2 currentIndex= 3
after getting called
in recursive Call
rootindex = 2 currentIndex= 4
after getting called
in recursive Call
rootindex = 2 currentIndex= 1
after getting called
in recursive Call
rootindex = 2 currentIndex= 2
after getting called
in recursive Call
rootindex = 2 currentIndex= 4
after getting called
in recursive Call
rootindex = 2 currentIndex= 6
after getting called
in recursive Call
rootindex = 2 currentIndex= 5
after getting called
in recursive Call
rootindex = 2 currentIndex= 7
after getting called
in recursive Call
rootindex = 2 currentIndex= 6
after getting called
In intersect Pairs: both do not exist
Insert links for tk2 = p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 10
FIRST PARAM = "Second"
SECOND PARAM = p
it2->ans2 = 6
it2->ans2 = 7
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 2
it2->ans2 = 1
it2->ans2 = 4
it2->ans2 = 3
RETURNING FINAL ANSWERS




Your answer: Sixth Seventh Fifth First Third Second Fourth 
Correct answer: First Second Third Fourth Fifth Sixth 
Missing: 
Additional: Seventh 
12 - Calls* ::
procedure p;
Select p such that Calls* ("Third", p)

5000
Evaluating query 12 - Calls* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*("Third", p)

 EVALUATING CALLS* ("Third" p)
---STARTING CALLS STAR---
in recursive Call
rootindex = 3 currentIndex= 3
after getting called
In intersect Pairs: both do not exist
Insert links for tk2 = p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
---END OF CALLS STAR---
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = p p.size = 0
FIRST PARAM = "Third"
SECOND PARAM = p
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
13 - Calls* ::
procedure p;
Select p such that Calls* (p, "Third")
First, Second, Fourth, Fifth, Sixth, Seventh
5000
Evaluating query 13 - Calls* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*(p, "Third")

 EVALUATING CALLS* (p "Third")
---STARTING CALLS STAR---
in recursiveInverseCall currentIndex = 3
inserting 2
in recursiveInverseCall currentIndex = 2
inserting 1
in recursiveInverseCall currentIndex = 1
inserting 4
in recursiveInverseCall currentIndex = 4
inserting 2
inserting 6
in recursiveInverseCall currentIndex = 6
inserting 4
in recursiveInverseCall currentIndex = 7
inserting 5
in recursiveInverseCall currentIndex = 5
inserting 2
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 8
FIRST PARAM = p
it2->ans1 = 5
it2->ans1 = 7
it2->ans1 = 4
it2->ans1 = 6
it2->ans1 = 2
it2->ans1 = 4
it2->ans1 = 1
it2->ans1 = 2
RETURNING FINAL ANSWERS




Your answer: Fifth Seventh Fourth Sixth Second First 
Correct answer: First Second Fourth Fifth Sixth Seventh 
14 - Calls* ::
procedure p;
Select p such that Calls* (p, "First")
First, Second, Fourth, Fifth, Sixth, Seventh
5000
Evaluating query 14 - Calls* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*(p, "First")

 EVALUATING CALLS* (p "First")
---STARTING CALLS STAR---
in recursiveInverseCall currentIndex = 1
inserting 4
in recursiveInverseCall currentIndex = 4
inserting 2
in recursiveInverseCall currentIndex = 2
inserting 1
in recursiveInverseCall currentIndex = 1
inserting 4
inserting 6
in recursiveInverseCall currentIndex = 6
inserting 4
in recursiveInverseCall currentIndex = 7
inserting 5
in recursiveInverseCall currentIndex = 5
inserting 2
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 7
FIRST PARAM = p
it2->ans1 = 5
it2->ans1 = 7
it2->ans1 = 6
it2->ans1 = 4
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 4
RETURNING FINAL ANSWERS




Your answer: Fifth Seventh Sixth Fourth First Second 
Correct answer: First Second Fourth Fifth Sixth Seventh 
15 - Calls* ::
procedure p;
Select p such that Calls* (p, "Second")
First, Second, Fourth, Fifth, Sixth, Seventh
5000
Evaluating query 15 - Calls* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*(p, "Second")

 EVALUATING CALLS* (p "Second")
---STARTING CALLS STAR---
in recursiveInverseCall currentIndex = 2
inserting 1
in recursiveInverseCall currentIndex = 1
inserting 4
in recursiveInverseCall currentIndex = 4
inserting 2
in recursiveInverseCall currentIndex = 2
inserting 1
in recursiveInverseCall currentIndex = 6
inserting 4
in recursiveInverseCall currentIndex = 7
inserting 5
in recursiveInverseCall currentIndex = 5
inserting 2
inserting 6
in recursiveInverseCall currentIndex = 6
inserting 4
in recursiveInverseCall currentIndex = 7
inserting 5
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 11
FIRST PARAM = p
it2->ans1 = 5
it2->ans1 = 4
it2->ans1 = 6
it2->ans1 = 2
it2->ans1 = 5
it2->ans1 = 7
it2->ans1 = 6
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 4
it2->ans1 = 1
RETURNING FINAL ANSWERS




Your answer: Fifth Fourth Sixth Second Seventh First 
Correct answer: First Second Fourth Fifth Sixth Seventh 
16 - Calls* ::
procedure p;
Select p such that Calls* (p, p)
First, Second, Fourth, Fifth, Sixth, Seventh
5000
Evaluating query 16 - Calls* ::
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*(p, p)

 EVALUATING CALLS* (p p)
---STARTING CALLS STAR---
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Insert links for tk2 = p
IN INSERT LINKS INSERTING TOKEN = p
p Found in Linkages
---END OF CALLS STAR---
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = p p.size = 0
FIRST PARAM = p
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: First Second Fourth Fifth Sixth Seventh 
Missing: Fifth First Fourth Second Seventh Sixth 
Additional: 
End of evaluating Query File.
AutoTester Completed !
