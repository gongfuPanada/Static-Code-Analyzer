Parameters : Source1D.txt QBasic1D-modifies-proc.txt ResultQBasic1D-modifies-proc.xml
Beginning to parse Simple Program.
Begin CodeParser
End CodeParser
Begin DesignExtractor
DE: Extracted Relationships
Building CFG
End DesignExtractor
End of parsing Simple Program.
Iteration1
Beginning to evaluate Query File.
New Category :  BASIC queries with modifies procedure
1 - Modifies ::
procedure p; variable v;
Select p such that Modifies (p, v)
First, Second, Third, Fourth, Fifth, Sixth
5000
Evaluating query 1 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, v)

 EVALUATING MODIFIES (p v)
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 15
FIRST PARAM = p
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 1
Case 1.1
Tuple Table Size: 15
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p
End handling unprocessed selected synonyms
2
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: First Second Third Fourth Fifth Sixth 
Correct answer: First Second Third Fourth Fifth Sixth 
2 - Modifies ::
procedure p; variable v;
Select p such that Modifies (p, "x")
First, Second
5000
Evaluating query 2 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, "x")

 EVALUATING MODIFIES (p "x")
In Modifies(p, "var")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 3
FIRST PARAM = p
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 5
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 2
Case 2.2
Tuple Table Size: 3
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p
End handling unprocessed selected synonyms
1
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: First Second Fifth 
Correct answer: First Second 
Missing: 
Additional: Fifth 
3 - Modifies ::
procedure p; variable v;
Select p such that Modifies (p, "wrong")

5000
Evaluating query 3 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, "wrong")

 EVALUATING MODIFIES (p "wrong")
In Modifies(p, "var")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = p p.size = 0
FIRST PARAM = p
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
empty clause detected, returning empty table
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p
p has not been processed
End handling unprocessed selected synonyms
<exception/>
4 - Modifies ::
procedure p; variable v;
Select BOOLEAN such that Modifies ("First", "x")
true
5000
Evaluating query 4 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("First", "x")

 EVALUATING MODIFIES ("First" "x")
Modifies("Procname", "VarName")
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 4
End creating tuple table




Your answer: true 
Correct answer: true 
5 - Modifies ::
procedure p; variable v;
Select BOOLEAN such that Modifies ("Fourth", _)
true
5000
Evaluating query 5 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("Fourth", _)

 EVALUATING MODIFIES ("Fourth" _)
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 4
End creating tuple table




Your answer: true 
Correct answer: true 
6 - Modifies ::
procedure p; variable v; 
Select BOOLEAN such that Modifies (p, "y")
true
5000
Evaluating query 6 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, "y")

 EVALUATING MODIFIES (p "y")
In Modifies(p, "var")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 2
Case 2.2
Tuple Table Size: 4
End creating tuple table




Your answer: true 
Correct answer: true 
7 - Modifies ::
procedure p; variable v;
Select BOOLEAN such that Modifies (p, "wrong")
false
5000
Evaluating query 7 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, "wrong")

 EVALUATING MODIFIES (p "wrong")
In Modifies(p, "var")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
empty clause detected, returning empty table
End creating tuple table




Your answer: false 
Correct answer: false 
8 - Modifies ::
procedure p; variable v; 
Select BOOLEAN such that Modifies ("Third", v)
true
5000
Evaluating query 8 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("Third", v)

 EVALUATING MODIFIES ("Third" v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 3
Case 3.2
Tuple Table Size: 2
End creating tuple table




Your answer: true 
Correct answer: true 
9 - Modifies ::
procedure p; variable v;
Select BOOLEAN such that Modifies ("Fourth", "y")
true
5000
Evaluating query 9 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("Fourth", "y")

 EVALUATING MODIFIES ("Fourth" "y")
Modifies("Procname", "VarName")
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 4
End creating tuple table




Your answer: true 
Correct answer: true 
10 - Modifies ::
procedure p; variable v;
Select p such that Modifies (p, "y")
First, Second, Fourth, Sixth
5000
Evaluating query 10 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, "y")

 EVALUATING MODIFIES (p "y")
In Modifies(p, "var")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 4
FIRST PARAM = p
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 4
it2->ans1 = 6
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 2
Case 2.2
Tuple Table Size: 4
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p
End handling unprocessed selected synonyms
1
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: First Second Fourth Sixth 
Correct answer: First Second Fourth Sixth 
11 - Modifies ::
procedure p; variable v;
Select p such that Modifies (p, "z")
First, Second, Third
5000
Evaluating query 11 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, "z")

 EVALUATING MODIFIES (p "z")
In Modifies(p, "var")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 3
FIRST PARAM = p
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 2
Case 2.2
Tuple Table Size: 3
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p
End handling unprocessed selected synonyms
1
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: First Second Third 
Correct answer: First Second Third 
12 - Modifies ::
procedure p; variable v;
Select p such that Modifies (p, "wrong")

5000
Evaluating query 12 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, "wrong")

 EVALUATING MODIFIES (p "wrong")
In Modifies(p, "var")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = p p.size = 0
FIRST PARAM = p
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
empty clause detected, returning empty table
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p
p has not been processed
End handling unprocessed selected synonyms
<exception/>
13 - Modifies ::
procedure p; variable v;
Select v such that Modifies (p, v)
i, v, x, y, z
5000
Evaluating query 13 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, v)

 EVALUATING MODIFIES (p v)
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 15
FIRST PARAM = p
SECOND PARAM = v
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 3
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 1
Case 1.1
Tuple Table Size: 15
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: v
End handling unprocessed selected synonyms
2
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: x i y z v 
Correct answer: i v x y z 
14 - Modifies ::
procedure p; variable v;
Select v such that Modifies ("Second", v)
i, x, y, z
5000
Evaluating query 14 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("Second", v)

 EVALUATING MODIFIES ("Second" v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 5
FIRST PARAM = "Second"
SECOND PARAM = v
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 3
Case 3.2
Tuple Table Size: 5
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: v
End handling unprocessed selected synonyms
1
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: x i y z v 
Correct answer: i x y z 
Missing: 
Additional: v 
15 - Modifies ::
procedure p; variable v;
Select v such that Modifies ("Fourth", v)
y
5000
Evaluating query 15 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("Fourth", v)

 EVALUATING MODIFIES ("Fourth" v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 1
FIRST PARAM = "Fourth"
SECOND PARAM = v
it2->ans2 = 3
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 3
Case 3.2
Tuple Table Size: 1
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: v
End handling unprocessed selected synonyms
1
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: y 
Correct answer: y 
16 - Modifies ::
procedure p; variable v;
Select BOOLEAN such that Modifies(p, v)
true
5000
Evaluating query 16 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, v)

 EVALUATING MODIFIES (p v)
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 1
Case 1.1
Tuple Table Size: 15
End creating tuple table




Your answer: true 
Correct answer: true 
17 - Modifies ::
procedure p; variable v;
Select p such that Modifies(p, _)
First, Second, Third, Fourth, Fifth, Sixth
5000
Evaluating query 17 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, _)

 EVALUATING MODIFIES (p _)
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 15
FIRST PARAM = p
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 2
Case 2.2
Tuple Table Size: 15
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p
End handling unprocessed selected synonyms
1
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: First Second Third Fourth Fifth Sixth 
Correct answer: First Second Third Fourth Fifth Sixth 
18 - Modifies ::
procedure p; variable v;
Select BOOLEAN such that Modifies(p, _)
true
5000
Evaluating query 18 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, _)

 EVALUATING MODIFIES (p _)
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 2
Case 2.2
Tuple Table Size: 15
End creating tuple table




Your answer: true 
Correct answer: true 
19 - Modifies ::
procedure p; variable v;
Select v such that Modifies (p, "x")
x
5000
Evaluating query 19 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, "x")

 EVALUATING MODIFIES (p "x")
In Modifies(p, "var")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 2
Case 2.2
Tuple Table Size: 3
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: v
v has not been processed
End handling unprocessed selected synonyms
2
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: x i y z v 
Correct answer: x 
Missing: 
Additional: i v y z 
20 - Modifies ::
procedure p; variable v;
Select p such that Modifies ("Sixth", "y")
Sixth
5000
Evaluating query 20 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("Sixth", "y")

 EVALUATING MODIFIES ("Sixth" "y")
Modifies("Procname", "VarName")
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 4
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p
p has not been processed
End handling unprocessed selected synonyms
1
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: First Second Third Fourth Fifth Sixth 
Correct answer: Sixth 
Missing: 
Additional: Fifth First Fourth Second Third 
21 - Modifies ::
procedure p; variable v;
Select v such that Modifies ("Third", "z")
z
5000
Evaluating query 21 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("Third", "z")

 EVALUATING MODIFIES ("Third" "z")
Modifies("Procname", "VarName")
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 4
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: v
v has not been processed
End handling unprocessed selected synonyms
1
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: x i y z v 
Correct answer: z 
Missing: 
Additional: i v x y 
22 - Modifies ::
procedure p; variable v;
Select v such that Modifies ("Third", "wrong")

5000
Evaluating query 22 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("Third", "wrong")

 EVALUATING MODIFIES ("Third" "wrong")
Modifies("Procname", "VarName")
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 4
Begin handling unprocessed selected synonyms
Checking for the: v
v has not been processed
End handling unprocessed selected synonyms
<exception/>
23 - Modifies ::
procedure p; variable v;
Select p such that Modifies ("Third", _)
Third
5000
Evaluating query 23 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("Third", _)

 EVALUATING MODIFIES ("Third" _)
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 4
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p
p has not been processed
End handling unprocessed selected synonyms
1
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: First Second Third Fourth Fifth Sixth 
Correct answer: Third 
Missing: 
Additional: Fifth First Fourth Second Sixth 
24 - Modifies ::
procedure p; variable v;
Select v such that Modifies ("Fourth", _)
y
5000
Evaluating query 24 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("Fourth", _)

 EVALUATING MODIFIES ("Fourth" _)
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 4
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: v
v has not been processed
End handling unprocessed selected synonyms
1
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: x i y z v 
Correct answer: y 
Missing: 
Additional: i v x z 
25 - Modifies ::
procedure p; variable v;
Select p such that Modifies ("Fourth", v)
Fourth
5000
Evaluating query 25 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("Fourth", v)

 EVALUATING MODIFIES ("Fourth" v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 3
Case 3.2
Tuple Table Size: 1
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p
p has not been processed
End handling unprocessed selected synonyms
2
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: First Second Third Fourth Fifth Sixth 
Correct answer: Fourth 
Missing: 
Additional: Fifth First Second Sixth Third 
26 - Modifies ::
procedure p; variable v;
Select p such that Modifies ("DoesNotExist", v)

5000
Evaluating query 26 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("DoesNotExist", v)

 EVALUATING MODIFIES ("DoesNotExist" v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
empty clause detected, returning empty table
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p
p has not been processed
End handling unprocessed selected synonyms
<exception/>
27 - Modifies ::
procedure p; variable v;
Select p such that Modifies ("DoesNotExist", _)

5000
Evaluating query 27 - Modifies ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("DoesNotExist", _)

 EVALUATING MODIFIES ("DoesNotExist" _)
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 4
Begin handling unprocessed selected synonyms
Checking for the: p
p has not been processed
End handling unprocessed selected synonyms
<exception/>
End of evaluating Query File.
AutoTester Completed !
