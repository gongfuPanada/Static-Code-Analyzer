Parameters : Source1.txt Queries1-1.txt ResultQueries1-1.xml
Beginning to parse Simple Program.
Begin CodeParser
End CodeParser
Begin DesignExtractor
DE: Extracted Relationships
Building CFG
End DesignExtractor
End of parsing Simple Program.
iteration0
Beginning to evaluate Query File.
New Category :  Iteration 1 requirements
1 - Follows, Typed, ImplStmtLine :: Which statement is followed by statement in line 7
assign a;
Select a such that Follows(a, 7)
6
5000
Evaluating query 1 - Follows, Typed, ImplStmtLine :: Which statement is followed by statement in line 7
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(a, 7)

 EVALUATING FOLLOWS (a 7)
IN INSERT LINKS INSERTING TOKEN = a
a Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 6
RETURNING FINAL ANSWERS
End evaluate query




Your answer: 6 
Correct answer: 6 
2 - Follows, Typed, ImplStmtLine :: Which assign statement follows statement in line 3
assign a;
Select a such that Follows(3, a)
none
5000
Evaluating query 2 - Follows, Typed, ImplStmtLine :: Which assign statement follows statement in line 3
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(3, a)

 EVALUATING FOLLOWS (3 a)
Second token is alpha and it does not exist in linkages
First token is digit
Answer is = -1
followsAns.size = 0
IN INSERT LINKS INSERTING TOKEN = a
a Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty




Your answer: 
Correct answer: 
3 - Follows, Typed, ImplStmtLine :: Which statement follows statement in line 4
stmt s;
Select s such that Follows(4, s)
5
5000
Evaluating query 3 - Follows, Typed, ImplStmtLine :: Which statement follows statement in line 4
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(4, s)

 EVALUATING FOLLOWS (4 s)
Second token is alpha and it does not exist in linkages
First token is digit
Answer is = 5
followsAns.size = 1
IN INSERT LINKS INSERTING TOKEN = s
s Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = 4
SECOND PARAM = s
it2->ans2 = 5
RETURNING FINAL ANSWERS
End evaluate query




Your answer: 5 
Correct answer: 5 
4 - Follows, Boolean :: Is Follows(6, 7) true

Select BOOLEAN such that Follows(6, 7)
true
5000
Evaluating query 4 - Follows, Boolean :: Is Follows(6, 7) true
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(6, 7)

 EVALUATING FOLLOWS (6 7)
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query




Your answer: true 
Correct answer: true 
5 - Follows, Boolean :: Is Follows(5, 6) true

Select BOOLEAN such that Follows(5, 6)
false
5000
Evaluating query 5 - Follows, Boolean :: Is Follows(5, 6) true
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(5, 6)

 EVALUATING FOLLOWS (5 6)
Inserting tokens into relParameters
Found Relations to be False or Empty
End evaluate query




Your answer: false 
Correct answer: false 
End of evaluating Query File.
AutoTester Completed !
