Parameters : Source2A.txt QBasic2X-profstan.txt ResultQBasic2X-profstan.xml
Beginning to parse Simple Program.
Begin CodeParser
End CodeParser
Begin DesignExtractor
DE: Extracted Relationships
Building CFG
End DesignExtractor
End of parsing Simple Program.
iteration2
Beginning to evaluate Query File.
New Category :  All Category
1 - ParenStar ::
while w;
Select w such that Parent*(w, 13)
9
5000
Evaluating query 1 - ParenStar ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent*(w, 13)

 EVALUATING PARENT* (w 13)
Initialzing all Parent* variables
tk2 is Integer 13
TOKEN1 FOUND NOT TO EXIST IN LINKAGES
Set is Empty: 0
Insert stmtNum = 9 into set
IN INSERT LINKS INSERTING TOKEN = w
w Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = w p.size = 1
FIRST PARAM = w
it2->ans1 = 9
RETURNING FINAL ANSWERS




Your answer: 9 
Correct answer: 9 
2 - FollowsStar ::
stmt s; while w;
Select w such that Follows* (s, w)
9
5000
Evaluating query 2 - FollowsStar ::
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(s, w)

 EVALUATING FOLLOWS* (s w)
In intersect Pairs: both do not exist
Insert links for tk1 =s
IN INSERT LINKS INSERTING TOKEN = s
s Not Found in Linkages and relIndex = 0
Insert links for tk2 = w
IN INSERT LINKS INSERTING TOKEN = w
w Not Found in Linkages and relIndex = 0
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = w p.size = 1
FIRST PARAM = s
SECOND PARAM = w
it2->ans2 = 9
RETURNING FINAL ANSWERS




Your answer: 9 
Correct answer: 9 
3 - FollowsStar ::
if ifstat;
Select ifstat such that Follows* (ifstat, 17)
11
5000
Evaluating query 3 - FollowsStar ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(ifstat, 17)

 EVALUATING FOLLOWS* (ifstat 17)
Handling Follows*(type, stmtnum) with tk2 = 17
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 11
Inserting StmtNumber 11 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 10
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =ifstat
IN INSERT LINKS INSERTING TOKEN = ifstat
ifstat Not Found in Linkages and relIndex = 0
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = ifstat p.size = 1
FIRST PARAM = ifstat
it2->ans1 = 11
RETURNING FINAL ANSWERS




Your answer: 11 
Correct answer: 11 
4 - Modifies ::
variable v;
Select v such that Modifies (9, v)
idx,t,x,y,z
5000
Evaluating query 4 - Modifies ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(9, v)

 EVALUATING MODIFIES (9 v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 5
FIRST PARAM = 9
SECOND PARAM = v
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 5
it2->ans2 = 6
RETURNING FINAL ANSWERS




Your answer: y x z t idx 
Correct answer: idx t x y z 
5 - Modifies, Uses ::
assign a;
Select a such that Modifies (a, "idx") and Uses (a, "idx")
16,22
5000
Evaluating query 5 - Modifies, Uses ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
relationships with only one alpha token found
After Ordering Relations, r.size = 2
Initializing Variables
 
modifies(a, "idx")

 EVALUATING MODIFIES (a "idx")
6
answer is empty: 0
modifiesAnswer9 6
modifiesAnswer11 6
modifiesAnswer13 6
modifiesAnswer16 6
modifiesAnswer18 6
modifiesAnswer19 6
modifiesAnswer22 6
In intersect Pairs: both do not exist
Insert links for tk1 =a
IN INSERT LINKS INSERTING TOKEN = a
a Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
uses(a, "idx")

 EVALUATING USES (a "idx")
IntersectPairs tk1 Exists tk1 = a
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
13
16
22
End retrieving token
in for loop
pair index is 116
in for loop
pair index is 122
in for loop
pair index is 123
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 16
Inserting 22
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 6
Insert links for tk1 =a
IN INSERT LINKS INSERTING TOKEN = a
a Found in Linkages
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 2
FIRST PARAM = a
it2->ans1 = 16
it2->ans1 = 22
RETURNING FINAL ANSWERS




Your answer: 16 22 
Correct answer: 16 22 
6 - CallsStar ::
procedure p;
Select p such that Calls* (p, "Tulip")
Fern,Orchid
5000
Evaluating query 6 - CallsStar ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*(p, "Tulip")

 EVALUATING CALLS* (p "Tulip")
---STARTING CALLS STAR---
in recursiveInverseCall currentIndex = 4
inserting 1
in recursiveInverseCall currentIndex = 1
inserting 2
in recursiveInverseCall currentIndex = 2
inserting 1
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 2
FIRST PARAM = p
it2->ans1 = 2
it2->ans1 = 1
RETURNING FINAL ANSWERS




Your answer: Orchid Fern 
Correct answer: Fern Orchid 
7 -Pattern ::
assign a;
Select a pattern a ("y", "2 * x")
none
5000
Evaluating query 7 -Pattern ::
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 1
Initializing Variables
 
pattern("y", "2 * x")

 EVALUATING PATTERN
IN INSERT LINKS INSERTING TOKEN = a
a Not Found in Linkages and relIndex = 0
PATTERN WITH THE FOLLOWING ARGUMENTS: a "2 * x" "y"
START DFS
NOW AT PROG_LINE -1
NOW AT PROG_LINE -1
NOW AT PROG_LINE -1
NOW AT PROG_LINE 27
NOW AT PROG_LINE 27
NOW AT PROG_LINE 28
NOW AT PROG_LINE 28
NOW AT PROG_LINE 30
NOW AT PROG_LINE 28
NOW AT PROG_LINE 29
NOW AT PROG_LINE 28
NOW AT PROG_LINE 27
NOW AT PROG_LINE -1
NOW AT PROG_LINE -1
NOW AT PROG_LINE 26
NOW AT PROG_LINE 24
NOW AT PROG_LINE 24
NOW AT PROG_LINE 25
NOW AT PROG_LINE 24
NOW AT PROG_LINE -1
NOW AT PROG_LINE -1
NOW AT PROG_LINE 23
NOW AT PROG_LINE 19
NOW AT PROG_LINE 19
NOW AT PROG_LINE 22
NOW AT PROG_LINE 21
NOW AT PROG_LINE 20
NOW AT PROG_LINE 19
NOW AT PROG_LINE -1
NOW AT PROG_LINE -1
NOW AT PROG_LINE 18
NOW AT PROG_LINE 9
NOW AT PROG_LINE 9
NOW AT PROG_LINE 17
NOW AT PROG_LINE 11
NOW AT PROG_LINE 11
NOW AT PROG_LINE 16
NOW AT PROG_LINE 15
NOW AT PROG_LINE 14
NOW AT PROG_LINE 11
NOW AT PROG_LINE 13
NOW AT PROG_LINE 12
NOW AT PROG_LINE 11
NOW AT PROG_LINE 10
NOW AT PROG_LINE 9
NOW AT PROG_LINE 8
NOW AT PROG_LINE 7
NOW AT PROG_LINE 6
NOW AT PROG_LINE 5
NOW AT PROG_LINE 4
NOW AT PROG_LINE 3
NOW AT PROG_LINE 2
NOW AT PROG_LINE 1
PRINTING PATTERNANS
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a p.size = 0
FIRST PARAM = a
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
8 - NextStar ::
prog_line n;
Select n such that Next* (10, n) and Next* (n, 9)
9,10,11,12,13,14,15,16,17
5000
Evaluating query 8 - NextStar ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
relationships with only one alpha token found
After Ordering Relations, r.size = 2
Initializing Variables
 
next*(10, n)

 EVALUATING NEXT* (10 n)
In intersect Pairs: both do not exist
Insert links for tk2 = n
IN INSERT LINKS INSERTING TOKEN = n
n Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
next*(n, 9)

 EVALUATING NEXT* (n 9)
In Next*(token, digit)
Traversing 8
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 7
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 6
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 5
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 4
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 3
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 2
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 1
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 17
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 13
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 12
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 11
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 10
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 9
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 8
Type is progline
Node traversed before. Moving on to next node
SynType match, inserting pair
Traversing 13
Type is progline
Node traversed before. Moving on to next node
SynType match, inserting pair
Traversing 15
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 14
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 11
Type is progline
Node traversed before. Moving on to next node
Traversing 16
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 15
Type is progline
Node traversed before. Moving on to next node
Pushing into answer the pair 14and9
Pushing into answer the pair 15and9
Pushing into answer the pair 16and9
Pushing into answer the pair 17and9
Pushing into answer the pair 9and9
Pushing into answer the pair 10and9
Pushing into answer the pair 11and9
Pushing into answer the pair 12and9
Pushing into answer the pair 13and9
Pushing into answer the pair 17and9
Pushing into answer the pair 1and9
Pushing into answer the pair 2and9
Pushing into answer the pair 3and9
Pushing into answer the pair 4and9
Pushing into answer the pair 5and9
Pushing into answer the pair 6and9
Pushing into answer the pair 7and9
Pushing into answer the pair 8and9
IntersectPairs tk1 Exists tk1 = n
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = n
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
9
10
11
12
13
14
15
16
17
18
End retrieving token
in for loop
pair index is 114
in for loop
pair index is 115
in for loop
pair index is 116
in for loop
pair index is 117
in for loop
pair index is 19
in for loop
pair index is 110
in for loop
pair index is 111
in for loop
pair index is 112
in for loop
pair index is 113
in for loop
pair index is 117
in for loop
pair index is 11
in for loop
pair index is 12
in for loop
pair index is 13
in for loop
pair index is 14
in for loop
pair index is 15
in for loop
pair index is 16
in for loop
pair index is 17
in for loop
pair index is 18
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 14
Inserting 15
Inserting 16
Inserting 17
Inserting 9
Inserting 10
Inserting 11
Inserting 12
Inserting 13
Inserting 17
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 18
Insert links for tk1 =n
IN INSERT LINKS INSERTING TOKEN = n
n Found in Linkages
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = n p.size = 9
FIRST PARAM = 10
SECOND PARAM = n
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
RETURNING FINAL ANSWERS




Your answer: 16 15 14 10 9 17 13 12 11 
Correct answer: 9 10 11 12 13 14 15 16 17 
9 - Modifies, Uses, Follows, ParentStar :: Tests multiple clauses (it is not in Assignment 1).
assign a; while w;
Select a such that Modifies (a, "idx") and Uses (a, "idx") and Follows (15, a) and Parent* (w, a)
16
5000
Evaluating query 9 - Modifies, Uses, Follows, ParentStar :: Tests multiple clauses (it is not in Assignment 1).
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
relationships with only one alpha token found
relationships with only one alpha token found
After Ordering Relations, r.size = 4
Initializing Variables
 
modifies(a, "idx")

 EVALUATING MODIFIES (a "idx")
6
answer is empty: 0
modifiesAnswer9 6
modifiesAnswer11 6
modifiesAnswer13 6
modifiesAnswer16 6
modifiesAnswer18 6
modifiesAnswer19 6
modifiesAnswer22 6
In intersect Pairs: both do not exist
Insert links for tk1 =a
IN INSERT LINKS INSERTING TOKEN = a
a Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
uses(a, "idx")

 EVALUATING USES (a "idx")
IntersectPairs tk1 Exists tk1 = a
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
13
16
22
End retrieving token
in for loop
pair index is 116
in for loop
pair index is 122
in for loop
pair index is 123
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 16
Inserting 22
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 6
Insert links for tk1 =a
IN INSERT LINKS INSERTING TOKEN = a
a Found in Linkages
Inserting tokens into relParameters
 
follows(15, a)

 EVALUATING FOLLOWS (15 a)
a Found to Exist in Linkages
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
16
22
End retrieving token

---START REMOVE PAIRS METHOD---
Inserting 16
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 6
RelIndex of clause with contents being removed: 1
PairIndex: 1
Erasing element 6
IN INSERT LINKS INSERTING TOKEN = a
a Found in Linkages
Inserting tokens into relParameters
 
parent*(w, a)

 EVALUATING PARENT* (w a)
Initialzing all Parent* variables
If both tokens are alpha or one of them is a wildcard
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
16
End retrieving token
sb is Empty: 0
Iterating token 2 set Sb
IN INSERT LINKS INSERTING TOKEN = w
w Not Found in Linkages and relIndex = 3
IN INSERT LINKS INSERTING TOKEN = a
a Found in Linkages
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 16
RETURNING FINAL ANSWERS




Your answer: 16 
Correct answer: 16 
End of evaluating Query File.
AutoTester Completed !
