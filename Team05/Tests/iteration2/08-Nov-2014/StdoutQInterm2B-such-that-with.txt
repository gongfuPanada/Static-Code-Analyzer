Parameters : Source2A.txt QInterm2B-such-that-with.txt ResultQInterm2B-such-that-with.xml
Beginning to parse Simple Program.
Begin CodeParser
End CodeParser
Begin DesignExtractor
DE: Extracted Relationships
Building CFG
End DesignExtractor
End of parsing Simple Program.
Iteration2
Beginning to evaluate Query File.
New Category :  such that and with compound clauses
1 - multiple ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v1, v2; constant c1, c2;
Select p2 such that Calls (p1, p2) with p1.procName = "Fern"
Tulip, Lily, Orchid
5000
Evaluating query 1 - multiple ::
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
calls(p1, p2)

 EVALUATING CALLS (p1 p2)
it = 1 it2 = 2
it = 1 it2 = 3
it = 1 it2 = 4
it = 2 it2 = 4
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
with(p1, "Fern")

 EVALUATING WITH (p1 "Fern")

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: p1
r.tk2: "Fern"
only 1 alpha token found
procedure
null
First token PROCEDURE
tk2 = "Fern" index = 1
IntersectPairs tk1 Exists tk1 = p1
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = p1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
End retrieving token
in for loop
pair index is 11
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 4
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p2 p.size = 3
FIRST PARAM = p1
SECOND PARAM = p2
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
RETURNING FINAL ANSWERS




Your answer: Orchid Lily Tulip 
Correct answer: Tulip Lily Orchid 
2 - multiple ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v1, v2; constant c1, c2;
Select a1 such that Modifies(a1, v1) and Uses (a1, v2) with v1.varName = "x" with v2.varName = "y"
2, 14, 17, 26, 29
5000
Evaluating query 2 - multiple ::
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 4
Initializing Variables
 
modifies(a1, v1)

 EVALUATING MODIFIES (a1 v1)
In intersect Pairs: both do not exist
Insert links for tk1 =a1
IN INSERT LINKS INSERTING TOKEN = a1
a1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
uses(a1, v2)

 EVALUATING USES (a1 v2)
IntersectPairs tk1 Exists tk1 = a1
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = a1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
6
8
10
12
13
14
16
17
20
22
23
25
26
29
30
End retrieving token
in for loop
pair index is 12
in for loop
pair index is 13
in for loop
pair index is 13
in for loop
pair index is 14
in for loop
pair index is 14
in for loop
pair index is 16
in for loop
pair index is 16
in for loop
pair index is 16
in for loop
pair index is 18
in for loop
pair index is 18
in for loop
pair index is 18
in for loop
pair index is 110
in for loop
pair index is 110
in for loop
pair index is 112
in for loop
pair index is 112
in for loop
pair index is 113
in for loop
pair index is 114
in for loop
pair index is 114
in for loop
pair index is 116
in for loop
pair index is 117
in for loop
pair index is 117
in for loop
pair index is 120
in for loop
pair index is 120
in for loop
pair index is 122
in for loop
pair index is 123
in for loop
pair index is 123
in for loop
pair index is 123
in for loop
pair index is 125
in for loop
pair index is 125
in for loop
pair index is 126
in for loop
pair index is 126
in for loop
pair index is 129
in for loop
pair index is 130
in for loop
pair index is 130
in for loop
pair index is 130
in for loop
pair index is 130
in for loop
pair index is 130
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 2
Inserting 3
Inserting 3
Inserting 4
Inserting 4
Inserting 6
Inserting 6
Inserting 6
Inserting 8
Inserting 8
Inserting 8
Inserting 10
Inserting 10
Inserting 12
Inserting 12
Inserting 13
Inserting 14
Inserting 14
Inserting 16
Inserting 17
Inserting 17
Inserting 20
Inserting 20
Inserting 22
Inserting 23
Inserting 23
Inserting 23
Inserting 25
Inserting 25
Inserting 26
Inserting 26
Inserting 29
Inserting 30
Inserting 30
Inserting 30
Inserting 30
Inserting 30
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 1
Insert links for tk1 =a1
IN INSERT LINKS INSERTING TOKEN = a1
a1 Found in Linkages
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Not Found in Linkages and relIndex = 1
Inserting tokens into relParameters
 
with(v2, "y")

 EVALUATING WITH (v2 "y")

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: v2
r.tk2: "y"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "y" index = 1
IntersectPairs tk1 Exists tk1 = v2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
End retrieving token
in for loop
pair index is 11
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 2
Erasing element 2
Erasing element 3
Erasing element 2
Erasing element 4
Erasing element 2
Erasing element 4
Erasing element 2
Erasing element 3
Erasing element 3
Erasing element 3
Erasing element 3
Erasing element 6
Erasing element 3
Erasing element 2
Erasing element 3
Erasing element 6
Erasing element 3
Erasing element 6
Erasing element 2
Erasing element 2
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Insert links for tk1 =v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, "x")

 EVALUATING WITH (v1 "x")

---START EVALUATE WITH METHOD---
Relationship Index: 3
r.tk1: v1
r.tk2: "x"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "x" index = 2
IntersectPairs tk1 Exists tk1 = v1
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
End retrieving token
in for loop
pair index is 12
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 2
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 3
Erasing element 4
Erasing element 4
Erasing element 5
Erasing element 5
Erasing element 3
Erasing element 6
Erasing element 6
Erasing element 1
Erasing element 6
Erasing element 3
Erasing element 1
Erasing element 1
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a1 p.size = 5
FIRST PARAM = a1
it2->ans1 = 2
it2->ans1 = 14
it2->ans1 = 17
it2->ans1 = 26
it2->ans1 = 29
RETURNING FINAL ANSWERS




Your answer: 2 14 17 26 29 
Correct answer: 2 14 17 26 29 
3 - multiple ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v1, v2; constant c1, c2;
Select s1 such that Modifies (s1, v1) and Uses (s1, v2) with v1.varName = "x" with v2.varName = "y" with s1.stmt# = 9
9
5000
Evaluating query 3 - multiple ::
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
with relationship found
After Ordering Relations, r.size = 5
Initializing Variables
 
modifies(s1, v1)

 EVALUATING MODIFIES (s1 v1)
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
uses(s1, v2)

 EVALUATING USES (s1 v2)
IntersectPairs tk1 Exists tk1 = s1
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
End retrieving token
in for loop
pair index is 12
in for loop
pair index is 13
in for loop
pair index is 13
in for loop
pair index is 14
in for loop
pair index is 14
in for loop
pair index is 15
in for loop
pair index is 15
in for loop
pair index is 15
in for loop
pair index is 15
in for loop
pair index is 15
in for loop
pair index is 15
in for loop
pair index is 16
in for loop
pair index is 16
in for loop
pair index is 16
in for loop
pair index is 17
in for loop
pair index is 17
in for loop
pair index is 17
in for loop
pair index is 18
in for loop
pair index is 18
in for loop
pair index is 18
in for loop
pair index is 19
in for loop
pair index is 19
in for loop
pair index is 19
in for loop
pair index is 19
in for loop
pair index is 19
in for loop
pair index is 110
in for loop
pair index is 110
in for loop
pair index is 111
in for loop
pair index is 111
in for loop
pair index is 111
in for loop
pair index is 111
in for loop
pair index is 111
in for loop
pair index is 112
in for loop
pair index is 112
in for loop
pair index is 113
in for loop
pair index is 114
in for loop
pair index is 114
in for loop
pair index is 115
in for loop
pair index is 115
in for loop
pair index is 115
in for loop
pair index is 116
in for loop
pair index is 117
in for loop
pair index is 117
in for loop
pair index is 118
in for loop
pair index is 118
in for loop
pair index is 118
in for loop
pair index is 118
in for loop
pair index is 118
in for loop
pair index is 118
in for loop
pair index is 119
in for loop
pair index is 119
in for loop
pair index is 119
in for loop
pair index is 119
in for loop
pair index is 119
in for loop
pair index is 119
in for loop
pair index is 120
in for loop
pair index is 120
in for loop
pair index is 121
in for loop
pair index is 121
in for loop
pair index is 121
in for loop
pair index is 121
in for loop
pair index is 121
in for loop
pair index is 121
in for loop
pair index is 122
in for loop
pair index is 123
in for loop
pair index is 123
in for loop
pair index is 123
in for loop
pair index is 124
in for loop
pair index is 124
in for loop
pair index is 124
in for loop
pair index is 125
in for loop
pair index is 125
in for loop
pair index is 126
in for loop
pair index is 126
in for loop
pair index is 127
in for loop
pair index is 127
in for loop
pair index is 127
in for loop
pair index is 127
in for loop
pair index is 127
in for loop
pair index is 127
in for loop
pair index is 128
in for loop
pair index is 128
in for loop
pair index is 128
in for loop
pair index is 128
in for loop
pair index is 128
in for loop
pair index is 128
in for loop
pair index is 129
in for loop
pair index is 130
in for loop
pair index is 130
in for loop
pair index is 130
in for loop
pair index is 130
in for loop
pair index is 130
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 2
Inserting 3
Inserting 3
Inserting 4
Inserting 4
Inserting 5
Inserting 5
Inserting 5
Inserting 5
Inserting 5
Inserting 5
Inserting 6
Inserting 6
Inserting 6
Inserting 7
Inserting 7
Inserting 7
Inserting 8
Inserting 8
Inserting 8
Inserting 9
Inserting 9
Inserting 9
Inserting 9
Inserting 9
Inserting 10
Inserting 10
Inserting 11
Inserting 11
Inserting 11
Inserting 11
Inserting 11
Inserting 12
Inserting 12
Inserting 13
Inserting 14
Inserting 14
Inserting 15
Inserting 15
Inserting 15
Inserting 16
Inserting 17
Inserting 17
Inserting 18
Inserting 18
Inserting 18
Inserting 18
Inserting 18
Inserting 18
Inserting 19
Inserting 19
Inserting 19
Inserting 19
Inserting 19
Inserting 19
Inserting 20
Inserting 20
Inserting 21
Inserting 21
Inserting 21
Inserting 21
Inserting 21
Inserting 21
Inserting 22
Inserting 23
Inserting 23
Inserting 23
Inserting 24
Inserting 24
Inserting 24
Inserting 25
Inserting 25
Inserting 26
Inserting 26
Inserting 27
Inserting 27
Inserting 27
Inserting 27
Inserting 27
Inserting 27
Inserting 28
Inserting 28
Inserting 28
Inserting 28
Inserting 28
Inserting 28
Inserting 29
Inserting 30
Inserting 30
Inserting 30
Inserting 30
Inserting 30
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 1
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Found in Linkages
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Not Found in Linkages and relIndex = 1
Inserting tokens into relParameters
 
with(s1, 9)

 EVALUATING WITH (s1 9)

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: s1
r.tk2: 9
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 9
IntersectPairs tk1 Exists tk1 = s1
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
End retrieving token
in for loop
pair index is 19
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 9
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 1
Erasing element 2
Erasing element 5
Erasing element 5
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 6
Erasing element 3
Erasing element 6
Erasing element 2
Erasing element 1
Erasing element 2
Erasing element 6
Erasing element 2
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 6
Erasing element 1
Erasing element 2
Erasing element 6
Erasing element 1
Erasing element 1
Erasing element 2
Erasing element 6
Erasing element 3
Erasing element 1
Erasing element 1
Erasing element 2
Erasing element 1
Erasing element 2
Erasing element 1
Erasing element 2
Erasing element 2
Erasing element 1
RelIndex of clause with contents being removed: 1
PairIndex: 1
Erasing element 1
Erasing element 1
Erasing element 2
Erasing element 2
Erasing element 3
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 2
Erasing element 3
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 6
Erasing element 1
Erasing element 3
Erasing element 3
Erasing element 1
Erasing element 3
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 6
Erasing element 1
Erasing element 3
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 2
Erasing element 3
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 6
Erasing element 1
Erasing element 3
Erasing element 6
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 1
Erasing element 2
Erasing element 1
Erasing element 2
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 1
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, "x")

 EVALUATING WITH (v1 "x")

---START EVALUATE WITH METHOD---
Relationship Index: 3
r.tk1: v1
r.tk2: "x"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "x" index = 2
IntersectPairs tk1 Exists tk1 = v1
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
5
6
End retrieving token
in for loop
pair index is 12
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 2
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 1
Erasing element 3
Erasing element 5
Erasing element 6
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v2, "y")

 EVALUATING WITH (v2 "y")

---START EVALUATE WITH METHOD---
Relationship Index: 4
r.tk1: v2
r.tk2: "y"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "y" index = 1
IntersectPairs tk1 Exists tk1 = v2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
6
End retrieving token
in for loop
pair index is 11
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 6
Insert links for tk1 =v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 1
FIRST PARAM = s1
it2->ans1 = 9
RETURNING FINAL ANSWERS




Your answer: 9 
Correct answer: 9 
4 - multiple ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v1, v2; constant c1, c2;
Select p1 such that Modifies (p1, v1) and Uses (p1, v1) with v1.varName = "idx"
Fern, Tulip
5000
Evaluating query 4 - multiple ::
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 3
Initializing Variables
 
modifies(p1, v1)

 EVALUATING MODIFIES (p1 v1)
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
uses(p1, v1)

 EVALUATING USES (p1 v1)
Both tk1 and tk2 Exists tk1 = p1 tk2 = v1
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = p1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
End retrieving token
in for loop
pair index is 11
in for loop
pair index is 11
in for loop
pair index is 11
in for loop
pair index is 11
in for loop
pair index is 11
in for loop
pair index is 11
in for loop
pair index is 12
in for loop
pair index is 12
in for loop
pair index is 12
in for loop
pair index is 12
in for loop
pair index is 12
in for loop
pair index is 12
in for loop
pair index is 13
in for loop
pair index is 13
in for loop
pair index is 13
in for loop
pair index is 14
in for loop
pair index is 14
in for loop
pair index is 14
in for loop
pair index is 14
in for loop
pair index is 14
in for loop
pair index is 14
end of RemovePairsFromRelAns
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
End retrieving token
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
Inserting 1
Inserting 1
Inserting 1
Inserting 1
Inserting 1
Inserting 2
Inserting 2
Inserting 2
Inserting 2
Inserting 2
Inserting 2
Inserting 3
Inserting 3
Inserting 3
Inserting 4
Inserting 4
Inserting 4
Inserting 4
Inserting 4
Inserting 4
RelIndex of clause with contents being removed: 0
PairIndex: 1

---START REMOVE PAIRS METHOD---
Inserting 1
Inserting 2
Inserting 3
Inserting 4
Inserting 5
Inserting 6
Inserting 1
Inserting 2
Inserting 3
Inserting 4
Inserting 5
Inserting 6
Inserting 1
Inserting 2
Inserting 4
Inserting 1
Inserting 2
Inserting 3
Inserting 4
Inserting 5
Inserting 6
RelIndex of clause with contents being removed: 0
PairIndex: 2
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Found in Linkages
Insert links for tk2 = v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Found in Linkages
Inserting tokens into relParameters
 
with(v1, "idx")

 EVALUATING WITH (v1 "idx")

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: v1
r.tk2: "idx"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "idx" index = 6
IntersectPairs tk1 Exists tk1 = v1
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
End retrieving token
in for loop
pair index is 16
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 6
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 1
Erasing element 2
Erasing element 1
Erasing element 2
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p1 p.size = 2
FIRST PARAM = p1
it2->ans1 = 1
it2->ans1 = 2
RETURNING FINAL ANSWERS




Your answer: Fern Orchid 
Correct answer: Fern Tulip 
Missing: Tulip 
Additional: Orchid 
5 - multiple ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v1, v2; constant c1, c2;
Select s1 such that Parent (s1, s2) with s1.stmt# = s2.stmt#

5000
Evaluating query 5 - multiple ::
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s1, s2)

 EVALUATING PARENT (s1 s2)
tk1 = s1 tk2 = s2
pushing into parent pair1 = 9pair2 = 10
pushing into parent pair1 = 9pair2 = 11
pushing into parent pair1 = 9pair2 = 17
pushing into parent pair1 = 11pair2 = 12
pushing into parent pair1 = 11pair2 = 13
pushing into parent pair1 = 11pair2 = 14
pushing into parent pair1 = 11pair2 = 15
pushing into parent pair1 = 11pair2 = 16
pushing into parent pair1 = 19pair2 = 20
pushing into parent pair1 = 19pair2 = 21
pushing into parent pair1 = 19pair2 = 22
pushing into parent pair1 = 24pair2 = 25
pushing into parent pair1 = 27pair2 = 28
pushing into parent pair1 = 28pair2 = 29
pushing into parent pair1 = 28pair2 = 30
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
after intersect pairs
Inserting tokens into relParameters
 
with(s1, s2)

 EVALUATING WITH (s1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: s2
2 alpha tokens found
tk1 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = s1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
9
11
19
24
27
28
End retrieving token
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
10
11
12
13
14
15
16
17
20
21
22
25
28
29
30
End retrieving token
Both tk1 and tk2 Exists tk1 = s1 tk2 = s2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
9
11
19
24
27
28
End retrieving token
in for loop
pair index is 111
in for loop
pair index is 128
end of RemovePairsFromRelAns
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
10
11
12
13
14
15
16
17
20
21
22
25
28
29
30
End retrieving token
in for loop
in else
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 11
Inserting 28
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 10
Erasing element 11
Erasing element 17
Erasing element 20
Erasing element 21
Erasing element 22
Erasing element 25
Erasing element 28

---START REMOVE PAIRS METHOD---
Inserting 11
Inserting 28
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 12
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 29
Erasing element 30
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Found in Linkages
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s1 p.size = 0
FIRST PARAM = s1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
6 - multiple ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v1, v2; constant c1, c2;
Select s1 such that Parent (s1, s2) with s2.stmt# = 12
11
5000
Evaluating query 6 - multiple ::
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s1, s2)

 EVALUATING PARENT (s1 s2)
tk1 = s1 tk2 = s2
pushing into parent pair1 = 9pair2 = 10
pushing into parent pair1 = 9pair2 = 11
pushing into parent pair1 = 9pair2 = 17
pushing into parent pair1 = 11pair2 = 12
pushing into parent pair1 = 11pair2 = 13
pushing into parent pair1 = 11pair2 = 14
pushing into parent pair1 = 11pair2 = 15
pushing into parent pair1 = 11pair2 = 16
pushing into parent pair1 = 19pair2 = 20
pushing into parent pair1 = 19pair2 = 21
pushing into parent pair1 = 19pair2 = 22
pushing into parent pair1 = 24pair2 = 25
pushing into parent pair1 = 27pair2 = 28
pushing into parent pair1 = 28pair2 = 29
pushing into parent pair1 = 28pair2 = 30
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
after intersect pairs
Inserting tokens into relParameters
 
with(s2, 12)

 EVALUATING WITH (s2 12)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s2
r.tk2: 12
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 12
IntersectPairs tk1 Exists tk1 = s2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
10
11
12
13
14
15
16
17
20
21
22
25
28
29
30
End retrieving token
in for loop
pair index is 112
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 12
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 10
Erasing element 11
Erasing element 17
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 20
Erasing element 21
Erasing element 22
Erasing element 25
Erasing element 28
Erasing element 29
Erasing element 30
Insert links for tk1 =s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 1
FIRST PARAM = s1
it2->ans1 = 11
RETURNING FINAL ANSWERS




Your answer: 11 
Correct answer: 11 
7 - multiple ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v1, v2; constant c1, c2;
Select i1 such that Follows (w1, i1) with w2.stmt# = 9
28
5000
Evaluating query 7 - multiple ::
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
follows(w1, i1)

 EVALUATING FOLLOWS (w1 i1)
Both tokens are alpha and do not exist in linkages
trying is follows1
IN INSERT LINKS INSERTING TOKEN = w1
w1 Not Found in Linkages and relIndex = 0
IN INSERT LINKS INSERTING TOKEN = i1
i1 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
with(w2, 9)

 EVALUATING WITH (w2 9)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: w2
r.tk2: 9
only 1 alpha token found
while
null
First token NEITHER VAR NOR PROC
Index: 9
In intersect Pairs: both do not exist
Insert links for tk1 =w2
IN INSERT LINKS INSERTING TOKEN = w2
w2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = i1 p.size = 0
FIRST PARAM = w1
SECOND PARAM = i1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 28 
Missing: 28 
Additional: 
8 - multiple ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v1, v2; constant c1, c2;
Select s2 such that Next (i1, s2) with i1.stmt# = 11
12, 14
5000
Evaluating query 8 - multiple ::
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
next(i1, s2)

 EVALUATING NEXT (i1 s2)
Both Tokens are Alpha
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,
9 has next consisting of 10,18,
10 has next consisting of 11,
11 has next consisting of 12,14,
12 has next consisting of 13,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 9,
18 has next consisting of 
19 has next consisting of 20,23,
20 has next consisting of 21,
21 has next consisting of 22,
22 has next consisting of 19,
23 has next consisting of 
24 has next consisting of 25,26,
25 has next consisting of 24,
26 has next consisting of 
27 has next consisting of 28,
28 has next consisting of 29,30,
29 has next consisting of 27,
30 has next consisting of 27,
Pushing in pairs (11 12)
Pushing in pairs (11 14)
Pushing in pairs (28 29)
Pushing in pairs (28 30)
IN INSERT LINKS INSERTING TOKEN = i1
i1 Not Found in Linkages and relIndex = 0
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,
9 has next consisting of 10,18,
10 has next consisting of 11,
11 has next consisting of 12,14,
12 has next consisting of 13,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 9,
18 has next consisting of 
19 has next consisting of 20,23,
20 has next consisting of 21,
21 has next consisting of 22,
22 has next consisting of 19,
23 has next consisting of 
24 has next consisting of 25,26,
25 has next consisting of 24,
26 has next consisting of 
27 has next consisting of 28,
28 has next consisting of 29,30,
29 has next consisting of 27,
30 has next consisting of 27,
Inserting tokens into relParameters
 
with(i1, 11)

 EVALUATING WITH (i1 11)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: i1
r.tk2: 11
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 11
IntersectPairs tk1 Exists tk1 = i1
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = i1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
11
28
End retrieving token
in for loop
pair index is 111
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 11
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 29
Erasing element 30
Insert links for tk1 =i1
IN INSERT LINKS INSERTING TOKEN = i1
i1 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s2 p.size = 2
FIRST PARAM = i1
SECOND PARAM = s2
it2->ans2 = 12
it2->ans2 = 14
RETURNING FINAL ANSWERS




Your answer: 12 14 
Correct answer: 12 14 
End of evaluating Query File.
AutoTester Completed !
