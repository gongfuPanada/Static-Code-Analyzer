Parameters : Source2A.txt QBasic2B-next-star.txt ResultQBasic2B-next-star.xml
Beginning to parse Simple Program.
Begin CodeParser
End CodeParser
Begin DesignExtractor
DE: Extracted Relationships
Building CFG
End DesignExtractor
End of parsing Simple Program.
Iteration2
Beginning to evaluate Query File.
New Category :  Next*
1 - Next* ::
prog_line n1, n2;
Select n2 such that Next* (11, n2)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
5000
Evaluating query 1 - Next* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(11, n2)

 EVALUATING NEXT* (11 n2)
In intersect Pairs: both do not exist
Insert links for tk2 = n2
IN INSERT LINKS INSERTING TOKEN = n2
n2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = n2 p.size = 11
FIRST PARAM = 11
SECOND PARAM = n2
it2->ans2 = 14
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
RETURNING FINAL ANSWERS




Your answer: 14 18 16 15 11 10 9 17 13 12 
Correct answer: 9 10 11 12 13 14 15 16 17 18 
2 - Next* ::
prog_line n1, n2;
Select BOOLEAN such that Next* (11, n2)
true
5000
Evaluating query 2 - Next* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(11, n2)

 EVALUATING NEXT* (11 n2)
In intersect Pairs: both do not exist
Insert links for tk2 = n2
IN INSERT LINKS INSERTING TOKEN = n2
n2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
3 - Next* ::
prog_line n1, n2;
Select n1 such that Next* (n1, 9)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
5000
Evaluating query 3 - Next* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(n1, 9)

 EVALUATING NEXT* (n1 9)
In Next*(token, digit)
Traversing 8
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 7
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 6
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 5
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 4
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 3
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 2
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 1
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 17
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 13
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 12
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 11
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 10
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 9
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 8
Type is progline
Node traversed before. Moving on to next node
SynType match, inserting pair
Traversing 13
Type is progline
Node traversed before. Moving on to next node
SynType match, inserting pair
Traversing 15
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 14
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 11
Type is progline
Node traversed before. Moving on to next node
Traversing 16
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 15
Type is progline
Node traversed before. Moving on to next node
Pushing into answer the pair 14and9
Pushing into answer the pair 15and9
Pushing into answer the pair 16and9
Pushing into answer the pair 17and9
Pushing into answer the pair 9and9
Pushing into answer the pair 10and9
Pushing into answer the pair 11and9
Pushing into answer the pair 12and9
Pushing into answer the pair 13and9
Pushing into answer the pair 17and9
Pushing into answer the pair 1and9
Pushing into answer the pair 2and9
Pushing into answer the pair 3and9
Pushing into answer the pair 4and9
Pushing into answer the pair 5and9
Pushing into answer the pair 6and9
Pushing into answer the pair 7and9
Pushing into answer the pair 8and9
In intersect Pairs: both do not exist
Insert links for tk1 =n1
IN INSERT LINKS INSERTING TOKEN = n1
n1 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = n1 p.size = 18
FIRST PARAM = n1
it2->ans1 = 14
it2->ans1 = 15
it2->ans1 = 16
it2->ans1 = 17
it2->ans1 = 9
it2->ans1 = 10
it2->ans1 = 11
it2->ans1 = 12
it2->ans1 = 13
it2->ans1 = 17
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
RETURNING FINAL ANSWERS




Your answer: 14 15 16 17 9 10 11 12 13 1 2 3 4 5 6 7 8 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
4 - Next* ::
prog_line n1, n2;
Select BOOLEAN such that Next* (n1, 9)
true
5000
Evaluating query 4 - Next* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(n1, 9)

 EVALUATING NEXT* (n1 9)
In Next*(token, digit)
Traversing 8
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 7
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 6
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 5
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 4
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 3
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 2
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 1
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 17
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 13
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 12
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 11
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 10
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 9
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 8
Type is progline
Node traversed before. Moving on to next node
SynType match, inserting pair
Traversing 13
Type is progline
Node traversed before. Moving on to next node
SynType match, inserting pair
Traversing 15
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 14
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 11
Type is progline
Node traversed before. Moving on to next node
Traversing 16
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 15
Type is progline
Node traversed before. Moving on to next node
Pushing into answer the pair 14and9
Pushing into answer the pair 15and9
Pushing into answer the pair 16and9
Pushing into answer the pair 17and9
Pushing into answer the pair 9and9
Pushing into answer the pair 10and9
Pushing into answer the pair 11and9
Pushing into answer the pair 12and9
Pushing into answer the pair 13and9
Pushing into answer the pair 17and9
Pushing into answer the pair 1and9
Pushing into answer the pair 2and9
Pushing into answer the pair 3and9
Pushing into answer the pair 4and9
Pushing into answer the pair 5and9
Pushing into answer the pair 6and9
Pushing into answer the pair 7and9
Pushing into answer the pair 8and9
In intersect Pairs: both do not exist
Insert links for tk1 =n1
IN INSERT LINKS INSERTING TOKEN = n1
n1 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
5 - Next* ::
prog_line n1, n2;
Select n2 such that Next* (11, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
5000
Evaluating query 5 - Next* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(11, _)

 EVALUATING NEXT* (11 _)
Evaluating true
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 
6 - Next* ::
prog_line n1, n2;
Select BOOLEAN such that Next* (18, _)
false
5000
Evaluating query 6 - Next* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(18, _)

 EVALUATING NEXT* (18 _)
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: false 
Correct answer: false 
7 - Next* ::
prog_line n1, n2;
Select n1 such that Next* (_, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
5000
Evaluating query 7 - Next* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(_, _)

 EVALUATING NEXT* (_ _)
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 
8 - Next* ::
prog_line n1, n2;
Select BOOLEAN such that Next* (_, _)
true
5000
Evaluating query 8 - Next* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(_, _)

 EVALUATING NEXT* (_ _)
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
9 - Next* ::
prog_line n1, n2;
Select n1 such that Next* (n1, n2)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30
5000
Evaluating query 9 - Next* ::
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(n1, n2)

 EVALUATING NEXT* (n1 n2)
In intersect Pairs: both do not exist
Insert links for tk1 =n1
IN INSERT LINKS INSERTING TOKEN = n1
n1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = n2
IN INSERT LINKS INSERTING TOKEN = n2
n2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = n1 p.size = 241
FIRST PARAM = n1
it2->ans1 = 30
it2->ans1 = 30
it2->ans1 = 30
it2->ans1 = 30
it2->ans1 = 29
it2->ans1 = 29
it2->ans1 = 29
it2->ans1 = 29
it2->ans1 = 28
it2->ans1 = 28
it2->ans1 = 28
it2->ans1 = 28
it2->ans1 = 27
it2->ans1 = 27
it2->ans1 = 27
it2->ans1 = 27
it2->ans1 = 25
it2->ans1 = 25
it2->ans1 = 25
it2->ans1 = 24
it2->ans1 = 24
it2->ans1 = 24
it2->ans1 = 22
it2->ans1 = 22
it2->ans1 = 22
it2->ans1 = 22
it2->ans1 = 22
it2->ans1 = 21
it2->ans1 = 21
it2->ans1 = 21
it2->ans1 = 21
it2->ans1 = 21
it2->ans1 = 20
it2->ans1 = 20
it2->ans1 = 20
it2->ans1 = 20
it2->ans1 = 20
it2->ans1 = 19
it2->ans1 = 19
it2->ans1 = 19
it2->ans1 = 19
it2->ans1 = 19
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
RETURNING FINAL ANSWERS




Your answer: 30 29 28 27 25 24 22 21 20 19 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 21 22 24 25 27 28 29 30 
10 - Next* ::
prog_line n1, n2;
Select n2 such that Next* (n1, n2)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
5000
Evaluating query 10 - Next* ::
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(n1, n2)

 EVALUATING NEXT* (n1 n2)
In intersect Pairs: both do not exist
Insert links for tk1 =n1
IN INSERT LINKS INSERTING TOKEN = n1
n1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = n2
IN INSERT LINKS INSERTING TOKEN = n2
n2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = n2 p.size = 241
FIRST PARAM = n1
SECOND PARAM = n2
it2->ans2 = 30
it2->ans2 = 29
it2->ans2 = 28
it2->ans2 = 27
it2->ans2 = 30
it2->ans2 = 29
it2->ans2 = 28
it2->ans2 = 27
it2->ans2 = 30
it2->ans2 = 28
it2->ans2 = 27
it2->ans2 = 29
it2->ans2 = 30
it2->ans2 = 27
it2->ans2 = 29
it2->ans2 = 28
it2->ans2 = 26
it2->ans2 = 25
it2->ans2 = 24
it2->ans2 = 26
it2->ans2 = 24
it2->ans2 = 25
it2->ans2 = 23
it2->ans2 = 22
it2->ans2 = 21
it2->ans2 = 20
it2->ans2 = 19
it2->ans2 = 23
it2->ans2 = 21
it2->ans2 = 20
it2->ans2 = 19
it2->ans2 = 22
it2->ans2 = 23
it2->ans2 = 20
it2->ans2 = 19
it2->ans2 = 22
it2->ans2 = 21
it2->ans2 = 23
it2->ans2 = 19
it2->ans2 = 22
it2->ans2 = 21
it2->ans2 = 20
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 17
it2->ans2 = 18
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 17
it2->ans2 = 16
it2->ans2 = 18
it2->ans2 = 14
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 17
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 17
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 18
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 18
it2->ans2 = 9
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 8
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 8
it2->ans2 = 7
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 8
it2->ans2 = 7
it2->ans2 = 6
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 8
it2->ans2 = 7
it2->ans2 = 6
it2->ans2 = 5
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 8
it2->ans2 = 7
it2->ans2 = 6
it2->ans2 = 5
it2->ans2 = 4
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 8
it2->ans2 = 7
it2->ans2 = 6
it2->ans2 = 5
it2->ans2 = 4
it2->ans2 = 3
it2->ans2 = 18
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 8
it2->ans2 = 7
it2->ans2 = 6
it2->ans2 = 5
it2->ans2 = 4
it2->ans2 = 3
it2->ans2 = 2
RETURNING FINAL ANSWERS




Your answer: 30 29 28 27 26 25 24 23 22 21 20 19 18 16 15 14 17 13 12 11 10 9 8 7 6 5 4 3 2 
Correct answer: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 
11 - Next* ::
prog_line n1, n2;
Select BOOLEAN such that Next* (4, 5)
true
5000
Evaluating query 11 - Next* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(4, 5)

 EVALUATING NEXT* (4 5)
tk1Int = 4 tk2Int = 5
In recursiveNextTarget where rootIndex = 4 and currentIndex = 4 and targetIndex = 5
5 is not traversed before. Inserting stmtnum 5 into traverseTable
TargetIndex found
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
12 - Next* ::
prog_line n1, n2;
Select BOOLEAN such that Next* (17, 19)
false
5000
Evaluating query 12 - Next* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(17, 19)

 EVALUATING NEXT* (17 19)
tk1Int = 17 tk2Int = 19
In recursiveNextTarget where rootIndex = 17 and currentIndex = 17 and targetIndex = 19
9 is not traversed before. Inserting stmtnum 9 into traverseTable
In recursiveNextTarget where rootIndex = 17 and currentIndex = 9 and targetIndex = 19
10 is not traversed before. Inserting stmtnum 10 into traverseTable
In recursiveNextTarget where rootIndex = 17 and currentIndex = 10 and targetIndex = 19
11 is not traversed before. Inserting stmtnum 11 into traverseTable
In recursiveNextTarget where rootIndex = 17 and currentIndex = 11 and targetIndex = 19
12 is not traversed before. Inserting stmtnum 12 into traverseTable
In recursiveNextTarget where rootIndex = 17 and currentIndex = 12 and targetIndex = 19
13 is not traversed before. Inserting stmtnum 13 into traverseTable
In recursiveNextTarget where rootIndex = 17 and currentIndex = 13 and targetIndex = 19
17 is not traversed before. Inserting stmtnum 17 into traverseTable
In recursiveNextTarget where rootIndex = 17 and currentIndex = 17 and targetIndex = 19
9 is traversed before. Moving on to the next node
Reached the end 
14 is not traversed before. Inserting stmtnum 14 into traverseTable
In recursiveNextTarget where rootIndex = 17 and currentIndex = 14 and targetIndex = 19
15 is not traversed before. Inserting stmtnum 15 into traverseTable
In recursiveNextTarget where rootIndex = 17 and currentIndex = 15 and targetIndex = 19
16 is not traversed before. Inserting stmtnum 16 into traverseTable
In recursiveNextTarget where rootIndex = 17 and currentIndex = 16 and targetIndex = 19
17 is traversed before. Moving on to the next node
Reached the end 
18 is not traversed before. Inserting stmtnum 18 into traverseTable
In recursiveNextTarget where rootIndex = 17 and currentIndex = 18 and targetIndex = 19
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: false 
Correct answer: false 
13 - Next* ::
prog_line n1, n2;
Select BOOLEAN such that Next* (9, 9)
true
5000
Evaluating query 13 - Next* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(9, 9)

 EVALUATING NEXT* (9 9)
tk1Int = 9 tk2Int = 9
In recursiveNextTarget where rootIndex = 9 and currentIndex = 9 and targetIndex = 9
10 is not traversed before. Inserting stmtnum 10 into traverseTable
In recursiveNextTarget where rootIndex = 9 and currentIndex = 10 and targetIndex = 9
11 is not traversed before. Inserting stmtnum 11 into traverseTable
In recursiveNextTarget where rootIndex = 9 and currentIndex = 11 and targetIndex = 9
12 is not traversed before. Inserting stmtnum 12 into traverseTable
In recursiveNextTarget where rootIndex = 9 and currentIndex = 12 and targetIndex = 9
13 is not traversed before. Inserting stmtnum 13 into traverseTable
In recursiveNextTarget where rootIndex = 9 and currentIndex = 13 and targetIndex = 9
17 is not traversed before. Inserting stmtnum 17 into traverseTable
In recursiveNextTarget where rootIndex = 9 and currentIndex = 17 and targetIndex = 9
9 is not traversed before. Inserting stmtnum 9 into traverseTable
TargetIndex found
14 is not traversed before. Inserting stmtnum 14 into traverseTable
In recursiveNextTarget where rootIndex = 9 and currentIndex = 14 and targetIndex = 9
15 is not traversed before. Inserting stmtnum 15 into traverseTable
In recursiveNextTarget where rootIndex = 9 and currentIndex = 15 and targetIndex = 9
16 is not traversed before. Inserting stmtnum 16 into traverseTable
In recursiveNextTarget where rootIndex = 9 and currentIndex = 16 and targetIndex = 9
17 is traversed before. Moving on to the next node
Reached the end 
18 is not traversed before. Inserting stmtnum 18 into traverseTable
In recursiveNextTarget where rootIndex = 9 and currentIndex = 18 and targetIndex = 9
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
14 - Next* ::
prog_line n1, n2;
Select BOOLEAN such that Next* (20, 23)
true
5000
Evaluating query 14 - Next* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(20, 23)

 EVALUATING NEXT* (20 23)
tk1Int = 20 tk2Int = 23
In recursiveNextTarget where rootIndex = 20 and currentIndex = 20 and targetIndex = 23
21 is not traversed before. Inserting stmtnum 21 into traverseTable
In recursiveNextTarget where rootIndex = 20 and currentIndex = 21 and targetIndex = 23
22 is not traversed before. Inserting stmtnum 22 into traverseTable
In recursiveNextTarget where rootIndex = 20 and currentIndex = 22 and targetIndex = 23
19 is not traversed before. Inserting stmtnum 19 into traverseTable
In recursiveNextTarget where rootIndex = 20 and currentIndex = 19 and targetIndex = 23
20 is not traversed before. Inserting stmtnum 20 into traverseTable
In recursiveNextTarget where rootIndex = 20 and currentIndex = 20 and targetIndex = 23
21 is traversed before. Moving on to the next node
Reached the end 
23 is not traversed before. Inserting stmtnum 23 into traverseTable
TargetIndex found
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
15 - Next* ::
prog_line n1, n2;
Select BOOLEAN such that Next* (5, 5)
false
5000
Evaluating query 15 - Next* ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(5, 5)

 EVALUATING NEXT* (5 5)
tk1Int = 5 tk2Int = 5
In recursiveNextTarget where rootIndex = 5 and currentIndex = 5 and targetIndex = 5
6 is not traversed before. Inserting stmtnum 6 into traverseTable
In recursiveNextTarget where rootIndex = 5 and currentIndex = 6 and targetIndex = 5
7 is not traversed before. Inserting stmtnum 7 into traverseTable
In recursiveNextTarget where rootIndex = 5 and currentIndex = 7 and targetIndex = 5
8 is not traversed before. Inserting stmtnum 8 into traverseTable
In recursiveNextTarget where rootIndex = 5 and currentIndex = 8 and targetIndex = 5
9 is not traversed before. Inserting stmtnum 9 into traverseTable
In recursiveNextTarget where rootIndex = 5 and currentIndex = 9 and targetIndex = 5
10 is not traversed before. Inserting stmtnum 10 into traverseTable
In recursiveNextTarget where rootIndex = 5 and currentIndex = 10 and targetIndex = 5
11 is not traversed before. Inserting stmtnum 11 into traverseTable
In recursiveNextTarget where rootIndex = 5 and currentIndex = 11 and targetIndex = 5
12 is not traversed before. Inserting stmtnum 12 into traverseTable
In recursiveNextTarget where rootIndex = 5 and currentIndex = 12 and targetIndex = 5
13 is not traversed before. Inserting stmtnum 13 into traverseTable
In recursiveNextTarget where rootIndex = 5 and currentIndex = 13 and targetIndex = 5
17 is not traversed before. Inserting stmtnum 17 into traverseTable
In recursiveNextTarget where rootIndex = 5 and currentIndex = 17 and targetIndex = 5
9 is traversed before. Moving on to the next node
Reached the end 
14 is not traversed before. Inserting stmtnum 14 into traverseTable
In recursiveNextTarget where rootIndex = 5 and currentIndex = 14 and targetIndex = 5
15 is not traversed before. Inserting stmtnum 15 into traverseTable
In recursiveNextTarget where rootIndex = 5 and currentIndex = 15 and targetIndex = 5
16 is not traversed before. Inserting stmtnum 16 into traverseTable
In recursiveNextTarget where rootIndex = 5 and currentIndex = 16 and targetIndex = 5
17 is traversed before. Moving on to the next node
Reached the end 
18 is not traversed before. Inserting stmtnum 18 into traverseTable
In recursiveNextTarget where rootIndex = 5 and currentIndex = 18 and targetIndex = 5
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: false 
Correct answer: false 
End of evaluating Query File.
AutoTester Completed !
