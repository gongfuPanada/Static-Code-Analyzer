Parameters : Source1D.txt QBasic1E-uses-proc.txt ResultQBasic1E-uses-proc.xml
Beginning to parse Simple Program.
Begin CodeParser
End CodeParser
Begin DesignExtractor
DE: Extracted Relationships
Building CFG
End DesignExtractor
End of parsing Simple Program.
iteration1
Beginning to evaluate Query File.
New Category :  BASIC queries with uses procedure
1 - Uses ::
procedure p; variable v;
Select p such that Uses (p, v)
First, Second, Third, Fourth, Fifth, Sixth
5000
Evaluating query 1 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(p, v)

 EVALUATING USES (p v)
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 12
FIRST PARAM = p
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 1
Case 1.1
Tuple Table Size: 12
End creating tuple table
End projecting results




Your answer: First Second Third Fourth Fifth Sixth 
Correct answer: First Second Third Fourth Fifth Sixth 
2 - Uses ::
procedure p; variable v;
Select p such that Uses (p, "x")
First, Second, Fifth
5000
Evaluating query 2 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(p, "x")

 EVALUATING USES (p "x")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 3
FIRST PARAM = p
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 5
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 2
Case 2.2
Tuple Table Size: 3
End creating tuple table
End projecting results




Your answer: First Second Fifth 
Correct answer: First Second Fifth 
3 - Uses ::
procedure p; variable v;
Select p such that Uses (p, "wrong")

5000
Evaluating query 3 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(p, "wrong")

 EVALUATING USES (p "wrong")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = p p.size = 0
FIRST PARAM = p
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
empty clause detected, returning empty table
End creating tuple table
End projecting results




Your answer: 
Correct answer: 
4 - Uses ::
procedure p; variable v;
Select BOOLEAN such that Uses ("First", "x")
true
5000
Evaluating query 4 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("First", "x")

 EVALUATING USES ("First" "x")
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 4
End creating tuple table




Your answer: true 
Correct answer: true 
5 - Uses ::
procedure p; variable v; 
Select BOOLEAN such that Uses ("Fourth", _)
true
5000
Evaluating query 5 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("Fourth", _)

 EVALUATING USES ("Fourth" _)
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 4
End creating tuple table




Your answer: true 
Correct answer: true 
6 - Uses ::
procedure p; variable v;
Select BOOLEAH such that Uses (p, "y")
true
5000
Evaluating query 6 - Uses ::
Begin parse query
Query Invalid




Your answer: 
Correct answer: true 
Missing: true 
Additional: 
7 - Uses ::
procedure p; variable v;
Select BOOLEAN such that Uses (p, "wrong")
false
5000
Evaluating query 7 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(p, "wrong")

 EVALUATING USES (p "wrong")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
empty clause detected, returning empty table
End creating tuple table




Your answer: false 
Correct answer: false 
8 - Uses ::
procedure p; variable v;
Select BOOELAN such that Uses ("Third", v)
true
5000
Evaluating query 8 - Uses ::
Begin parse query
Query Invalid




Your answer: 
Correct answer: true 
Missing: true 
Additional: 
9 - Uses ::
procedure p; variable v;
Select BOOLEAN such that Uses ("Fourth", "y")
true
5000
Evaluating query 9 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("Fourth", "y")

 EVALUATING USES ("Fourth" "y")
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 4
End creating tuple table




Your answer: true 
Correct answer: true 
10 - Uses ::
procedure p; variable v;
Select p such that Uses (p, "z")
First, Second, Third
5000
Evaluating query 10 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(p, "z")

 EVALUATING USES (p "z")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 3
FIRST PARAM = p
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 2
Case 2.2
Tuple Table Size: 3
End creating tuple table
End projecting results




Your answer: First Second Third 
Correct answer: First Second Third 
11 - Uses ::
procedure p; variable v;
Select p such that Modifies (p, "y")
First, Second, Fourth, Sixth
5000
Evaluating query 11 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(p, "y")

 EVALUATING MODIFIES (p "y")
In Modifies(p, "var")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 4
FIRST PARAM = p
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 4
it2->ans1 = 6
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 2
Case 2.2
Tuple Table Size: 4
End creating tuple table
End projecting results




Your answer: First Second Fourth Sixth 
Correct answer: First Second Fourth Sixth 
12 - Uses ::
procedure p; variable v;
Select v such that Uses (p, v)
i, x, y, z
5000
Evaluating query 12 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(p, v)

 EVALUATING USES (p v)
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 12
FIRST PARAM = p
SECOND PARAM = v
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 4
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 3
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 1
Case 1.1
Tuple Table Size: 12
End creating tuple table
End projecting results




Your answer: x i y z 
Correct answer: i x y z 
13 - Uses ::
procedure p; variable v;
Select v such that Uses ("Second", v)
i, x, y, z
5000
Evaluating query 13 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("Second", v)

 EVALUATING USES ("Second" v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 4
FIRST PARAM = "Second"
SECOND PARAM = v
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 3
Case 3.2
Tuple Table Size: 4
End creating tuple table
End projecting results




Your answer: x i y z 
Correct answer: i x y z 
14 - Uses ::
procedure p; variable v;
Select v such that Uses ("Fourth", v)
y
5000
Evaluating query 14 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("Fourth", v)

 EVALUATING USES ("Fourth" v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 1
FIRST PARAM = "Fourth"
SECOND PARAM = v
it2->ans2 = 3
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 3
Case 3.2
Tuple Table Size: 1
End creating tuple table
End projecting results




Your answer: y 
Correct answer: y 
15 - Uses ::
procedure p; variable v;
Select BOOLEAN such that Uses (p, v)
true
5000
Evaluating query 15 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(p, v)

 EVALUATING USES (p v)
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 1
Case 1.1
Tuple Table Size: 12
End creating tuple table




Your answer: true 
Correct answer: true 
16 - Uses ::
procedure p; variable v;
Select p such that Uses (p, _)
First, Second, Third, Fourth, Fifth, Sixth
5000
Evaluating query 16 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(p, _)

 EVALUATING USES (p _)
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 12
FIRST PARAM = p
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 2
Case 2.2
Tuple Table Size: 12
End creating tuple table
End projecting results




Your answer: First Second Third Fourth Fifth Sixth 
Correct answer: First Second Third Fourth Fifth Sixth 
17 - Uses ::
procedure p; variable v;
Select BOOLEAN such that Uses(p, _)
true
5000
Evaluating query 17 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(p, _)

 EVALUATING USES (p _)
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 2
Case 2.2
Tuple Table Size: 12
End creating tuple table




Your answer: true 
Correct answer: true 
18 - Uses ::
procedure p; variable v;
Select v such that Uses (p, "v")
v
5000
Evaluating query 18 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(p, "v")

 EVALUATING USES (p "v")
In intersect Pairs: both do not exist
Insert links for tk1 =p
IN INSERT LINKS INSERTING TOKEN = p
p Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
empty clause detected, returning empty table
End creating tuple table
End projecting results




Your answer: 
Correct answer: v 
Missing: v 
Additional: 
19 - Uses ::
procedure p; variable v;
Select p such that Uses ("Fourth", "y")
Fourth
5000
Evaluating query 19 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("Fourth", "y")

 EVALUATING USES ("Fourth" "y")
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 4
End creating tuple table
<exception/>
20 - Uses ::
procedure p; variable v;
Select p such that Uses ("Third", "wrong")

5000
Evaluating query 20 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("Third", "wrong")

 EVALUATING USES ("Third" "wrong")
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 4
End projecting results




Your answer: 
Correct answer: 
21 - Uses ::
procedure p; variable v;
Select v such that Uses ("First", "x")
x
5000
Evaluating query 21 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("First", "x")

 EVALUATING USES ("First" "x")
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 4
End creating tuple table
<exception/>
22 - Uses ::
procedure p; variable v;
Select v such that Uses ("First", "wrong")

5000
Evaluating query 22 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("First", "wrong")

 EVALUATING USES ("First" "wrong")
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 4
End projecting results




Your answer: 
Correct answer: 
23 - Uses ::
procedure p; variable v;
Select p such that Uses ("First", _)
First
5000
Evaluating query 23 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("First", _)

 EVALUATING USES ("First" _)
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 4
End creating tuple table
<exception/>
24 - Uses ::
procedure p; variable v;
Select p such that Uses ("DoesNotExist", _)

5000
Evaluating query 24 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("DoesNotExist", _)

 EVALUATING USES ("DoesNotExist" _)
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 4
End projecting results




Your answer: 
Correct answer: 
25 - Uses ::
procedure p; variable v;
Select v such that Uses ("Fourth", _)
y
5000
Evaluating query 25 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("Fourth", _)

 EVALUATING USES ("Fourth" _)
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 4
End creating tuple table
<exception/>
26 - Uses ::
procedure p; variable v;
Select v such that Uses ("DoesNotExist", _)

5000
Evaluating query 26 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("DoesNotExist", _)

 EVALUATING USES ("DoesNotExist" _)
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 4
End projecting results




Your answer: 
Correct answer: 
27 - Uses ::
procedure p; variable v;
Select p such that Uses ("Fourth", v)
Fourth
5000
Evaluating query 27 - Uses ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses("Fourth", v)

 EVALUATING USES ("Fourth" v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 3
Case 3.2
Tuple Table Size: 1
End creating tuple table
<exception/>
28 - Uses ::
procecure p; variable v;
Select p such that Uses ("DoesNotExist", v)

5000
Evaluating query 28 - Uses ::
Begin parse query
Query Invalid




Your answer: 
Correct answer: 
End of evaluating Query File.
AutoTester Completed !
