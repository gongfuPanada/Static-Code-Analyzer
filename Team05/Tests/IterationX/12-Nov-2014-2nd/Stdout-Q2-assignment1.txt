Parameters : S2-assignment1.txt Q2-assignment1.txt R2-assignment1.xml
Beginning to parse Simple Program.
Begin CodeParser
End CodeParser
Begin DesignExtractor
DE: Extracted Relationships
Building CFG
Extracting Sibling
End DesignExtractor
End of parsing Simple Program.
iterationX
Beginning to evaluate Query File.
New Category :  All Queries
1 - Parent :: 
stmt s, s1;
Select s such that Parent (s, s1) with s1.stmt# = 3
none
5000
Evaluating query 1 - Parent :: 
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s, s1)

 EVALUATING PARENT (s s1)
tk1 = s tk2 = s1
pushing into parent pair1 = 8pair2 = 9
pushing into parent pair1 = 8pair2 = 10
pushing into parent pair1 = 8pair2 = 13
pushing into parent pair1 = 8pair2 = 14
pushing into parent pair1 = 8pair2 = 15
pushing into parent pair1 = 8pair2 = 16
pushing into parent pair1 = 10pair2 = 11
pushing into parent pair1 = 10pair2 = 12
pushing into parent pair1 = 18pair2 = 19
pushing into parent pair1 = 18pair2 = 20
pushing into parent pair1 = 18pair2 = 21
pushing into parent pair1 = 23pair2 = 24
pushing into parent pair1 = 24pair2 = 25
pushing into parent pair1 = 24pair2 = 26
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Insert links for tk2 = s1
--INSERTING s1--
s1 Not Found in Linkages and relIndex = 0
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
 
with(s1, 3)

 EVALUATING WITH (s1 3)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: 3
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 3
IntersectPairs tk1 Exists tk1 = s1
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = s1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
9
10
11
12
13
14
15
16
19
20
21
24
25
26
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 9
Erasing element 10
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 11
Erasing element 12
Erasing element 19
Erasing element 20
Erasing element 21
Erasing element 24
Erasing element 25
Erasing element 26
Insert links for tk1 =s1
--INSERTING s1--
s1 Found in Linkages
--END OF INSERT--
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s p.size = 0
FIRST PARAM = s
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
2 - Parent :: 
stmt s, s1;
Select s such that Parent (s, s1) with s1.stmt# = 10
8
5000
Evaluating query 2 - Parent :: 
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s, s1)

 EVALUATING PARENT (s s1)
tk1 = s tk2 = s1
pushing into parent pair1 = 8pair2 = 9
pushing into parent pair1 = 8pair2 = 10
pushing into parent pair1 = 8pair2 = 13
pushing into parent pair1 = 8pair2 = 14
pushing into parent pair1 = 8pair2 = 15
pushing into parent pair1 = 8pair2 = 16
pushing into parent pair1 = 10pair2 = 11
pushing into parent pair1 = 10pair2 = 12
pushing into parent pair1 = 18pair2 = 19
pushing into parent pair1 = 18pair2 = 20
pushing into parent pair1 = 18pair2 = 21
pushing into parent pair1 = 23pair2 = 24
pushing into parent pair1 = 24pair2 = 25
pushing into parent pair1 = 24pair2 = 26
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Insert links for tk2 = s1
--INSERTING s1--
s1 Not Found in Linkages and relIndex = 0
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
 
with(s1, 10)

 EVALUATING WITH (s1 10)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: 10
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 10
IntersectPairs tk1 Exists tk1 = s1
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = s1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
9
10
11
12
13
14
15
16
19
20
21
24
25
26
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 9
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 11
Erasing element 12
Erasing element 19
Erasing element 20
Erasing element 21
Erasing element 24
Erasing element 25
Erasing element 26
Insert links for tk1 =s1
--INSERTING s1--
s1 Found in Linkages
--END OF INSERT--
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = s
it2->ans1 = 8
RETURNING FINAL ANSWERS




Your answer: 8 
Correct answer: 8 
3 - Parent :: 
stmt s, s1;
Select s such that Parent (s, s1) with s1.stmt# = 12
10
5000
Evaluating query 3 - Parent :: 
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s, s1)

 EVALUATING PARENT (s s1)
tk1 = s tk2 = s1
pushing into parent pair1 = 8pair2 = 9
pushing into parent pair1 = 8pair2 = 10
pushing into parent pair1 = 8pair2 = 13
pushing into parent pair1 = 8pair2 = 14
pushing into parent pair1 = 8pair2 = 15
pushing into parent pair1 = 8pair2 = 16
pushing into parent pair1 = 10pair2 = 11
pushing into parent pair1 = 10pair2 = 12
pushing into parent pair1 = 18pair2 = 19
pushing into parent pair1 = 18pair2 = 20
pushing into parent pair1 = 18pair2 = 21
pushing into parent pair1 = 23pair2 = 24
pushing into parent pair1 = 24pair2 = 25
pushing into parent pair1 = 24pair2 = 26
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Insert links for tk2 = s1
--INSERTING s1--
s1 Not Found in Linkages and relIndex = 0
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
 
with(s1, 12)

 EVALUATING WITH (s1 12)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: 12
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 12
IntersectPairs tk1 Exists tk1 = s1
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = s1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
9
10
11
12
13
14
15
16
19
20
21
24
25
26
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 9
Erasing element 10
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 11
Erasing element 19
Erasing element 20
Erasing element 21
Erasing element 24
Erasing element 25
Erasing element 26
Insert links for tk1 =s1
--INSERTING s1--
s1 Found in Linkages
--END OF INSERT--
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = s
it2->ans1 = 10
RETURNING FINAL ANSWERS




Your answer: 10 
Correct answer: 10 
4 - Parent :: 
stmt s, s1;
Select s such that Parent (s, s1) with s1.stmt# = 20
18
5000
Evaluating query 4 - Parent :: 
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s, s1)

 EVALUATING PARENT (s s1)
tk1 = s tk2 = s1
pushing into parent pair1 = 8pair2 = 9
pushing into parent pair1 = 8pair2 = 10
pushing into parent pair1 = 8pair2 = 13
pushing into parent pair1 = 8pair2 = 14
pushing into parent pair1 = 8pair2 = 15
pushing into parent pair1 = 8pair2 = 16
pushing into parent pair1 = 10pair2 = 11
pushing into parent pair1 = 10pair2 = 12
pushing into parent pair1 = 18pair2 = 19
pushing into parent pair1 = 18pair2 = 20
pushing into parent pair1 = 18pair2 = 21
pushing into parent pair1 = 23pair2 = 24
pushing into parent pair1 = 24pair2 = 25
pushing into parent pair1 = 24pair2 = 26
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Insert links for tk2 = s1
--INSERTING s1--
s1 Not Found in Linkages and relIndex = 0
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
 
with(s1, 20)

 EVALUATING WITH (s1 20)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: 20
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 20
IntersectPairs tk1 Exists tk1 = s1
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = s1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
9
10
11
12
13
14
15
16
19
20
21
24
25
26
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 9
Erasing element 10
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 11
Erasing element 12
Erasing element 19
Erasing element 21
Erasing element 24
Erasing element 25
Erasing element 26
Insert links for tk1 =s1
--INSERTING s1--
s1 Found in Linkages
--END OF INSERT--
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = s
it2->ans1 = 18
RETURNING FINAL ANSWERS




Your answer: 18 
Correct answer: 18 
5 - Parent :: 
stmt s;
Select s such that Parent (s, 3)
none
5000
Evaluating query 5 - Parent :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent(s, 3)

 EVALUATING PARENT (s 3)
tk1 = s tk2 = 3
Calling getParent(TYPE, STMTNUM)
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s p.size = 0
FIRST PARAM = s
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
6 - Parent :: 
stmt s;
Select s such that Parent (s, 10)
8
5000
Evaluating query 6 - Parent :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent(s, 10)

 EVALUATING PARENT (s 10)
tk1 = s tk2 = 10
Calling getParent(TYPE, STMTNUM)
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = s
it2->ans1 = 8
RETURNING FINAL ANSWERS




Your answer: 8 
Correct answer: 8 
7 - Parent :: 
stmt s;
Select s such that Parent (s, 12)
10
5000
Evaluating query 7 - Parent :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent(s, 12)

 EVALUATING PARENT (s 12)
tk1 = s tk2 = 12
Calling getParent(TYPE, STMTNUM)
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = s
it2->ans1 = 10
RETURNING FINAL ANSWERS




Your answer: 10 
Correct answer: 10 
8 - Parent :: 
stmt s;
Select s such that Parent (s, 20)
18
5000
Evaluating query 8 - Parent :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent(s, 20)

 EVALUATING PARENT (s 20)
tk1 = s tk2 = 20
Calling getParent(TYPE, STMTNUM)
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = s
it2->ans1 = 18
RETURNING FINAL ANSWERS




Your answer: 18 
Correct answer: 18 
9 - Parent :: 
stmt s;
Select s such that Parent (3, s)
none
5000
Evaluating query 9 - Parent :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent(3, s)

 EVALUATING PARENT (3 s)
tk1 = 3 tk2 = s
Parent(STMTNUM, TYPE)
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk2 = s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s p.size = 0
FIRST PARAM = 3
SECOND PARAM = s
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
10 - Parent :: 
stmt s;
Select s such that Parent (8, s)
9, 10, 13, 14, 15, 16
5000
Evaluating query 10 - Parent :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent(8, s)

 EVALUATING PARENT (8 s)
tk1 = 8 tk2 = s
Parent(STMTNUM, TYPE)
in for loop
in for loop
in for loop
in for loop
in for loop
in for loop
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk2 = s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 6
FIRST PARAM = 8
SECOND PARAM = s
it2->ans2 = 9
it2->ans2 = 10
it2->ans2 = 13
it2->ans2 = 14
it2->ans2 = 15
it2->ans2 = 16
RETURNING FINAL ANSWERS




Your answer: 9 10 13 14 15 16 
Correct answer: 9 10 13 14 15 16 
11 - Parent :: 
stmt s;
Select s such that Parent (9, s)
none
5000
Evaluating query 11 - Parent :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent(9, s)

 EVALUATING PARENT (9 s)
tk1 = 9 tk2 = s
Parent(STMTNUM, TYPE)
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk2 = s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s p.size = 0
FIRST PARAM = 9
SECOND PARAM = s
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
12 - Parent :: 
stmt s;
Select s such that Parent (25, s)
none
5000
Evaluating query 12 - Parent :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent(25, s)

 EVALUATING PARENT (25 s)
tk1 = 25 tk2 = s
Parent(STMTNUM, TYPE)
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk2 = s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s p.size = 0
FIRST PARAM = 25
SECOND PARAM = s
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
13 - ParentStar :: 
stmt s;
Select s such that Parent* (s, 3)
none
5000
Evaluating query 13 - ParentStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent*(s, 3)

 EVALUATING PARENT* (s 3)
Initialzing all Parent* variables
tk2 is Integer 3
TOKEN1 FOUND NOT TO EXIST IN LINKAGES
Set is Empty: 0
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s p.size = 0
FIRST PARAM = s
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
14 - ParentStar :: 
stmt s;
Select s such that Parent* (s, 10)
8
5000
Evaluating query 14 - ParentStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent*(s, 10)

 EVALUATING PARENT* (s 10)
Initialzing all Parent* variables
tk2 is Integer 10
TOKEN1 FOUND NOT TO EXIST IN LINKAGES
Set is Empty: 0
Insert stmtNum = 8 into set
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = s
it2->ans1 = 8
RETURNING FINAL ANSWERS




Your answer: 8 
Correct answer: 8 
15 - ParentStar :: 
stmt s;
Select s such that Parent* (s, 12)
8, 10
5000
Evaluating query 15 - ParentStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent*(s, 12)

 EVALUATING PARENT* (s 12)
Initialzing all Parent* variables
tk2 is Integer 12
TOKEN1 FOUND NOT TO EXIST IN LINKAGES
Set is Empty: 0
Insert stmtNum = 10 into set
Insert stmtNum = 8 into set
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 2
FIRST PARAM = s
it2->ans1 = 8
it2->ans1 = 10
RETURNING FINAL ANSWERS




Your answer: 8 10 
Correct answer: 8 10 
16 - ParentStar :: 
stmt s;
Select s such that Parent* (s, 20)
18
5000
Evaluating query 16 - ParentStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent*(s, 20)

 EVALUATING PARENT* (s 20)
Initialzing all Parent* variables
tk2 is Integer 20
TOKEN1 FOUND NOT TO EXIST IN LINKAGES
Set is Empty: 0
Insert stmtNum = 18 into set
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = s
it2->ans1 = 18
RETURNING FINAL ANSWERS




Your answer: 18 
Correct answer: 18 
17 - ParentStar :: 
stmt s; while w;
Select w such that Parent* (s, 3)
none
5000
Evaluating query 17 - ParentStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent*(s, 3)

 EVALUATING PARENT* (s 3)
Initialzing all Parent* variables
tk2 is Integer 3
TOKEN1 FOUND NOT TO EXIST IN LINKAGES
Set is Empty: 0
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
18 - ParentStar :: 
stmt s; while w;
Select w such that Parent* (s, 10)
10, 18, 23
5000
Evaluating query 18 - ParentStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent*(s, 10)

 EVALUATING PARENT* (s 10)
Initialzing all Parent* variables
tk2 is Integer 10
TOKEN1 FOUND NOT TO EXIST IN LINKAGES
Set is Empty: 0
Insert stmtNum = 8 into set
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: 10 18 23 
Correct answer: 10 18 23 
19 - ParentStar :: 
stmt s; while w;
Select w such that Parent* (s, 12)
10, 18, 23
5000
Evaluating query 19 - ParentStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent*(s, 12)

 EVALUATING PARENT* (s 12)
Initialzing all Parent* variables
tk2 is Integer 12
TOKEN1 FOUND NOT TO EXIST IN LINKAGES
Set is Empty: 0
Insert stmtNum = 10 into set
Insert stmtNum = 8 into set
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: 10 18 23 
Correct answer: 10 18 23 
20 - ParentStar :: 
stmt s; while w;
Select w such that Parent* (s, 20)
10, 18, 23
5000
Evaluating query 20 - ParentStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent*(s, 20)

 EVALUATING PARENT* (s 20)
Initialzing all Parent* variables
tk2 is Integer 20
TOKEN1 FOUND NOT TO EXIST IN LINKAGES
Set is Empty: 0
Insert stmtNum = 18 into set
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: 10 18 23 
Correct answer: 10 18 23 
21 - ParentStar :: 
while w;
Select w such that Parent* (w, 9)
none
5000
Evaluating query 21 - ParentStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent*(w, 9)

 EVALUATING PARENT* (w 9)
Initialzing all Parent* variables
tk2 is Integer 9
TOKEN1 FOUND NOT TO EXIST IN LINKAGES
Set is Empty: 0
--INSERTING w--
w Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = w p.size = 0
FIRST PARAM = w
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
22 - ParentStar :: 
while w;
Select w such that Parent* (w, 11)
10
5000
Evaluating query 22 - ParentStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent*(w, 11)

 EVALUATING PARENT* (w 11)
Initialzing all Parent* variables
tk2 is Integer 11
TOKEN1 FOUND NOT TO EXIST IN LINKAGES
Set is Empty: 0
Insert stmtNum = 10 into set
--INSERTING w--
w Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = w p.size = 1
FIRST PARAM = w
it2->ans1 = 10
RETURNING FINAL ANSWERS




Your answer: 10 
Correct answer: 10 
23 - ParentStar :: 
while w;
Select w such that Parent* (w, 13)
none
5000
Evaluating query 23 - ParentStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent*(w, 13)

 EVALUATING PARENT* (w 13)
Initialzing all Parent* variables
tk2 is Integer 13
TOKEN1 FOUND NOT TO EXIST IN LINKAGES
Set is Empty: 0
--INSERTING w--
w Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = w p.size = 0
FIRST PARAM = w
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
24 - ParentStar :: 
while w;
Select w such that Parent* (w, 21)
18
5000
Evaluating query 24 - ParentStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
parent*(w, 21)

 EVALUATING PARENT* (w 21)
Initialzing all Parent* variables
tk2 is Integer 21
TOKEN1 FOUND NOT TO EXIST IN LINKAGES
Set is Empty: 0
Insert stmtNum = 18 into set
--INSERTING w--
w Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = w p.size = 1
FIRST PARAM = w
it2->ans1 = 18
RETURNING FINAL ANSWERS




Your answer: 18 
Correct answer: 18 
25 - Follows :: 
stmt s;
Select s such that Follows (s, 1)
none
5000
Evaluating query 25 - Follows :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(s, 1)

 EVALUATING FOLLOWS (s 1)
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s p.size = 0
FIRST PARAM = s
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
26 - Follows :: 
stmt s;
Select s such that Follows (s, 8)
7
5000
Evaluating query 26 - Follows :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(s, 8)

 EVALUATING FOLLOWS (s 8)
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = s
it2->ans1 = 7
RETURNING FINAL ANSWERS




Your answer: 7 
Correct answer: 7 
27 - Follows :: 
stmt s;
Select s such that Follows (s, 9)
none
5000
Evaluating query 27 - Follows :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(s, 9)

 EVALUATING FOLLOWS (s 9)
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s p.size = 0
FIRST PARAM = s
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
28 - Follows :: 
stmt s;
Select s such that Follows (s, 10)
9
5000
Evaluating query 28 - Follows :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(s, 10)

 EVALUATING FOLLOWS (s 10)
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = s
it2->ans1 = 9
RETURNING FINAL ANSWERS




Your answer: 9 
Correct answer: 9 
29 - Follows :: 
stmt s;
Select s such that Follows (s, 12)
11
5000
Evaluating query 29 - Follows :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(s, 12)

 EVALUATING FOLLOWS (s 12)
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = s
it2->ans1 = 11
RETURNING FINAL ANSWERS




Your answer: 11 
Correct answer: 11 
30 - Follows :: 
stmt s;
Select s such that Follows (s, 13)
10
5000
Evaluating query 30 - Follows :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(s, 13)

 EVALUATING FOLLOWS (s 13)
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = s
it2->ans1 = 10
RETURNING FINAL ANSWERS




Your answer: 10 
Correct answer: 10 
31 - Follows :: 
stmt s;
Select s such that Follows (s, 23)
none
5000
Evaluating query 31 - Follows :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(s, 23)

 EVALUATING FOLLOWS (s 23)
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s p.size = 0
FIRST PARAM = s
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
32 - Follows :: 
assign a;
Select a such that Follows (a, 1)
none
5000
Evaluating query 32 - Follows :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(a, 1)

 EVALUATING FOLLOWS (a 1)
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a p.size = 0
FIRST PARAM = a
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
33 - Follows :: 
assign a;
Select a such that Follows (a, 8)
7
5000
Evaluating query 33 - Follows :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(a, 8)

 EVALUATING FOLLOWS (a 8)
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 7
RETURNING FINAL ANSWERS




Your answer: 7 
Correct answer: 7 
34 - Follows :: 
assign a;
Select a such that Follows (a, 9)
none
5000
Evaluating query 34 - Follows :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(a, 9)

 EVALUATING FOLLOWS (a 9)
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a p.size = 0
FIRST PARAM = a
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
35 - Follows :: 
assign a;
Select a such that Follows (a, 10)
9
5000
Evaluating query 35 - Follows :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(a, 10)

 EVALUATING FOLLOWS (a 10)
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 9
RETURNING FINAL ANSWERS




Your answer: 9 
Correct answer: 9 
36 - Follows :: 
assign a;
Select a such that Follows (a, 12)
11
5000
Evaluating query 36 - Follows :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(a, 12)

 EVALUATING FOLLOWS (a 12)
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 11
RETURNING FINAL ANSWERS




Your answer: 11 
Correct answer: 11 
37 - Follows :: 
assign a;
Select a such that Follows (a, 13)
none
5000
Evaluating query 37 - Follows :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows(a, 13)

 EVALUATING FOLLOWS (a 13)
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a p.size = 0
FIRST PARAM = a
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
38 - FollowsStar :: 
stmt s; while w;
Select w such that Follows* (s, w)
10
5000
Evaluating query 38 - FollowsStar :: 
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(s, w)

 EVALUATING FOLLOWS* (s w)
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Insert links for tk2 = w
--INSERTING w--
w Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = w p.size = 1
FIRST PARAM = s
SECOND PARAM = w
it2->ans2 = 10
RETURNING FINAL ANSWERS




Your answer: 10 
Correct answer: 10 
39 - FollowsStar :: 
stmt s; while w;
Select w such that Follows* (w, s)
10, 18, 23
5000
Evaluating query 39 - FollowsStar :: 
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(w, s)

 EVALUATING FOLLOWS* (w s)
In intersect Pairs: both do not exist
Insert links for tk1 =w
--INSERTING w--
w Not Found in Linkages and relIndex = 0
--END OF INSERT--
Insert links for tk2 = s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = w p.size = 3
FIRST PARAM = w
it2->ans1 = 23
it2->ans1 = 18
it2->ans1 = 10
RETURNING FINAL ANSWERS




Your answer: 23 18 10 
Correct answer: 10 18 23 
40 - FollowsStar :: 
stmt s;
Select s such that Follows* (s, 1)
none
5000
Evaluating query 40 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(s, 1)

 EVALUATING FOLLOWS* (s 1)
Handling Follows*(type, stmtnum) with tk2 = 1
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s p.size = 0
FIRST PARAM = s
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
41 - FollowsStar :: 
stmt s;
Select s such that Follows* (s, 8)
1, 2, 3, 4, 5, 6, 7
5000
Evaluating query 41 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(s, 8)

 EVALUATING FOLLOWS* (s 8)
Handling Follows*(type, stmtnum) with tk2 = 8
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 7
Inserting StmtNumber 7 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 6
Inserting StmtNumber 6 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 5
Inserting StmtNumber 5 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 4
Inserting StmtNumber 4 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 3
Inserting StmtNumber 3 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 2
Inserting StmtNumber 2 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 1
Inserting StmtNumber 1 into the answer set
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 7
FIRST PARAM = s
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
RETURNING FINAL ANSWERS




Your answer: 1 2 3 4 5 6 7 
Correct answer: 1 2 3 4 5 6 7 
42 - FollowsStar :: 
stmt s;
Select s such that Follows* (s, 9)
none
5000
Evaluating query 42 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(s, 9)

 EVALUATING FOLLOWS* (s 9)
Handling Follows*(type, stmtnum) with tk2 = 9
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s p.size = 0
FIRST PARAM = s
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
43 - FollowsStar :: 
stmt s;
Select s such that Follows* (s, 13)
9, 10
5000
Evaluating query 43 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(s, 13)

 EVALUATING FOLLOWS* (s 13)
Handling Follows*(type, stmtnum) with tk2 = 13
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 10
Inserting StmtNumber 10 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 9
Inserting StmtNumber 9 into the answer set
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 2
FIRST PARAM = s
it2->ans1 = 9
it2->ans1 = 10
RETURNING FINAL ANSWERS




Your answer: 9 10 
Correct answer: 9 10 
44 - FollowsStar :: 
stmt s;
Select s such that Follows* (s, 19)
none
5000
Evaluating query 44 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(s, 19)

 EVALUATING FOLLOWS* (s 19)
Handling Follows*(type, stmtnum) with tk2 = 19
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s p.size = 0
FIRST PARAM = s
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
45 - FollowsStar :: 
stmt s;
Select s such that Follows* (s, 22)
18
5000
Evaluating query 45 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(s, 22)

 EVALUATING FOLLOWS* (s 22)
Handling Follows*(type, stmtnum) with tk2 = 22
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 18
Inserting StmtNumber 18 into the answer set
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 1
FIRST PARAM = s
it2->ans1 = 18
RETURNING FINAL ANSWERS




Your answer: 18 
Correct answer: 18 
46 - FollowsStar :: 
if ifstat;
Select ifstat such that Follows* (ifstat, 8)
none
5000
Evaluating query 46 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(ifstat, 8)

 EVALUATING FOLLOWS* (ifstat 8)
Handling Follows*(type, stmtnum) with tk2 = 8
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 7
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 6
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 5
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 4
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 3
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 2
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 1
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =ifstat
--INSERTING ifstat--
ifstat Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = ifstat p.size = 0
FIRST PARAM = ifstat
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
47 - FollowsStar :: 
if ifstat;
Select ifstat such that Follows* (ifstat, 17)
8
5000
Evaluating query 47 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(ifstat, 17)

 EVALUATING FOLLOWS* (ifstat 17)
Handling Follows*(type, stmtnum) with tk2 = 17
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 8
Inserting StmtNumber 8 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 7
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 6
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 5
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 4
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 3
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 2
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 1
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =ifstat
--INSERTING ifstat--
ifstat Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = ifstat p.size = 1
FIRST PARAM = ifstat
it2->ans1 = 8
RETURNING FINAL ANSWERS




Your answer: 8 
Correct answer: 8 
48 - FollowsStar :: 
if ifstat;
Select ifstat such that Follows* (ifstat, 25)
none
5000
Evaluating query 48 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(ifstat, 25)

 EVALUATING FOLLOWS* (ifstat 25)
Handling Follows*(type, stmtnum) with tk2 = 25
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =ifstat
--INSERTING ifstat--
ifstat Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = ifstat p.size = 0
FIRST PARAM = ifstat
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
49 - FollowsStar :: 
if ifstat;
Select ifstat such that Follows* (ifstat, 27)
none
5000
Evaluating query 49 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(ifstat, 27)

 EVALUATING FOLLOWS* (ifstat 27)
Handling Follows*(type, stmtnum) with tk2 = 27
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 23
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =ifstat
--INSERTING ifstat--
ifstat Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = ifstat p.size = 0
FIRST PARAM = ifstat
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
50 - FollowsStar :: 
assign a;
Select a such that Follows* (a, 6)
1, 2, 3, 5
5000
Evaluating query 50 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(a, 6)

 EVALUATING FOLLOWS* (a 6)
Handling Follows*(type, stmtnum) with tk2 = 6
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 5
Inserting StmtNumber 5 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 4
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 3
Inserting StmtNumber 3 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 2
Inserting StmtNumber 2 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 1
Inserting StmtNumber 1 into the answer set
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 4
FIRST PARAM = a
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 5
RETURNING FINAL ANSWERS




Your answer: 1 2 3 5 
Correct answer: 1 2 3 5 
51 - FollowsStar :: 
assign a;
Select a such that Follows* (a, 9)
none
5000
Evaluating query 51 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(a, 9)

 EVALUATING FOLLOWS* (a 9)
Handling Follows*(type, stmtnum) with tk2 = 9
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a p.size = 0
FIRST PARAM = a
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
52 - FollowsStar :: 
assign a;
Select a such that Follows* (a, 10)
9
5000
Evaluating query 52 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(a, 10)

 EVALUATING FOLLOWS* (a 10)
Handling Follows*(type, stmtnum) with tk2 = 10
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 9
Inserting StmtNumber 9 into the answer set
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 9
RETURNING FINAL ANSWERS




Your answer: 9 
Correct answer: 9 
53 - FollowsStar :: 
assign a;
Select a such that Follows* (a, 12)
11
5000
Evaluating query 53 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(a, 12)

 EVALUATING FOLLOWS* (a 12)
Handling Follows*(type, stmtnum) with tk2 = 12
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 11
Inserting StmtNumber 11 into the answer set
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 11
RETURNING FINAL ANSWERS




Your answer: 11 
Correct answer: 11 
54 - FollowsStar :: 
assign a;
Select a such that Follows* (a, 17)
1, 2, 3, 5, 7
5000
Evaluating query 54 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(a, 17)

 EVALUATING FOLLOWS* (a 17)
Handling Follows*(type, stmtnum) with tk2 = 17
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 8
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 7
Inserting StmtNumber 7 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 6
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 5
Inserting StmtNumber 5 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 4
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 3
Inserting StmtNumber 3 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 2
Inserting StmtNumber 2 into the answer set
Calling getFollowedBy(type, stmtnum)
Evaluated StmtNumber = 1
Inserting StmtNumber 1 into the answer set
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 5
FIRST PARAM = a
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 5
it2->ans1 = 7
RETURNING FINAL ANSWERS




Your answer: 1 2 3 5 7 
Correct answer: 1 2 3 5 7 
55 - FollowsStar :: 
assign a;
Select a such that Follows* (a, 28)
none
5000
Evaluating query 55 - FollowsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
follows*(a, 28)

 EVALUATING FOLLOWS* (a 28)
Handling Follows*(type, stmtnum) with tk2 = 28
Calling getFollowedBy(type, stmtnum)
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting into RelAns RelIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a p.size = 0
FIRST PARAM = a
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
56 - Modifies :: 
variable v;
Select v such that Modifies (3, v)
x
5000
Evaluating query 56 - Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(3, v)

 EVALUATING MODIFIES (3 v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
--INSERTING v--
v Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 1
FIRST PARAM = 3
SECOND PARAM = v
it2->ans2 = 3
RETURNING FINAL ANSWERS




Your answer: x 
Correct answer: x 
57 - Modifies :: 
variable v;
Select v such that Modifies (4, v)
x, y, z
5000
Evaluating query 57 - Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(4, v)

 EVALUATING MODIFIES (4 v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
--INSERTING v--
v Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 3
FIRST PARAM = 4
SECOND PARAM = v
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 6
RETURNING FINAL ANSWERS




Your answer: y x z 
Correct answer: x y z 
58 - Modifies :: 
variable v;
Select v such that Modifies (6, v)
idx
5000
Evaluating query 58 - Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(6, v)

 EVALUATING MODIFIES (6 v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
--INSERTING v--
v Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 1
FIRST PARAM = 6
SECOND PARAM = v
it2->ans2 = 1
RETURNING FINAL ANSWERS




Your answer: idx 
Correct answer: idx 
59 - Modifies :: 
variable v;
Select v such that Modifies (18, v)
idx, x, y, z
5000
Evaluating query 59 - Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(18, v)

 EVALUATING MODIFIES (18 v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
--INSERTING v--
v Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 4
FIRST PARAM = 18
SECOND PARAM = v
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 6
RETURNING FINAL ANSWERS




Your answer: idx y x z 
Correct answer: idx x y z 
60 - Modifies :: 
variable v;
Select v such that Modifies (24, v)
x, y
5000
Evaluating query 60 - Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(24, v)

 EVALUATING MODIFIES (24 v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
--INSERTING v--
v Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 2
FIRST PARAM = 24
SECOND PARAM = v
it2->ans2 = 2
it2->ans2 = 3
RETURNING FINAL ANSWERS




Your answer: y x 
Correct answer: x y 
61 - Modifies :: 
variable v;
Select v such that Modifies (28, v)
idx
5000
Evaluating query 61 - Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(28, v)

 EVALUATING MODIFIES (28 v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
--INSERTING v--
v Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 1
FIRST PARAM = 28
SECOND PARAM = v
it2->ans2 = 1
RETURNING FINAL ANSWERS




Your answer: idx 
Correct answer: idx 
62 - Modifies :: 
while w;
Select w such that Modifies (w, "x")
10, 18, 23
5000
Evaluating query 62 - Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(w, "x")

 EVALUATING MODIFIES (w "x")
3
answer is empty: 0
modifiesAnswer3 3
modifiesAnswer4 3
modifiesAnswer8 3
modifiesAnswer10 3
modifiesAnswer11 3
modifiesAnswer17 3
modifiesAnswer18 3
modifiesAnswer20 3
modifiesAnswer22 3
modifiesAnswer23 3
modifiesAnswer24 3
modifiesAnswer25 3
In intersect Pairs: both do not exist
Insert links for tk1 =w
--INSERTING w--
w Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = w p.size = 3
FIRST PARAM = w
it2->ans1 = 10
it2->ans1 = 18
it2->ans1 = 23
RETURNING FINAL ANSWERS




Your answer: 10 18 23 
Correct answer: 10 18 23 
63 - Modifies :: 
while w;
Select w such that Modifies (w, "z")
10, 18
5000
Evaluating query 63 - Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies(w, "z")

 EVALUATING MODIFIES (w "z")
6
answer is empty: 0
modifiesAnswer4 6
modifiesAnswer8 6
modifiesAnswer10 6
modifiesAnswer12 6
modifiesAnswer16 6
modifiesAnswer17 6
modifiesAnswer18 6
modifiesAnswer20 6
modifiesAnswer21 6
modifiesAnswer27 6
In intersect Pairs: both do not exist
Insert links for tk1 =w
--INSERTING w--
w Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = w p.size = 2
FIRST PARAM = w
it2->ans1 = 10
it2->ans1 = 18
RETURNING FINAL ANSWERS




Your answer: 10 18 
Correct answer: 10 18 
64 - Modifies :: 
variable v;
Select v such that Modifies ("Bravo", v)
idx, x, y, z
5000
Evaluating query 64 - Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
modifies("Bravo", v)

 EVALUATING MODIFIES ("Bravo" v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
--INSERTING v--
v Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 4
FIRST PARAM = "Bravo"
SECOND PARAM = v
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 6
RETURNING FINAL ANSWERS




Your answer: idx y x z 
Correct answer: idx x y z 
65 - Uses :: 
stmt s;
Select s such that Uses (s, "x")
4, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 23, 24, 26, 27
5000
Evaluating query 65 - Uses :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(s, "x")

 EVALUATING USES (s "x")
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 16
FIRST PARAM = s
it2->ans1 = 4
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
it2->ans1 = 11
it2->ans1 = 12
it2->ans1 = 13
it2->ans1 = 14
it2->ans1 = 17
it2->ans1 = 18
it2->ans1 = 19
it2->ans1 = 20
it2->ans1 = 23
it2->ans1 = 24
it2->ans1 = 26
it2->ans1 = 27
RETURNING FINAL ANSWERS




Your answer: 4 8 9 10 11 12 13 14 17 18 19 20 23 24 26 27 
Correct answer: 4 8 9 10 11 12 13 14 17 18 19 20 23 24 26 27 
66 - Uses :: 
stmt s;
Select s such that Uses (s, "z")
8, 10, 16, 17, 18, 19, 21
5000
Evaluating query 66 - Uses :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(s, "z")

 EVALUATING USES (s "z")
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 7
FIRST PARAM = s
it2->ans1 = 8
it2->ans1 = 10
it2->ans1 = 16
it2->ans1 = 17
it2->ans1 = 18
it2->ans1 = 19
it2->ans1 = 21
RETURNING FINAL ANSWERS




Your answer: 8 10 16 17 18 19 21 
Correct answer: 8 10 16 17 18 19 21 
67 - Uses :: 
variable v;
Select v such that Uses (10, v)
x, z, idx
5000
Evaluating query 67 - Uses :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(10, v)

 EVALUATING USES (10 v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
--INSERTING v--
v Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 3
FIRST PARAM = 10
SECOND PARAM = v
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 6
RETURNING FINAL ANSWERS




Your answer: idx x z 
Correct answer: x z idx 
68 - Uses :: 
variable v;
Select v such that Uses (18, v)
x, y, z, idx, k ,t
5000
Evaluating query 68 - Uses :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(18, v)

 EVALUATING USES (18 v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
--INSERTING v--
v Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 6
FIRST PARAM = 18
SECOND PARAM = v
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
RETURNING FINAL ANSWERS




Your answer: idx y x t k z 
Correct answer: x y z idx k t 
69 - Uses :: 
variable v;
Select v such that Uses (23, v)
k, t, x, y, idx
5000
Evaluating query 69 - Uses :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(23, v)

 EVALUATING USES (23 v)
In intersect Pairs: both do not exist
Insert links for tk2 = v
--INSERTING v--
v Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 5
FIRST PARAM = 23
SECOND PARAM = v
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
RETURNING FINAL ANSWERS




Your answer: idx y x t k 
Correct answer: k t x y idx 
70 - Uses :: 
assign a; variable v;
Select v such that Uses (a, v)
x, y, z, idx, t, k
5000
Evaluating query 70 - Uses :: 
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
uses(a, v)

 EVALUATING USES (a v)
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Insert links for tk2 = v
--INSERTING v--
v Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 33
FIRST PARAM = a
SECOND PARAM = v
it2->ans2 = 1
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 6
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 6
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 1
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 5
it2->ans2 = 1
it2->ans2 = 2
RETURNING FINAL ANSWERS




Your answer: idx y x z t k 
Correct answer: x y z idx t k 
71 - Uses, Modifies :: 
assign a;
Select a such that Modifies (a, "y") and Uses (a, "y")
26
5000
Evaluating query 71 - Uses, Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
relationships with only one alpha token found
After Ordering Relations, r.size = 2
Initializing Variables
 
modifies(a, "y")

 EVALUATING MODIFIES (a "y")
2
answer is empty: 0
modifiesAnswer2 2
modifiesAnswer4 2
modifiesAnswer8 2
modifiesAnswer13 2
modifiesAnswer14 2
modifiesAnswer17 2
modifiesAnswer18 2
modifiesAnswer20 2
modifiesAnswer23 2
modifiesAnswer24 2
modifiesAnswer26 2
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
 
uses(a, "y")

 EVALUATING USES (a "y")
IntersectPairs tk1 Exists tk1 = a
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
2
13
14
26
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 2
Erasing element 2
Erasing element 2
Insert links for tk1 =a
--INSERTING a--
a Found in Linkages
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 26
RETURNING FINAL ANSWERS




Your answer: 26 
Correct answer: 26 
72 - Uses, Modifies :: 
assign a;
Select a such that Modifies (a, "x") and Uses (a, "x")
11
5000
Evaluating query 72 - Uses, Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
relationships with only one alpha token found
After Ordering Relations, r.size = 2
Initializing Variables
 
modifies(a, "x")

 EVALUATING MODIFIES (a "x")
3
answer is empty: 0
modifiesAnswer3 3
modifiesAnswer4 3
modifiesAnswer8 3
modifiesAnswer10 3
modifiesAnswer11 3
modifiesAnswer17 3
modifiesAnswer18 3
modifiesAnswer20 3
modifiesAnswer22 3
modifiesAnswer23 3
modifiesAnswer24 3
modifiesAnswer25 3
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
 
uses(a, "x")

 EVALUATING USES (a "x")
IntersectPairs tk1 Exists tk1 = a
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
3
11
22
25
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 3
Erasing element 3
Erasing element 3
Insert links for tk1 =a
--INSERTING a--
a Found in Linkages
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 11
RETURNING FINAL ANSWERS




Your answer: 11 
Correct answer: 11 
73 - Uses, Modifies :: 
assign a;
Select a such that Modifies (a, "t") and Uses (a, "t")
none
5000
Evaluating query 73 - Uses, Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
relationships with only one alpha token found
After Ordering Relations, r.size = 2
Initializing Variables
 
modifies(a, "t")

 EVALUATING MODIFIES (a "t")
4
answer is empty: 0
modifiesAnswer5 4
modifiesAnswer7 4
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
 
uses(a, "t")

 EVALUATING USES (a "t")
IntersectPairs tk1 Exists tk1 = a
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
5
7
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 4
Erasing element 4
Insert links for tk1 =a
--INSERTING a--
a Found in Linkages
--END OF INSERT--
Inserting tokens into relParameters
Found Relations to be False or Empty
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a p.size = 0
FIRST PARAM = a
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
74 - Uses, Modifies :: 
assign a;
Select a such that Modifies (a, "z") and Uses (a, "z")
16, 21
5000
Evaluating query 74 - Uses, Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
relationships with only one alpha token found
After Ordering Relations, r.size = 2
Initializing Variables
 
modifies(a, "z")

 EVALUATING MODIFIES (a "z")
6
answer is empty: 0
modifiesAnswer4 6
modifiesAnswer8 6
modifiesAnswer10 6
modifiesAnswer12 6
modifiesAnswer16 6
modifiesAnswer17 6
modifiesAnswer18 6
modifiesAnswer20 6
modifiesAnswer21 6
modifiesAnswer27 6
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
 
uses(a, "z")

 EVALUATING USES (a "z")
IntersectPairs tk1 Exists tk1 = a
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
12
16
21
27
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 6
Erasing element 6
Insert links for tk1 =a
--INSERTING a--
a Found in Linkages
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 2
FIRST PARAM = a
it2->ans1 = 16
it2->ans1 = 21
RETURNING FINAL ANSWERS




Your answer: 16 21 
Correct answer: 16 21 
75 - Modifies, Parent :: 
assign a; while w;
Select a such that Modifies (a, "idx") and Parent (w, a)
19
5000
Evaluating query 75 - Modifies, Parent :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 2
Initializing Variables
 
modifies(a, "idx")

 EVALUATING MODIFIES (a "idx")
1
answer is empty: 0
modifiesAnswer1 1
modifiesAnswer6 1
modifiesAnswer8 1
modifiesAnswer15 1
modifiesAnswer17 1
modifiesAnswer18 1
modifiesAnswer19 1
modifiesAnswer28 1
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
 
parent(w, a)

 EVALUATING PARENT (w a)
tk1 = w tk2 = a
pushing into parent pair1 = 10pair2 = 11
pushing into parent pair1 = 10pair2 = 12
pushing into parent pair1 = 18pair2 = 19
pushing into parent pair1 = 18pair2 = 21
before intersect pairs
IntersectPairs tk2 Exists tk2 = a
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
19
28
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 1
Erasing element 1
Insert links for tk1 =w
--INSERTING w--
w Not Found in Linkages and relIndex = 1
--END OF INSERT--
Insert links for tk2 = a
--INSERTING a--
a Found in Linkages
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 19
RETURNING FINAL ANSWERS




Your answer: 19 
Correct answer: 19 
76 - Modifies, Parent :: 
assign a; while w;
Select a such that Parent (w, a) and Modifies (a, "idx")
19
5000
Evaluating query 76 - Modifies, Parent :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 2
Initializing Variables
 
modifies(a, "idx")

 EVALUATING MODIFIES (a "idx")
1
answer is empty: 0
modifiesAnswer1 1
modifiesAnswer6 1
modifiesAnswer8 1
modifiesAnswer15 1
modifiesAnswer17 1
modifiesAnswer18 1
modifiesAnswer19 1
modifiesAnswer28 1
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
 
parent(w, a)

 EVALUATING PARENT (w a)
tk1 = w tk2 = a
pushing into parent pair1 = 10pair2 = 11
pushing into parent pair1 = 10pair2 = 12
pushing into parent pair1 = 18pair2 = 19
pushing into parent pair1 = 18pair2 = 21
before intersect pairs
IntersectPairs tk2 Exists tk2 = a
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
19
28
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 1
Erasing element 1
Insert links for tk1 =w
--INSERTING w--
w Not Found in Linkages and relIndex = 1
--END OF INSERT--
Insert links for tk2 = a
--INSERTING a--
a Found in Linkages
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 19
RETURNING FINAL ANSWERS




Your answer: 19 
Correct answer: 19 
77 - Modifies, Parent :: 
assign a; while w;
Select a such that Modifies (a, "idx") such that Parent (w, a)
19
5000
Evaluating query 77 - Modifies, Parent :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 2
Initializing Variables
 
modifies(a, "idx")

 EVALUATING MODIFIES (a "idx")
1
answer is empty: 0
modifiesAnswer1 1
modifiesAnswer6 1
modifiesAnswer8 1
modifiesAnswer15 1
modifiesAnswer17 1
modifiesAnswer18 1
modifiesAnswer19 1
modifiesAnswer28 1
In intersect Pairs: both do not exist
Insert links for tk1 =a
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
 
parent(w, a)

 EVALUATING PARENT (w a)
tk1 = w tk2 = a
pushing into parent pair1 = 10pair2 = 11
pushing into parent pair1 = 10pair2 = 12
pushing into parent pair1 = 18pair2 = 19
pushing into parent pair1 = 18pair2 = 21
before intersect pairs
IntersectPairs tk2 Exists tk2 = a
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
19
28
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 1
Erasing element 1
Insert links for tk1 =w
--INSERTING w--
w Not Found in Linkages and relIndex = 1
--END OF INSERT--
Insert links for tk2 = a
--INSERTING a--
a Found in Linkages
--END OF INSERT--
after intersect pairs
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 19
RETURNING FINAL ANSWERS




Your answer: 19 
Correct answer: 19 
78 - CallsStar :: 
procedure p;
Select p such that Calls* (p, "Charlie")
Alpha, Bravo
5000
Evaluating query 78 - CallsStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
calls*(p, "Charlie")

 EVALUATING CALLS* (p "Charlie")
---STARTING CALLS STAR---
in recursiveInverseCall currentIndex = 3
inserting 1
in recursiveInverseCall currentIndex = 1
inserting 2
in recursiveInverseCall currentIndex = 2
inserting 1
In intersect Pairs: both do not exist
Insert links for tk1 =p
--INSERTING p--
p Not Found in Linkages and relIndex = 0
--END OF INSERT--
---END OF CALLS STAR---
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 2
FIRST PARAM = p
it2->ans1 = 2
it2->ans1 = 1
RETURNING FINAL ANSWERS




Your answer: Bravo Alpha 
Correct answer: Alpha Bravo 
79 - Calls, Modifies, Uses :: 
procedure p;
Select p such that Calls ("Alpha", p) and Modifies (p, "z") and Uses (p, "y")
Bravo, Charlie
5000
Evaluating query 79 - Calls, Modifies, Uses :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
relationships with only one alpha token found
relationships with only one alpha token found
After Ordering Relations, r.size = 3
Initializing Variables
 
calls("Alpha", p)

 EVALUATING CALLS ("Alpha" p)
Call - Pushing Pair (1 2)
Call - Pushing Pair (1 3)
Call - Pushing Pair (1 4)
In intersect Pairs: both do not exist
Insert links for tk2 = p
--INSERTING p--
p Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
 
modifies(p, "z")

 EVALUATING MODIFIES (p "z")
In Modifies(p, "var")
IntersectPairs tk1 Exists tk1 = p
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = p
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
2
3
4
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 4
Insert links for tk1 =p
--INSERTING p--
p Found in Linkages
--END OF INSERT--
Inserting tokens into relParameters
 
uses(p, "y")

 EVALUATING USES (p "y")
IntersectPairs tk1 Exists tk1 = p
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = p
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
2
3
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 2
RelIndex of clause with contents being removed: 1
PairIndex: 1
Insert links for tk1 =p
--INSERTING p--
p Found in Linkages
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 2
FIRST PARAM = "Alpha"
SECOND PARAM = p
it2->ans2 = 2
it2->ans2 = 3
RETURNING FINAL ANSWERS




Your answer: Bravo Charlie 
Correct answer: Bravo Charlie 
80 - CallsStar, Modifies :: 
procedure p;
Select p such that Calls* ("Alpha", p) and Modifies (p, "z")
Bravo, Charlie
5000
Evaluating query 80 - CallsStar, Modifies :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
relationships with only one alpha token found
After Ordering Relations, r.size = 2
Initializing Variables
 
calls*("Alpha", p)

 EVALUATING CALLS* ("Alpha" p)
---STARTING CALLS STAR---
in recursive Call
rootindex = 1 currentIndex= 1
after getting called
in recursive Call
rootindex = 1 currentIndex= 2
after getting called
in recursive Call
rootindex = 1 currentIndex= 3
after getting called
in recursive Call
rootindex = 1 currentIndex= 4
after getting called
In intersect Pairs: both do not exist
Insert links for tk2 = p
--INSERTING p--
p Not Found in Linkages and relIndex = 0
--END OF INSERT--
---END OF CALLS STAR---
Inserting tokens into relParameters
 
modifies(p, "z")

 EVALUATING MODIFIES (p "z")
In Modifies(p, "var")
IntersectPairs tk1 Exists tk1 = p
--REMOVE PAIRS FROM REL ANS START--
In retrieveTokenEvaluatedAnswers Finding tk = p
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
2
3
4
End retrieving token
--REMOVE PAIRS FROM RELANS END--

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 4
Insert links for tk1 =p
--INSERTING p--
p Found in Linkages
--END OF INSERT--
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p p.size = 2
FIRST PARAM = "Alpha"
SECOND PARAM = p
it2->ans2 = 3
it2->ans2 = 2
RETURNING FINAL ANSWERS




Your answer: Charlie Bravo 
Correct answer: Bravo Charlie 
81 - Pattern :: 
assign a;
Select a pattern a ("x", _)
3, 11, 22, 25
5000
Evaluating query 81 - Pattern :: 
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 1
Initializing Variables
 
pattern("x", _)

 EVALUATING PATTERN
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
PRINTING PATTERNANS
ans1 = 25 ans2 = 25
ans1 = 22 ans2 = 22
ans1 = 11 ans2 = 11
ans1 = 3 ans2 = 3
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 4
FIRST PARAM = a
it2->ans1 = 25
it2->ans1 = 22
it2->ans1 = 11
it2->ans1 = 3
RETURNING FINAL ANSWERS




Your answer: 25 22 11 3 
Correct answer: 3 11 22 25 
82 - Pattern :: 
assign a;
Select a pattern a ("idx", "3 * y")
none
5000
Evaluating query 82 - Pattern :: 
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 1
Initializing Variables
 
pattern("idx", "3 * y")

 EVALUATING PATTERN
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
PRINTING PATTERNANS
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a p.size = 0
FIRST PARAM = a
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
83 - Pattern, Follows :: 
assign a; while w;
Select a pattern a ("y", _) such that Follows (w, a)
13
5000
Evaluating query 83 - Pattern, Follows :: 
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 2
Initializing Variables
 
follows(w, a)

 EVALUATING FOLLOWS (w a)
Both tokens are alpha and do not exist in linkages
trying is follows1
first.at(i) = 10second.at(i) = 13
first.at(i) = 18second.at(i) = 22
first.at(i) = 23second.at(i) = 27
--INSERTING w--
w Not Found in Linkages and relIndex = 0
--END OF INSERT--
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
Inserting tokens into relParameters
 
pattern("y", _)

 EVALUATING PATTERN
--INSERTING a--
a Found in Linkages
--END OF INSERT--
PRINTING PATTERNANS
ans1 = 26 ans2 = 26
ans1 = 14 ans2 = 14
ans1 = 13 ans2 = 13
ans1 = 2 ans2 = 2
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 3
FIRST PARAM = w
SECOND PARAM = a
it2->ans2 = 13
it2->ans2 = 22
it2->ans2 = 27
RETURNING FINAL ANSWERS




Your answer: 13 
Correct answer: 13 
84 - Pattern :: 
assign a;
Select a pattern a (_, "x + 1")
12
5000
Evaluating query 84 - Pattern :: 
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 1
Initializing Variables
 
pattern(_, "x + 1")

 EVALUATING PATTERN
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
PRINTING PATTERNANS
ans1 = 12 ans2 = 12
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 12
RETURNING FINAL ANSWERS




Your answer: 12 
Correct answer: 12 
85 - Pattern :: 
assign a;
Select a pattern a (_, "x * 5 + 3")
none
5000
Evaluating query 85 - Pattern :: 
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 1
Initializing Variables
 
pattern(_, "x * 5 + 3")

 EVALUATING PATTERN
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
PRINTING PATTERNANS
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a p.size = 0
FIRST PARAM = a
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
86 - Pattern :: 
assign a;
Select a pattern a (_, _"x + k * t"_)
none
5000
Evaluating query 86 - Pattern :: 
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 1
Initializing Variables
 
pattern(_, _"x + k * t"_)

 EVALUATING PATTERN
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
PRINTING PATTERNANS
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a p.size = 0
FIRST PARAM = a
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
87 - Pattern :: 
assign a;
Select a pattern a (_, _"x + idx"_)
11, 13, 14
5000
Evaluating query 87 - Pattern :: 
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 1
Initializing Variables
 
pattern(_, _"x + idx"_)

 EVALUATING PATTERN
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
PRINTING PATTERNANS
ans1 = 14 ans2 = 14
ans1 = 13 ans2 = 13
ans1 = 11 ans2 = 11
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 3
FIRST PARAM = a
it2->ans1 = 14
it2->ans1 = 13
it2->ans1 = 11
RETURNING FINAL ANSWERS




Your answer: 14 13 11 
Correct answer: 11 13 14 
88 - Pattern :: 
assign a;
Select a pattern a (_, _"k + x"_)
none
5000
Evaluating query 88 - Pattern :: 
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 1
Initializing Variables
 
pattern(_, _"k + x"_)

 EVALUATING PATTERN
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
PRINTING PATTERNANS
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a p.size = 0
FIRST PARAM = a
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
89 - Pattern :: 
assign a;
Select a pattern a (_, _"x + 3"_)
none
5000
Evaluating query 89 - Pattern :: 
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 1
Initializing Variables
 
pattern(_, _"x + 3"_)

 EVALUATING PATTERN
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
PRINTING PATTERNANS
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a p.size = 0
FIRST PARAM = a
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
90 - Pattern :: 
assign a;
Select a pattern a (_, _"x + 3 * y"_)
19
5000
Evaluating query 90 - Pattern :: 
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 1
Initializing Variables
 
pattern(_, _"x + 3 * y"_)

 EVALUATING PATTERN
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
PRINTING PATTERNANS
ans1 = 19 ans2 = 19
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 19
RETURNING FINAL ANSWERS




Your answer: 19 
Correct answer: 19 
91 - Pattern :: 
assign a;
Select a pattern a (_, _"3 * y"_)
19
5000
Evaluating query 91 - Pattern :: 
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 1
Initializing Variables
 
pattern(_, _"3 * y"_)

 EVALUATING PATTERN
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
PRINTING PATTERNANS
ans1 = 19 ans2 = 19
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 19
RETURNING FINAL ANSWERS




Your answer: 19 
Correct answer: 19 
92 - Pattern :: 
assign a;
Select a pattern a (_, _"5 + 3"_)
none
5000
Evaluating query 92 - Pattern :: 
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 1
Initializing Variables
 
pattern(_, _"5 + 3"_)

 EVALUATING PATTERN
--INSERTING a--
a Not Found in Linkages and relIndex = 0
--END OF INSERT--
PRINTING PATTERNANS
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a p.size = 0
FIRST PARAM = a
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
93 - Pattern :: 
assign a, a1;
Select a pattern a1 (_, _"x + 1"_)
1, 2, 3, 5, 7, 9, 11, 12, 13, 14, 16, 19, 21, 22, 25, 26, 27, 28
5000
Evaluating query 93 - Pattern :: 
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 1
Initializing Variables
 
pattern(_, _"x + 1"_)

 EVALUATING PATTERN
--INSERTING a1--
a1 Not Found in Linkages and relIndex = 0
--END OF INSERT--
PRINTING PATTERNANS
ans1 = 12 ans2 = 12
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: 1 2 3 5 7 9 11 12 13 14 16 19 21 22 25 26 27 28 
Correct answer: 1 2 3 5 7 9 11 12 13 14 16 19 21 22 25 26 27 28 
94 - With :: 
stmt s; constant co;
Select s with s.stmt# = co.value
1, 2, 3
5000
Evaluating query 94 - With :: 
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(s, co)

 EVALUATING WITH (s co)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: s
r.tk2: co
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
getting all constants
In intersect Pairs: both do not exist
Insert links for tk1 =s
--INSERTING s--
s Not Found in Linkages and relIndex = 0
--END OF INSERT--
Insert links for tk2 = co
--INSERTING co--
co Not Found in Linkages and relIndex = 0
--END OF INSERT--
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s p.size = 3
FIRST PARAM = s
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
RETURNING FINAL ANSWERS




Your answer: 1 2 3 
Correct answer: 1 2 3 
95 - Pattern, With :: 
if ifstat; constant co;
Select BOOLEAN pattern ifstat ("idx", _, _) with co.value = 2
true
5000
Evaluating query 95 - Pattern, With :: 
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
pattern("idx", _)

 EVALUATING PATTERN
--INSERTING ifstat--
ifstat Not Found in Linkages and relIndex = 0
--END OF INSERT--
PRINTING PATTERNANS
ans1 = 24 ans2 = 24
ans1 = 8 ans2 = 8
Inserting tokens into relParameters
 
with(co, 2)

 EVALUATING WITH (co 2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: co
r.tk2: 2
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 2
In intersect Pairs: both do not exist
Insert links for tk1 =co
--INSERTING co--
co Not Found in Linkages and relIndex = 1
--END OF INSERT--
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
96 - Next :: 

Select BOOLEAN such that Next (1, 2)
true
5000
Evaluating query 96 - Next :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next(1, 2)

 EVALUATING NEXT (1 2)
is true
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,14,
9 has next consisting of 10,
10 has next consisting of 11,13,
11 has next consisting of 12,
12 has next consisting of 10,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 
18 has next consisting of 19,22,
19 has next consisting of 20,
20 has next consisting of 21,
21 has next consisting of 18,
22 has next consisting of 
23 has next consisting of 24,27,
24 has next consisting of 25,26,
25 has next consisting of 23,
26 has next consisting of 23,
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
97 - Next :: 

Select BOOLEAN such that Next (6, 8)
false
5000
Evaluating query 97 - Next :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next(6, 8)

 EVALUATING NEXT (6 8)
is false
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,14,
9 has next consisting of 10,
10 has next consisting of 11,13,
11 has next consisting of 12,
12 has next consisting of 10,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 
18 has next consisting of 19,22,
19 has next consisting of 20,
20 has next consisting of 21,
21 has next consisting of 18,
22 has next consisting of 
23 has next consisting of 24,27,
24 has next consisting of 25,26,
25 has next consisting of 23,
26 has next consisting of 23,
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: false 
Correct answer: false 
98 - Next :: 

Select BOOLEAN such that Next (8, 9)
true
5000
Evaluating query 98 - Next :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next(8, 9)

 EVALUATING NEXT (8 9)
is true
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,14,
9 has next consisting of 10,
10 has next consisting of 11,13,
11 has next consisting of 12,
12 has next consisting of 10,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 
18 has next consisting of 19,22,
19 has next consisting of 20,
20 has next consisting of 21,
21 has next consisting of 18,
22 has next consisting of 
23 has next consisting of 24,27,
24 has next consisting of 25,26,
25 has next consisting of 23,
26 has next consisting of 23,
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
99 - Next :: 

Select BOOLEAN such that Next (10, 11)
true
5000
Evaluating query 99 - Next :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next(10, 11)

 EVALUATING NEXT (10 11)
is true
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,14,
9 has next consisting of 10,
10 has next consisting of 11,13,
11 has next consisting of 12,
12 has next consisting of 10,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 
18 has next consisting of 19,22,
19 has next consisting of 20,
20 has next consisting of 21,
21 has next consisting of 18,
22 has next consisting of 
23 has next consisting of 24,27,
24 has next consisting of 25,26,
25 has next consisting of 23,
26 has next consisting of 23,
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
100 - Next ::

Select BOOLEAN such that Next (12, 10)
true
5000
Evaluating query 100 - Next ::
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next(12, 10)

 EVALUATING NEXT (12 10)
is true
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,14,
9 has next consisting of 10,
10 has next consisting of 11,13,
11 has next consisting of 12,
12 has next consisting of 10,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 
18 has next consisting of 19,22,
19 has next consisting of 20,
20 has next consisting of 21,
21 has next consisting of 18,
22 has next consisting of 
23 has next consisting of 24,27,
24 has next consisting of 25,26,
25 has next consisting of 23,
26 has next consisting of 23,
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
101 - Next :: 

Select BOOLEAN such that Next (12, 11)
false
5000
Evaluating query 101 - Next :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next(12, 11)

 EVALUATING NEXT (12 11)
is false
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,14,
9 has next consisting of 10,
10 has next consisting of 11,13,
11 has next consisting of 12,
12 has next consisting of 10,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 
18 has next consisting of 19,22,
19 has next consisting of 20,
20 has next consisting of 21,
21 has next consisting of 18,
22 has next consisting of 
23 has next consisting of 24,27,
24 has next consisting of 25,26,
25 has next consisting of 23,
26 has next consisting of 23,
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: false 
Correct answer: false 
102 - Next :: 

Select BOOLEAN such that Next (13, 14)
false
5000
Evaluating query 102 - Next :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next(13, 14)

 EVALUATING NEXT (13 14)
is false
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,14,
9 has next consisting of 10,
10 has next consisting of 11,13,
11 has next consisting of 12,
12 has next consisting of 10,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 
18 has next consisting of 19,22,
19 has next consisting of 20,
20 has next consisting of 21,
21 has next consisting of 18,
22 has next consisting of 
23 has next consisting of 24,27,
24 has next consisting of 25,26,
25 has next consisting of 23,
26 has next consisting of 23,
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: false 
Correct answer: false 
103 - Next :: 

Select BOOLEAN such that Next (17, 18)
false
5000
Evaluating query 103 - Next :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next(17, 18)

 EVALUATING NEXT (17 18)
is false
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,14,
9 has next consisting of 10,
10 has next consisting of 11,13,
11 has next consisting of 12,
12 has next consisting of 10,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 
18 has next consisting of 19,22,
19 has next consisting of 20,
20 has next consisting of 21,
21 has next consisting of 18,
22 has next consisting of 
23 has next consisting of 24,27,
24 has next consisting of 25,26,
25 has next consisting of 23,
26 has next consisting of 23,
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: false 
Correct answer: false 
104 - Next :: 

Select BOOLEAN such that Next (23, 27)
true
5000
Evaluating query 104 - Next :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next(23, 27)

 EVALUATING NEXT (23 27)
is true
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,14,
9 has next consisting of 10,
10 has next consisting of 11,13,
11 has next consisting of 12,
12 has next consisting of 10,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 
18 has next consisting of 19,22,
19 has next consisting of 20,
20 has next consisting of 21,
21 has next consisting of 18,
22 has next consisting of 
23 has next consisting of 24,27,
24 has next consisting of 25,26,
25 has next consisting of 23,
26 has next consisting of 23,
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
105 - NextStar :: 

Select BOOLEAN such that Next* (9, 9)
false
5000
Evaluating query 105 - NextStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(9, 9)

 EVALUATING NEXT* (9 9)
nextStarTable empty = 1
tk1Int = 9 tk2Int = 9
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: false 
Correct answer: false 
106 - NextStar :: 

Select BOOLEAN such that Next* (10, 10)
true
5000
Evaluating query 106 - NextStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(10, 10)

 EVALUATING NEXT* (10 10)
nextStarTable empty = 1
tk1Int = 10 tk2Int = 10
TargetIndex found
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
107 - NextStar :: 

Select BOOLEAN such that Next* (12, 12)
true
5000
Evaluating query 107 - NextStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(12, 12)

 EVALUATING NEXT* (12 12)
nextStarTable empty = 1
tk1Int = 12 tk2Int = 12
TargetIndex found
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
108 - NextStar :: 

Select BOOLEAN such that Next* (20, 20)
true
5000
Evaluating query 108 - NextStar :: 
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(20, 20)

 EVALUATING NEXT* (20 20)
nextStarTable empty = 1
tk1Int = 20 tk2Int = 20
TargetIndex found
In intersect Pairs: both do not exist
Inserting tokens into relParameters
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: true 
Correct answer: true 
End of evaluating Query File.
AutoTester Completed !
