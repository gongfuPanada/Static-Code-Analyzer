Parameters : S9-with2.txt Q9-with2.txt R9-with2.xml
Beginning to parse Simple Program.
Begin CodeParser
End CodeParser
Begin DesignExtractor
DE: Extracted Relationships
Building CFG
End DesignExtractor
End of parsing Simple Program.
iterationX
Beginning to evaluate Query File.
New Category :  With 
1 - With, stmt
stmt s1;
Select s1 with s1.stmt#=1
1
5000
Evaluating query 1 - With, stmt
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(s1, 1)

 EVALUATING WITH (s1 1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: s1
r.tk2: 1
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 1
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 1
FIRST PARAM = s1
it2->ans1 = 1
RETURNING FINAL ANSWERS




Your answer: 1 
Correct answer: 1 
2 - With, stmt
stmt s1;
Select s1 with s1.stmt#=1312312311
none
5000
Evaluating query 2 - With, stmt
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(s1, 1312312311)

 EVALUATING WITH (s1 1312312311)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: s1
r.tk2: 1312312311
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 1312312311
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s1 p.size = 0
FIRST PARAM = s1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
3 - With, stmt
stmt s1;
Select s1 with s1.stmt#=999999
none
5000
Evaluating query 3 - With, stmt
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(s1, 999999)

 EVALUATING WITH (s1 999999)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: s1
r.tk2: 999999
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 999999
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s1 p.size = 0
FIRST PARAM = s1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
4 - With, constant
constant c1;
Select c1 with c1.value=2
2
5000
Evaluating query 4 - With, constant
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(c1, 2)

 EVALUATING WITH (c1 2)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c1
r.tk2: 2
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 2
In intersect Pairs: both do not exist
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = c1 p.size = 1
FIRST PARAM = c1
it2->ans1 = 2
RETURNING FINAL ANSWERS




Your answer: 1 
Correct answer: 2 
Missing: 2 
Additional: 1 
5 - With, constant
constant c1;
Select c1 with c1.value=1
1
5000
Evaluating query 5 - With, constant
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(c1, 1)

 EVALUATING WITH (c1 1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c1
r.tk2: 1
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 1
In intersect Pairs: both do not exist
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = c1 p.size = 1
FIRST PARAM = c1
it2->ans1 = 1
RETURNING FINAL ANSWERS




Your answer: 2 
Correct answer: 1 
Missing: 1 
Additional: 2 
6 - With, constant
constant c1;
Select c1 with c1.value=12312
none
5000
Evaluating query 6 - With, constant
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(c1, 12312)

 EVALUATING WITH (c1 12312)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c1
r.tk2: 12312
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 12312
In intersect Pairs: both do not exist
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = c1 p.size = 0
FIRST PARAM = c1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
7 - With, constant
constant c1;
Select c1 with c1.value=999999
none
5000
Evaluating query 7 - With, constant
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(c1, 999999)

 EVALUATING WITH (c1 999999)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c1
r.tk2: 999999
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 999999
In intersect Pairs: both do not exist
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = c1 p.size = 0
FIRST PARAM = c1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
8 - With, constant
constant c1;
Select c1 with c1.value=1
1
5000
Evaluating query 8 - With, constant
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(c1, 1)

 EVALUATING WITH (c1 1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c1
r.tk2: 1
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 1
In intersect Pairs: both do not exist
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = c1 p.size = 1
FIRST PARAM = c1
it2->ans1 = 1
RETURNING FINAL ANSWERS




Your answer: 2 
Correct answer: 1 
Missing: 1 
Additional: 2 
9 - With, variable
variable v1;
Select v1 with v1.varName="j"
j
5000
Evaluating query 9 - With, variable
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(v1, "j")

 EVALUATING WITH (v1 "j")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v1
r.tk2: "j"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "j" index = 2
In intersect Pairs: both do not exist
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v1 p.size = 1
FIRST PARAM = v1
it2->ans1 = 2
RETURNING FINAL ANSWERS




Your answer: j 
Correct answer: j 
10 - With, variable
variable v1;
Select v1 with v1.varName="varLoop5"
varLoop5
5000
Evaluating query 10 - With, variable
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(v1, "varLoop5")

 EVALUATING WITH (v1 "varLoop5")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v1
r.tk2: "varLoop5"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "varLoop5" index = 25
In intersect Pairs: both do not exist
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v1 p.size = 1
FIRST PARAM = v1
it2->ans1 = 25
RETURNING FINAL ANSWERS




Your answer: varLoop5 
Correct answer: varLoop5 
11 - With, variable
variable v1;
Select v1 with v1.varName="vasdasdasd"
none
5000
Evaluating query 11 - With, variable
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(v1, "vasdasdasd")

 EVALUATING WITH (v1 "vasdasdasd")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v1
r.tk2: "vasdasdasd"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "vasdasdasd" index = -1
In intersect Pairs: both do not exist
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = v1 p.size = 0
FIRST PARAM = v1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
12 - With, procedure
procedure p1;
Select p1 with p1.procName="Second"
Second
5000
Evaluating query 12 - With, procedure
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(p1, "Second")

 EVALUATING WITH (p1 "Second")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: p1
r.tk2: "Second"
only 1 alpha token found
procedure
null
First token PROCEDURE
tk2 = "Second" index = 1
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p1 p.size = 1
FIRST PARAM = p1
it2->ans1 = 1
RETURNING FINAL ANSWERS




Your answer: Second 
Correct answer: Second 
13 - With, procedure
procedure p1;
Select p1 with p1.procName="InsaneWhile"
InsaneWhile
5000
Evaluating query 13 - With, procedure
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(p1, "InsaneWhile")

 EVALUATING WITH (p1 "InsaneWhile")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: p1
r.tk2: "InsaneWhile"
only 1 alpha token found
procedure
null
First token PROCEDURE
tk2 = "InsaneWhile" index = 2
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p1 p.size = 1
FIRST PARAM = p1
it2->ans1 = 2
RETURNING FINAL ANSWERS




Your answer: InsaneWhile 
Correct answer: InsaneWhile 
14 - With, procedure
procedure p1;
Select p1 with p1.procName="Wrong"
none
5000
Evaluating query 14 - With, procedure
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(p1, "Wrong")

 EVALUATING WITH (p1 "Wrong")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: p1
r.tk2: "Wrong"
only 1 alpha token found
procedure
null
First token PROCEDURE
tk2 = "Wrong" index = -1
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = p1 p.size = 0
FIRST PARAM = p1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
15 - With, stmt
stmt s1;
Select s1 with s1.stmt#=s1.stmt#
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57
5000
Evaluating query 15 - With, stmt
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(s1, s1)

 EVALUATING WITH (s1 s1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: s1
r.tk2: s1
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
getting all stmts
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 57
FIRST PARAM = s1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
it2->ans1 = 11
it2->ans1 = 12
it2->ans1 = 13
it2->ans1 = 14
it2->ans1 = 15
it2->ans1 = 16
it2->ans1 = 17
it2->ans1 = 18
it2->ans1 = 19
it2->ans1 = 20
it2->ans1 = 21
it2->ans1 = 22
it2->ans1 = 23
it2->ans1 = 24
it2->ans1 = 25
it2->ans1 = 26
it2->ans1 = 27
it2->ans1 = 28
it2->ans1 = 29
it2->ans1 = 30
it2->ans1 = 31
it2->ans1 = 32
it2->ans1 = 33
it2->ans1 = 34
it2->ans1 = 35
it2->ans1 = 36
it2->ans1 = 37
it2->ans1 = 38
it2->ans1 = 39
it2->ans1 = 40
it2->ans1 = 41
it2->ans1 = 42
it2->ans1 = 43
it2->ans1 = 44
it2->ans1 = 45
it2->ans1 = 46
it2->ans1 = 47
it2->ans1 = 48
it2->ans1 = 49
it2->ans1 = 50
it2->ans1 = 51
it2->ans1 = 52
it2->ans1 = 53
it2->ans1 = 54
it2->ans1 = 55
it2->ans1 = 56
it2->ans1 = 57
RETURNING FINAL ANSWERS
<exception/>
16 - With, stmt
stmt s1,s2,s3;
Select s1 with s1.stmt#=s2.stmt#
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57
5000
Evaluating query 16 - With, stmt
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(s1, s2)

 EVALUATING WITH (s1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: s1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
getting all stmts
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 57
FIRST PARAM = s1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
it2->ans1 = 11
it2->ans1 = 12
it2->ans1 = 13
it2->ans1 = 14
it2->ans1 = 15
it2->ans1 = 16
it2->ans1 = 17
it2->ans1 = 18
it2->ans1 = 19
it2->ans1 = 20
it2->ans1 = 21
it2->ans1 = 22
it2->ans1 = 23
it2->ans1 = 24
it2->ans1 = 25
it2->ans1 = 26
it2->ans1 = 27
it2->ans1 = 28
it2->ans1 = 29
it2->ans1 = 30
it2->ans1 = 31
it2->ans1 = 32
it2->ans1 = 33
it2->ans1 = 34
it2->ans1 = 35
it2->ans1 = 36
it2->ans1 = 37
it2->ans1 = 38
it2->ans1 = 39
it2->ans1 = 40
it2->ans1 = 41
it2->ans1 = 42
it2->ans1 = 43
it2->ans1 = 44
it2->ans1 = 45
it2->ans1 = 46
it2->ans1 = 47
it2->ans1 = 48
it2->ans1 = 49
it2->ans1 = 50
it2->ans1 = 51
it2->ans1 = 52
it2->ans1 = 53
it2->ans1 = 54
it2->ans1 = 55
it2->ans1 = 56
it2->ans1 = 57
RETURNING FINAL ANSWERS




Your answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
17 - With, stmt
stmt s1,s2,s3;
Select s1 with s1.stmt#=s2.stmt# and s2.stmt#=30
30
5000
Evaluating query 17 - With, stmt
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(s2, 30)

 EVALUATING WITH (s2 30)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: s2
r.tk2: 30
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 30
In intersect Pairs: both do not exist
Insert links for tk1 =s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(s1, s2)

 EVALUATING WITH (s1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
30
End retrieving token
IntersectPairs tk2 Exists tk2 = s2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
30
End retrieving token
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 30
RelIndex of clause with contents being removed: 0
PairIndex: 1
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 1
FIRST PARAM = s1
it2->ans1 = 30
RETURNING FINAL ANSWERS




Your answer: 30 
Correct answer: 30 
18 - With, stmt
stmt s1,s2,s3;
Select s1 with s1.stmt#=s2.stmt# and s2.stmt#=30 and s3.stmt#=s2.stmt#
30
5000
Evaluating query 18 - With, stmt
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
with relationship found
After Ordering Relations, r.size = 3
Initializing Variables
 
with(s3, s2)

 EVALUATING WITH (s3 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: s3
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
getting all stmts
In intersect Pairs: both do not exist
Insert links for tk1 =s3
IN INSERT LINKS INSERTING TOKEN = s3
s3 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(s1, s2)

 EVALUATING WITH (s1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
End retrieving token
IntersectPairs tk2 Exists tk2 = s2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
End retrieving token
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
Inserting 2
Inserting 3
Inserting 4
Inserting 5
Inserting 6
Inserting 7
Inserting 8
Inserting 9
Inserting 10
Inserting 11
Inserting 12
Inserting 13
Inserting 14
Inserting 15
Inserting 16
Inserting 17
Inserting 18
Inserting 19
Inserting 20
Inserting 21
Inserting 22
Inserting 23
Inserting 24
Inserting 25
Inserting 26
Inserting 27
Inserting 28
Inserting 29
Inserting 30
Inserting 31
Inserting 32
Inserting 33
Inserting 34
Inserting 35
Inserting 36
Inserting 37
Inserting 38
Inserting 39
Inserting 40
Inserting 41
Inserting 42
Inserting 43
Inserting 44
Inserting 45
Inserting 46
Inserting 47
Inserting 48
Inserting 49
Inserting 50
Inserting 51
Inserting 52
Inserting 53
Inserting 54
Inserting 55
Inserting 56
Inserting 57
RelIndex of clause with contents being removed: 0
PairIndex: 2
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(s2, 30)

 EVALUATING WITH (s2 30)

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: s2
r.tk2: 30
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 30
IntersectPairs tk1 Exists tk1 = s2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
End retrieving token
in for loop
pair index is 130
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 30
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 7
Erasing element 8
Erasing element 9
Erasing element 10
Erasing element 11
Erasing element 12
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 17
Erasing element 18
Erasing element 19
Erasing element 20
Erasing element 21
Erasing element 22
Erasing element 23
Erasing element 24
Erasing element 25
Erasing element 26
Erasing element 27
Erasing element 28
Erasing element 29
Erasing element 31
Erasing element 32
Erasing element 33
Erasing element 34
Erasing element 35
Erasing element 36
Erasing element 37
Erasing element 38
Erasing element 39
Erasing element 40
Erasing element 41
Erasing element 42
Erasing element 43
Erasing element 44
Erasing element 45
Erasing element 46
Erasing element 47
Erasing element 48
Erasing element 49
Erasing element 50
Erasing element 51
Erasing element 52
Erasing element 53
Erasing element 54
Erasing element 55
Erasing element 56
Erasing element 57
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 7
Erasing element 8
Erasing element 9
Erasing element 10
Erasing element 11
Erasing element 12
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 17
Erasing element 18
Erasing element 19
Erasing element 20
Erasing element 21
Erasing element 22
Erasing element 23
Erasing element 24
Erasing element 25
Erasing element 26
Erasing element 27
Erasing element 28
Erasing element 29
Erasing element 31
Erasing element 32
Erasing element 33
Erasing element 34
Erasing element 35
Erasing element 36
Erasing element 37
Erasing element 38
Erasing element 39
Erasing element 40
Erasing element 41
Erasing element 42
Erasing element 43
Erasing element 44
Erasing element 45
Erasing element 46
Erasing element 47
Erasing element 48
Erasing element 49
Erasing element 50
Erasing element 51
Erasing element 52
Erasing element 53
Erasing element 54
Erasing element 55
Erasing element 56
Erasing element 57
Insert links for tk1 =s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 1
FIRST PARAM = s1
it2->ans1 = 30
RETURNING FINAL ANSWERS




Your answer: 30 
Correct answer: 30 
19 - With, stmt
stmt s1,s2,s3;
Select s1 with s1.stmt#=s2.stmt# and s2.stmt#=12312
none
5000
Evaluating query 19 - With, stmt
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(s2, 12312)

 EVALUATING WITH (s2 12312)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: s2
r.tk2: 12312
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 12312
In intersect Pairs: both do not exist
Insert links for tk1 =s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(s1, s2)

 EVALUATING WITH (s1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
IntersectPairs tk2 Exists tk2 = s2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s1 p.size = 0
FIRST PARAM = s1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
20 - With, stmt
stmt s1,s2,s3;
Select s1 with s1.stmt#=s2.stmt# and s3.stmt#=12312
none
5000
Evaluating query 20 - With, stmt
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(s3, 12312)

 EVALUATING WITH (s3 12312)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: s3
r.tk2: 12312
only 1 alpha token found
null
null
First token NEITHER VAR NOR PROC
Index: 12312
In intersect Pairs: both do not exist
Insert links for tk1 =s3
IN INSERT LINKS INSERTING TOKEN = s3
s3 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(s1, s2)

 EVALUATING WITH (s1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
getting all stmts
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s1 p.size = 57
FIRST PARAM = s1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
it2->ans1 = 11
it2->ans1 = 12
it2->ans1 = 13
it2->ans1 = 14
it2->ans1 = 15
it2->ans1 = 16
it2->ans1 = 17
it2->ans1 = 18
it2->ans1 = 19
it2->ans1 = 20
it2->ans1 = 21
it2->ans1 = 22
it2->ans1 = 23
it2->ans1 = 24
it2->ans1 = 25
it2->ans1 = 26
it2->ans1 = 27
it2->ans1 = 28
it2->ans1 = 29
it2->ans1 = 30
it2->ans1 = 31
it2->ans1 = 32
it2->ans1 = 33
it2->ans1 = 34
it2->ans1 = 35
it2->ans1 = 36
it2->ans1 = 37
it2->ans1 = 38
it2->ans1 = 39
it2->ans1 = 40
it2->ans1 = 41
it2->ans1 = 42
it2->ans1 = 43
it2->ans1 = 44
it2->ans1 = 45
it2->ans1 = 46
it2->ans1 = 47
it2->ans1 = 48
it2->ans1 = 49
it2->ans1 = 50
it2->ans1 = 51
it2->ans1 = 52
it2->ans1 = 53
it2->ans1 = 54
it2->ans1 = 55
it2->ans1 = 56
it2->ans1 = 57
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
21 - With, stmt, constant
stmt s1,s2; constant c1,c2;
Select s1 with s1.stmt#=c1.value
1, 2, 4, 5, 6, 7, 8, 9, 10
5000
Evaluating query 21 - With, stmt, constant
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(s1, c1)

 EVALUATING WITH (s1 c1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: s1
r.tk2: c1
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
getting all constants
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 9
FIRST PARAM = s1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
RETURNING FINAL ANSWERS




Your answer: 1 2 4 5 6 7 8 9 10 
Correct answer: 1 2 4 5 6 7 8 9 10 
22 - With, stmt, constant
stmt s1,s2; constant c1,c2;
Select c1 with s1.stmt#=c1.value
1, 2, 4, 5, 6, 7, 8, 9, 10
5000
Evaluating query 22 - With, stmt, constant
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(s1, c1)

 EVALUATING WITH (s1 c1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: s1
r.tk2: c1
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
getting all constants
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = c1 p.size = 9
FIRST PARAM = s1
SECOND PARAM = c1
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 7
it2->ans2 = 8
it2->ans2 = 9
it2->ans2 = 10
RETURNING FINAL ANSWERS




Your answer: 2 1 5 12345 10 9 8 7 6 
Correct answer: 1 2 4 5 6 7 8 9 10 
Missing: 4 
Additional: 12345 
23 - With, stmt, constant
stmt s1,s2; constant c1,c2;
Select s1 with s1.stmt#=s2.stmt# and c1.value=s2.stmt#
1, 2, 4, 5, 6, 7, 8, 9, 10
5000
Evaluating query 23 - With, stmt, constant
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(c1, s2)

 EVALUATING WITH (c1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all constants
getting all stmts
In intersect Pairs: both do not exist
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(s1, s2)

 EVALUATING WITH (s1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
4
5
6
7
8
9
10
End retrieving token
IntersectPairs tk2 Exists tk2 = s2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
4
5
6
7
8
9
10
End retrieving token
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
Inserting 2
Inserting 4
Inserting 5
Inserting 6
Inserting 7
Inserting 8
Inserting 9
Inserting 10
RelIndex of clause with contents being removed: 0
PairIndex: 2
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 9
FIRST PARAM = s1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
RETURNING FINAL ANSWERS




Your answer: 1 2 4 5 6 7 8 9 10 
Correct answer: 1 2 4 5 6 7 8 9 10 
24 - With, stmt, constant
stmt s1,s2; constant c1,c2;
Select c1 with s1.stmt#=s2.stmt# and c1.value=s2.stmt#
1, 2, 4, 5, 6, 7, 8, 9, 10
5000
Evaluating query 24 - With, stmt, constant
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(c1, s2)

 EVALUATING WITH (c1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all constants
getting all stmts
In intersect Pairs: both do not exist
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(s1, s2)

 EVALUATING WITH (s1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
4
5
6
7
8
9
10
End retrieving token
IntersectPairs tk2 Exists tk2 = s2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
4
5
6
7
8
9
10
End retrieving token
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
Inserting 2
Inserting 4
Inserting 5
Inserting 6
Inserting 7
Inserting 8
Inserting 9
Inserting 10
RelIndex of clause with contents being removed: 0
PairIndex: 2
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = c1 p.size = 9
FIRST PARAM = c1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
RETURNING FINAL ANSWERS




Your answer: 2 1 5 12345 10 9 8 7 6 
Correct answer: 1 2 4 5 6 7 8 9 10 
Missing: 4 
Additional: 12345 
25 - With, stmt, constant
stmt s1,s2; constant c1,c2;
Select c1 with s1.stmt#=s2.stmt# and c1.value=s2.stmt# and c1.value=c2.value and c2.value = 0
none
5000
Evaluating query 25 - With, stmt, constant
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
with relationship found
with relationship found
After Ordering Relations, r.size = 4
Initializing Variables
 
with(c2, 0)

 EVALUATING WITH (c2 0)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c2
r.tk2: 0
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 0
In intersect Pairs: both do not exist
Insert links for tk1 =c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(s1, s2)

 EVALUATING WITH (s1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
getting all stmts
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(c1, s2)

 EVALUATING WITH (c1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: c1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all constants
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
End retrieving token
IntersectPairs tk2 Exists tk2 = s2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
End retrieving token
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
Inserting 2
Inserting 4
Inserting 5
Inserting 6
Inserting 7
Inserting 8
Inserting 9
Inserting 10
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 3
Erasing element 11
Erasing element 12
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 17
Erasing element 18
Erasing element 19
Erasing element 20
Erasing element 21
Erasing element 22
Erasing element 23
Erasing element 24
Erasing element 25
Erasing element 26
Erasing element 27
Erasing element 28
Erasing element 29
Erasing element 30
Erasing element 31
Erasing element 32
Erasing element 33
Erasing element 34
Erasing element 35
Erasing element 36
Erasing element 37
Erasing element 38
Erasing element 39
Erasing element 40
Erasing element 41
Erasing element 42
Erasing element 43
Erasing element 44
Erasing element 45
Erasing element 46
Erasing element 47
Erasing element 48
Erasing element 49
Erasing element 50
Erasing element 51
Erasing element 52
Erasing element 53
Erasing element 54
Erasing element 55
Erasing element 56
Erasing element 57
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 2
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(c1, c2)

 EVALUATING WITH (c1 c2)

---START EVALUATE WITH METHOD---
Relationship Index: 3
r.tk1: c1
r.tk2: c2
2 alpha tokens found
tk1 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = c1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
4
5
6
7
8
9
10
End retrieving token
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
0
End retrieving token
Both tk1 and tk2 Exists tk1 = c1 tk2 = c2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = c1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
4
5
6
7
8
9
10
End retrieving token
end of RemovePairsFromRelAns
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
0
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 2
PairIndex: 1
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 7
Erasing element 8
Erasing element 9
Erasing element 10

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 0
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Found in Linkages
Insert links for tk2 = c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Found Relations to be False or Empty
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = c1 p.size = 0
FIRST PARAM = c1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
26 - With, stmt, constant
stmt s1,s2; constant c1,c2;
Select s1 with s1.stmt#=s2.stmt# and c1.value=s2.stmt# and c1.value=c2.value and c2.value = 0
none
5000
Evaluating query 26 - With, stmt, constant
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
with relationship found
with relationship found
After Ordering Relations, r.size = 4
Initializing Variables
 
with(c2, 0)

 EVALUATING WITH (c2 0)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c2
r.tk2: 0
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 0
In intersect Pairs: both do not exist
Insert links for tk1 =c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(s1, s2)

 EVALUATING WITH (s1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
getting all stmts
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(c1, s2)

 EVALUATING WITH (c1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: c1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all constants
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
End retrieving token
IntersectPairs tk2 Exists tk2 = s2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
End retrieving token
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
Inserting 2
Inserting 4
Inserting 5
Inserting 6
Inserting 7
Inserting 8
Inserting 9
Inserting 10
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 3
Erasing element 11
Erasing element 12
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 17
Erasing element 18
Erasing element 19
Erasing element 20
Erasing element 21
Erasing element 22
Erasing element 23
Erasing element 24
Erasing element 25
Erasing element 26
Erasing element 27
Erasing element 28
Erasing element 29
Erasing element 30
Erasing element 31
Erasing element 32
Erasing element 33
Erasing element 34
Erasing element 35
Erasing element 36
Erasing element 37
Erasing element 38
Erasing element 39
Erasing element 40
Erasing element 41
Erasing element 42
Erasing element 43
Erasing element 44
Erasing element 45
Erasing element 46
Erasing element 47
Erasing element 48
Erasing element 49
Erasing element 50
Erasing element 51
Erasing element 52
Erasing element 53
Erasing element 54
Erasing element 55
Erasing element 56
Erasing element 57
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 2
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(c1, c2)

 EVALUATING WITH (c1 c2)

---START EVALUATE WITH METHOD---
Relationship Index: 3
r.tk1: c1
r.tk2: c2
2 alpha tokens found
tk1 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = c1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
4
5
6
7
8
9
10
End retrieving token
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
0
End retrieving token
Both tk1 and tk2 Exists tk1 = c1 tk2 = c2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = c1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
4
5
6
7
8
9
10
End retrieving token
end of RemovePairsFromRelAns
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
0
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 2
PairIndex: 1
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 7
Erasing element 8
Erasing element 9
Erasing element 10

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 0
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Found in Linkages
Insert links for tk2 = c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Found Relations to be False or Empty
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s1 p.size = 9
FIRST PARAM = s1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
27 - With, stmt, constant
stmt s1,s2; constant c1,c2;
Select c1 with s1.stmt#=s2.stmt# and c1.value=s2.stmt# and c1.value=c2.value and c2.value = 1
1
5000
Evaluating query 27 - With, stmt, constant
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
with relationship found
with relationship found
After Ordering Relations, r.size = 4
Initializing Variables
 
with(c2, 1)

 EVALUATING WITH (c2 1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c2
r.tk2: 1
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 1
In intersect Pairs: both do not exist
Insert links for tk1 =c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(s1, s2)

 EVALUATING WITH (s1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
getting all stmts
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(c1, s2)

 EVALUATING WITH (c1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: c1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all constants
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
End retrieving token
IntersectPairs tk2 Exists tk2 = s2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
End retrieving token
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
Inserting 2
Inserting 4
Inserting 5
Inserting 6
Inserting 7
Inserting 8
Inserting 9
Inserting 10
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 3
Erasing element 11
Erasing element 12
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 17
Erasing element 18
Erasing element 19
Erasing element 20
Erasing element 21
Erasing element 22
Erasing element 23
Erasing element 24
Erasing element 25
Erasing element 26
Erasing element 27
Erasing element 28
Erasing element 29
Erasing element 30
Erasing element 31
Erasing element 32
Erasing element 33
Erasing element 34
Erasing element 35
Erasing element 36
Erasing element 37
Erasing element 38
Erasing element 39
Erasing element 40
Erasing element 41
Erasing element 42
Erasing element 43
Erasing element 44
Erasing element 45
Erasing element 46
Erasing element 47
Erasing element 48
Erasing element 49
Erasing element 50
Erasing element 51
Erasing element 52
Erasing element 53
Erasing element 54
Erasing element 55
Erasing element 56
Erasing element 57
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 2
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(c1, c2)

 EVALUATING WITH (c1 c2)

---START EVALUATE WITH METHOD---
Relationship Index: 3
r.tk1: c1
r.tk2: c2
2 alpha tokens found
tk1 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = c1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
4
5
6
7
8
9
10
End retrieving token
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
End retrieving token
Both tk1 and tk2 Exists tk1 = c1 tk2 = c2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = c1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
4
5
6
7
8
9
10
End retrieving token
in for loop
pair index is 11
end of RemovePairsFromRelAns
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
End retrieving token
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
RelIndex of clause with contents being removed: 2
PairIndex: 1
Erasing element 2
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 7
Erasing element 8
Erasing element 9
Erasing element 10

---START REMOVE PAIRS METHOD---
Inserting 1
RelIndex of clause with contents being removed: 0
PairIndex: 1
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Found in Linkages
Insert links for tk2 = c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = c1 p.size = 1
FIRST PARAM = c1
it2->ans1 = 1
RETURNING FINAL ANSWERS




Your answer: 2 
Correct answer: 1 
Missing: 1 
Additional: 2 
28 - With, stmt, constant
stmt s1,s2; constant c1,c2;
Select s1 with s1.stmt#=s2.stmt# and c1.value=s2.stmt# and c1.value=c2.value and c2.value = 1
1
5000
Evaluating query 28 - With, stmt, constant
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
with relationship found
with relationship found
After Ordering Relations, r.size = 4
Initializing Variables
 
with(c2, 1)

 EVALUATING WITH (c2 1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c2
r.tk2: 1
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 1
In intersect Pairs: both do not exist
Insert links for tk1 =c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(s1, s2)

 EVALUATING WITH (s1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: s1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all stmts
getting all stmts
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(c1, s2)

 EVALUATING WITH (c1 s2)

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: c1
r.tk2: s2
2 alpha tokens found
tk1 does not exist in linkages
getting all constants
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
End retrieving token
IntersectPairs tk2 Exists tk2 = s2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
End retrieving token
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
Inserting 2
Inserting 4
Inserting 5
Inserting 6
Inserting 7
Inserting 8
Inserting 9
Inserting 10
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 3
Erasing element 11
Erasing element 12
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 17
Erasing element 18
Erasing element 19
Erasing element 20
Erasing element 21
Erasing element 22
Erasing element 23
Erasing element 24
Erasing element 25
Erasing element 26
Erasing element 27
Erasing element 28
Erasing element 29
Erasing element 30
Erasing element 31
Erasing element 32
Erasing element 33
Erasing element 34
Erasing element 35
Erasing element 36
Erasing element 37
Erasing element 38
Erasing element 39
Erasing element 40
Erasing element 41
Erasing element 42
Erasing element 43
Erasing element 44
Erasing element 45
Erasing element 46
Erasing element 47
Erasing element 48
Erasing element 49
Erasing element 50
Erasing element 51
Erasing element 52
Erasing element 53
Erasing element 54
Erasing element 55
Erasing element 56
Erasing element 57
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 2
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(c1, c2)

 EVALUATING WITH (c1 c2)

---START EVALUATE WITH METHOD---
Relationship Index: 3
r.tk1: c1
r.tk2: c2
2 alpha tokens found
tk1 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = c1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
4
5
6
7
8
9
10
End retrieving token
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
End retrieving token
Both tk1 and tk2 Exists tk1 = c1 tk2 = c2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = c1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
4
5
6
7
8
9
10
End retrieving token
in for loop
pair index is 11
end of RemovePairsFromRelAns
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
End retrieving token
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
RelIndex of clause with contents being removed: 2
PairIndex: 1
Erasing element 2
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 7
Erasing element 8
Erasing element 9
Erasing element 10

---START REMOVE PAIRS METHOD---
Inserting 1
RelIndex of clause with contents being removed: 0
PairIndex: 1
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Found in Linkages
Insert links for tk2 = c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 9
FIRST PARAM = s1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
RETURNING FINAL ANSWERS




Your answer: 1 
Correct answer: 1 
29 - With, constant
constant c1,c2,c3;
Select c1 with c1.value=c1.value
0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12345
5000
Evaluating query 29 - With, constant
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(c1, c1)

 EVALUATING WITH (c1 c1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c1
r.tk2: c1
2 alpha tokens found
tk1 does not exist in linkages
getting all constants
getting all constants
In intersect Pairs: both do not exist
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = c1 p.size = 11
FIRST PARAM = c1
it2->ans1 = 0
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
it2->ans1 = 12345
RETURNING FINAL ANSWERS
<exception/>
30 - With, constant
constant c1,c2,c3;
Select c2 with c1.value=c2.value
0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12345
5000
Evaluating query 30 - With, constant
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(c1, c2)

 EVALUATING WITH (c1 c2)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c1
r.tk2: c2
2 alpha tokens found
tk1 does not exist in linkages
getting all constants
getting all constants
In intersect Pairs: both do not exist
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = c2 p.size = 11
FIRST PARAM = c1
SECOND PARAM = c2
it2->ans2 = 0
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 7
it2->ans2 = 8
it2->ans2 = 9
it2->ans2 = 10
it2->ans2 = 12345
RETURNING FINAL ANSWERS




Your answer: 2 1 5 12345 10 9 8 7 6 
Correct answer: 0 1 2 4 5 6 7 8 9 10 12345 
Missing: 0 4 
Additional: 
31 - With, constant
constant c1,c2,c3;
Select c1 with c1.value=c2.value and c2.value=0
0
5000
Evaluating query 31 - With, constant
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(c2, 0)

 EVALUATING WITH (c2 0)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c2
r.tk2: 0
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 0
In intersect Pairs: both do not exist
Insert links for tk1 =c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(c1, c2)

 EVALUATING WITH (c1 c2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: c1
r.tk2: c2
2 alpha tokens found
tk1 does not exist in linkages
getting all constants
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
0
End retrieving token
IntersectPairs tk2 Exists tk2 = c2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
0
End retrieving token
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 0
RelIndex of clause with contents being removed: 0
PairIndex: 1
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = c1 p.size = 1
FIRST PARAM = c1
it2->ans1 = 0
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 0 
Missing: 0 
Additional: 
32 - With, constant
constant c1,c2,c3;
Select c1 with c1.value=c2.value and c2.value=0 and c3.value=c2.value
0
5000
Evaluating query 32 - With, constant
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
with relationship found
After Ordering Relations, r.size = 3
Initializing Variables
 
with(c3, c2)

 EVALUATING WITH (c3 c2)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c3
r.tk2: c2
2 alpha tokens found
tk1 does not exist in linkages
getting all constants
getting all constants
In intersect Pairs: both do not exist
Insert links for tk1 =c3
IN INSERT LINKS INSERTING TOKEN = c3
c3 Not Found in Linkages and relIndex = 0
Insert links for tk2 = c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(c1, c2)

 EVALUATING WITH (c1 c2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: c1
r.tk2: c2
2 alpha tokens found
tk1 does not exist in linkages
getting all constants
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
0
1
2
4
5
6
7
8
9
10
12345
End retrieving token
IntersectPairs tk2 Exists tk2 = c2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
0
1
2
4
5
6
7
8
9
10
12345
End retrieving token
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 0
Inserting 1
Inserting 2
Inserting 4
Inserting 5
Inserting 6
Inserting 7
Inserting 8
Inserting 9
Inserting 10
Inserting 12345
RelIndex of clause with contents being removed: 0
PairIndex: 2
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(c2, 0)

 EVALUATING WITH (c2 0)

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: c2
r.tk2: 0
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 0
IntersectPairs tk1 Exists tk1 = c2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
0
1
2
4
5
6
7
8
9
10
12345
End retrieving token
in for loop
pair index is 10
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 0
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 7
Erasing element 8
Erasing element 9
Erasing element 10
Erasing element 12345
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 7
Erasing element 8
Erasing element 9
Erasing element 10
Erasing element 12345
Insert links for tk1 =c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = c1 p.size = 1
FIRST PARAM = c1
it2->ans1 = 0
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 0 
Missing: 0 
Additional: 
33 - With, constant
constant c1,c2,c3;
Select c1 with c1.value=c2.value and c2.value=312931923
none
5000
Evaluating query 33 - With, constant
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(c2, 312931923)

 EVALUATING WITH (c2 312931923)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c2
r.tk2: 312931923
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 312931923
In intersect Pairs: both do not exist
Insert links for tk1 =c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(c1, c2)

 EVALUATING WITH (c1 c2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: c1
r.tk2: c2
2 alpha tokens found
tk1 does not exist in linkages
getting all constants
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
IntersectPairs tk2 Exists tk2 = c2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = c2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = c1 p.size = 0
FIRST PARAM = c1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
34 - With, constant
constant c1,c2,c3;
Select c1 with c1.value=c2.value and c3.value=312931923
none
5000
Evaluating query 34 - With, constant
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(c3, 312931923)

 EVALUATING WITH (c3 312931923)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: c3
r.tk2: 312931923
only 1 alpha token found
constant
null
First token NEITHER VAR NOR PROC
Index: 312931923
In intersect Pairs: both do not exist
Insert links for tk1 =c3
IN INSERT LINKS INSERTING TOKEN = c3
c3 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(c1, c2)

 EVALUATING WITH (c1 c2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: c1
r.tk2: c2
2 alpha tokens found
tk1 does not exist in linkages
getting all constants
getting all constants
In intersect Pairs: both do not exist
Insert links for tk1 =c1
IN INSERT LINKS INSERTING TOKEN = c1
c1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = c2
IN INSERT LINKS INSERTING TOKEN = c2
c2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = c1 p.size = 11
FIRST PARAM = c1
it2->ans1 = 0
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
it2->ans1 = 12345
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
35 - With, variable
variable v1,v2,v3;
Select v1 with v1.varName=v1.varName
i, j, x, z, y, a, b, c, d, e, f, varA, varB, varC, varD, g, varE, varF, varG, loop1, loop2, loop3, loop4, loop5, varLoop5, loop6, loop7, loop8, loop9, loop10, lastLoop, varLastLoop, varLoop10, varLoop9, varLoop8, varLoop7, varLoop6, loop4Inside, varLoop4, varLoop3, varLoop2, varLoop1
5000
Evaluating query 35 - With, variable
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(v1, v1)

 EVALUATING WITH (v1 v1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v1
r.tk2: v1
2 alpha tokens found
tk1 does not exist in linkages
getting all var indexes
getting all var indexes
In intersect Pairs: both do not exist
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v1 p.size = 42
FIRST PARAM = v1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
it2->ans1 = 11
it2->ans1 = 12
it2->ans1 = 13
it2->ans1 = 14
it2->ans1 = 15
it2->ans1 = 16
it2->ans1 = 17
it2->ans1 = 18
it2->ans1 = 19
it2->ans1 = 20
it2->ans1 = 21
it2->ans1 = 22
it2->ans1 = 23
it2->ans1 = 24
it2->ans1 = 25
it2->ans1 = 26
it2->ans1 = 27
it2->ans1 = 28
it2->ans1 = 29
it2->ans1 = 30
it2->ans1 = 31
it2->ans1 = 32
it2->ans1 = 33
it2->ans1 = 34
it2->ans1 = 35
it2->ans1 = 36
it2->ans1 = 37
it2->ans1 = 38
it2->ans1 = 39
it2->ans1 = 40
it2->ans1 = 41
it2->ans1 = 42
RETURNING FINAL ANSWERS
<exception/>
36 - With, variable
variable v1,v2,v3;
Select v1 with v1.varName=v2.varName
i, j, x, z, y, a, b, c, d, e, f, varA, varB, varC, varD, g, varE, varF, varG, loop1, loop2, loop3, loop4, loop5, varLoop5, loop6, loop7, loop8, loop9, loop10, lastLoop, varLastLoop, varLoop10, varLoop9, varLoop8, varLoop7, varLoop6, loop4Inside, varLoop4, varLoop3, varLoop2, varLoop1
5000
Evaluating query 36 - With, variable
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(v1, v2)

 EVALUATING WITH (v1 v2)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v1
r.tk2: v2
2 alpha tokens found
tk1 does not exist in linkages
getting all var indexes
getting all var indexes
In intersect Pairs: both do not exist
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v1 p.size = 42
FIRST PARAM = v1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
it2->ans1 = 11
it2->ans1 = 12
it2->ans1 = 13
it2->ans1 = 14
it2->ans1 = 15
it2->ans1 = 16
it2->ans1 = 17
it2->ans1 = 18
it2->ans1 = 19
it2->ans1 = 20
it2->ans1 = 21
it2->ans1 = 22
it2->ans1 = 23
it2->ans1 = 24
it2->ans1 = 25
it2->ans1 = 26
it2->ans1 = 27
it2->ans1 = 28
it2->ans1 = 29
it2->ans1 = 30
it2->ans1 = 31
it2->ans1 = 32
it2->ans1 = 33
it2->ans1 = 34
it2->ans1 = 35
it2->ans1 = 36
it2->ans1 = 37
it2->ans1 = 38
it2->ans1 = 39
it2->ans1 = 40
it2->ans1 = 41
it2->ans1 = 42
RETURNING FINAL ANSWERS




Your answer: i j x z y a b c d e f varA varB varC varD g varE varF varG loop1 loop2 loop3 loop4 loop5 varLoop5 loop6 loop7 loop8 loop9 loop10 lastLoop varLastLoop varLoop10 varLoop9 varLoop8 varLoop7 varLoop6 loop4Inside varLoop4 varLoop3 varLoop2 varLoop1 
Correct answer: i j x z y a b c d e f varA varB varC varD g varE varF varG loop1 loop2 loop3 loop4 loop5 varLoop5 loop6 loop7 loop8 loop9 loop10 lastLoop varLastLoop varLoop10 varLoop9 varLoop8 varLoop7 varLoop6 loop4Inside varLoop4 varLoop3 varLoop2 varLoop1 
37 - With, variable
variable v1,v2,v3;
Select v1 with v1.varName=v2.varName and v2.varName="varLoop1"
varLoop1
5000
Evaluating query 37 - With, variable
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(v2, "varLoop1")

 EVALUATING WITH (v2 "varLoop1")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v2
r.tk2: "varLoop1"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "varLoop1" index = 42
In intersect Pairs: both do not exist
Insert links for tk1 =v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, v2)

 EVALUATING WITH (v1 v2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: v1
r.tk2: v2
2 alpha tokens found
tk1 does not exist in linkages
getting all var indexes
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
42
End retrieving token
IntersectPairs tk2 Exists tk2 = v2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
42
End retrieving token
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 42
RelIndex of clause with contents being removed: 0
PairIndex: 1
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v1 p.size = 1
FIRST PARAM = v1
it2->ans1 = 42
RETURNING FINAL ANSWERS




Your answer: varLoop1 
Correct answer: varLoop1 
38 - With, variable
variable v1,v2,v3;
Select v1 with v1.varName=v2.varName and v2.varName="varLoop1" and v3.varName=v2.varName
varLoop1
5000
Evaluating query 38 - With, variable
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
with relationship found
After Ordering Relations, r.size = 3
Initializing Variables
 
with(v3, v2)

 EVALUATING WITH (v3 v2)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v3
r.tk2: v2
2 alpha tokens found
tk1 does not exist in linkages
getting all var indexes
getting all var indexes
In intersect Pairs: both do not exist
Insert links for tk1 =v3
IN INSERT LINKS INSERTING TOKEN = v3
v3 Not Found in Linkages and relIndex = 0
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, v2)

 EVALUATING WITH (v1 v2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: v1
r.tk2: v2
2 alpha tokens found
tk1 does not exist in linkages
getting all var indexes
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
End retrieving token
IntersectPairs tk2 Exists tk2 = v2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
End retrieving token
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
Inserting 2
Inserting 3
Inserting 4
Inserting 5
Inserting 6
Inserting 7
Inserting 8
Inserting 9
Inserting 10
Inserting 11
Inserting 12
Inserting 13
Inserting 14
Inserting 15
Inserting 16
Inserting 17
Inserting 18
Inserting 19
Inserting 20
Inserting 21
Inserting 22
Inserting 23
Inserting 24
Inserting 25
Inserting 26
Inserting 27
Inserting 28
Inserting 29
Inserting 30
Inserting 31
Inserting 32
Inserting 33
Inserting 34
Inserting 35
Inserting 36
Inserting 37
Inserting 38
Inserting 39
Inserting 40
Inserting 41
Inserting 42
RelIndex of clause with contents being removed: 0
PairIndex: 2
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v2, "varLoop1")

 EVALUATING WITH (v2 "varLoop1")

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: v2
r.tk2: "varLoop1"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "varLoop1" index = 42
IntersectPairs tk1 Exists tk1 = v2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
End retrieving token
in for loop
pair index is 142
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 42
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 7
Erasing element 8
Erasing element 9
Erasing element 10
Erasing element 11
Erasing element 12
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 17
Erasing element 18
Erasing element 19
Erasing element 20
Erasing element 21
Erasing element 22
Erasing element 23
Erasing element 24
Erasing element 25
Erasing element 26
Erasing element 27
Erasing element 28
Erasing element 29
Erasing element 30
Erasing element 31
Erasing element 32
Erasing element 33
Erasing element 34
Erasing element 35
Erasing element 36
Erasing element 37
Erasing element 38
Erasing element 39
Erasing element 40
Erasing element 41
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 7
Erasing element 8
Erasing element 9
Erasing element 10
Erasing element 11
Erasing element 12
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
Erasing element 17
Erasing element 18
Erasing element 19
Erasing element 20
Erasing element 21
Erasing element 22
Erasing element 23
Erasing element 24
Erasing element 25
Erasing element 26
Erasing element 27
Erasing element 28
Erasing element 29
Erasing element 30
Erasing element 31
Erasing element 32
Erasing element 33
Erasing element 34
Erasing element 35
Erasing element 36
Erasing element 37
Erasing element 38
Erasing element 39
Erasing element 40
Erasing element 41
Insert links for tk1 =v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v1 p.size = 1
FIRST PARAM = v1
it2->ans1 = 42
RETURNING FINAL ANSWERS




Your answer: varLoop1 
Correct answer: varLoop1 
39 - With, variable
variable v1,v2,v3;
Select v1 with v1.varName=v2.varName and v2.varName="asdas"
none
5000
Evaluating query 39 - With, variable
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(v2, "asdas")

 EVALUATING WITH (v2 "asdas")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v2
r.tk2: "asdas"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "asdas" index = -1
In intersect Pairs: both do not exist
Insert links for tk1 =v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, v2)

 EVALUATING WITH (v1 v2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: v1
r.tk2: v2
2 alpha tokens found
tk1 does not exist in linkages
getting all var indexes
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
IntersectPairs tk2 Exists tk2 = v2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = v1 p.size = 0
FIRST PARAM = v1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
40 - With, variable
variable v1,v2,v3;
Select v1 with v1.varName=v2.varName and v3.varName="gakada"
none
5000
Evaluating query 40 - With, variable
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(v3, "gakada")

 EVALUATING WITH (v3 "gakada")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v3
r.tk2: "gakada"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "gakada" index = -1
In intersect Pairs: both do not exist
Insert links for tk1 =v3
IN INSERT LINKS INSERTING TOKEN = v3
v3 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, v2)

 EVALUATING WITH (v1 v2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: v1
r.tk2: v2
2 alpha tokens found
tk1 does not exist in linkages
getting all var indexes
getting all var indexes
In intersect Pairs: both do not exist
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = v1 p.size = 42
FIRST PARAM = v1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
it2->ans1 = 11
it2->ans1 = 12
it2->ans1 = 13
it2->ans1 = 14
it2->ans1 = 15
it2->ans1 = 16
it2->ans1 = 17
it2->ans1 = 18
it2->ans1 = 19
it2->ans1 = 20
it2->ans1 = 21
it2->ans1 = 22
it2->ans1 = 23
it2->ans1 = 24
it2->ans1 = 25
it2->ans1 = 26
it2->ans1 = 27
it2->ans1 = 28
it2->ans1 = 29
it2->ans1 = 30
it2->ans1 = 31
it2->ans1 = 32
it2->ans1 = 33
it2->ans1 = 34
it2->ans1 = 35
it2->ans1 = 36
it2->ans1 = 37
it2->ans1 = 38
it2->ans1 = 39
it2->ans1 = 40
it2->ans1 = 41
it2->ans1 = 42
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
41 - With, procedure
procedure p1,p2,p3;
Select p1 with p1.procName=p1.procName
Second, InsaneWhile
5000
Evaluating query 41 - With, procedure
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(p1, p1)

 EVALUATING WITH (p1 p1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: p1
r.tk2: p1
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
getting all proc indexes
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p1 p.size = 2
FIRST PARAM = p1
it2->ans1 = 1
it2->ans1 = 2
RETURNING FINAL ANSWERS
<exception/>
42 - With, procedure
procedure p1,p2,p3;
Select p1 with p1.procName=p2.procName
Second, InsaneWhile
5000
Evaluating query 42 - With, procedure
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(p1, p2)

 EVALUATING WITH (p1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: p1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
getting all proc indexes
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p1 p.size = 2
FIRST PARAM = p1
it2->ans1 = 1
it2->ans1 = 2
RETURNING FINAL ANSWERS




Your answer: Second InsaneWhile 
Correct answer: Second InsaneWhile 
43 - With, procedure
procedure p1,p2,p3;
Select p1 with p1.procName=p2.procName and p2.procName="Second"
Second
5000
Evaluating query 43 - With, procedure
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(p2, "Second")

 EVALUATING WITH (p2 "Second")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: p2
r.tk2: "Second"
only 1 alpha token found
procedure
null
First token PROCEDURE
tk2 = "Second" index = 1
In intersect Pairs: both do not exist
Insert links for tk1 =p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(p1, p2)

 EVALUATING WITH (p1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: p1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = p2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
End retrieving token
IntersectPairs tk2 Exists tk2 = p2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = p2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
End retrieving token
in for loop
in else
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
RelIndex of clause with contents being removed: 0
PairIndex: 1
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p1 p.size = 1
FIRST PARAM = p1
it2->ans1 = 1
RETURNING FINAL ANSWERS




Your answer: Second 
Correct answer: Second 
44 - With, procedure
procedure p1,p2,p3;
Select p1 with p1.procName=p2.procName and p2.procName="InsaneWhile" and p3.procName=p1.procName
InsaneWhile
5000
Evaluating query 44 - With, procedure
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
with relationship found
After Ordering Relations, r.size = 3
Initializing Variables
 
with(p3, p1)

 EVALUATING WITH (p3 p1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: p3
r.tk2: p1
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
getting all proc indexes
In intersect Pairs: both do not exist
Insert links for tk1 =p3
IN INSERT LINKS INSERTING TOKEN = p3
p3 Not Found in Linkages and relIndex = 0
Insert links for tk2 = p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(p1, p2)

 EVALUATING WITH (p1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: p1
r.tk2: p2
2 alpha tokens found
tk1 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = p1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
End retrieving token
getting all proc indexes
IntersectPairs tk1 Exists tk1 = p1
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = p1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
End retrieving token
in for loop
pair index is 11
in for loop
pair index is 12
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
Inserting 2
RelIndex of clause with contents being removed: 0
PairIndex: 2
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Found in Linkages
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(p2, "InsaneWhile")

 EVALUATING WITH (p2 "InsaneWhile")

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: p2
r.tk2: "InsaneWhile"
only 1 alpha token found
procedure
null
First token PROCEDURE
tk2 = "InsaneWhile" index = 2
IntersectPairs tk1 Exists tk1 = p2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = p2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
End retrieving token
in for loop
pair index is 12
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 2
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 1
Insert links for tk1 =p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p1 p.size = 2
FIRST PARAM = p3
SECOND PARAM = p1
it2->ans2 = 1
it2->ans2 = 2
RETURNING FINAL ANSWERS




Your answer: InsaneWhile 
Correct answer: InsaneWhile 
45 - With, procedure
procedure p1,p2,p3;
Select p1 with p1.procName=p2.procName and p2.procName="NoProcedure"
none
5000
Evaluating query 45 - With, procedure
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(p2, "NoProcedure")

 EVALUATING WITH (p2 "NoProcedure")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: p2
r.tk2: "NoProcedure"
only 1 alpha token found
procedure
null
First token PROCEDURE
tk2 = "NoProcedure" index = -1
In intersect Pairs: both do not exist
Insert links for tk1 =p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(p1, p2)

 EVALUATING WITH (p1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: p1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = p2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
IntersectPairs tk2 Exists tk2 = p2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = p2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = p1 p.size = 0
FIRST PARAM = p1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
46 - With, procedure
procedure p1,p2,p3;
Select p1 with p1.procName=p2.procName and p3.procName="NoProcedure"
none
5000
Evaluating query 46 - With, procedure
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(p3, "NoProcedure")

 EVALUATING WITH (p3 "NoProcedure")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: p3
r.tk2: "NoProcedure"
only 1 alpha token found
procedure
null
First token PROCEDURE
tk2 = "NoProcedure" index = -1
In intersect Pairs: both do not exist
Insert links for tk1 =p3
IN INSERT LINKS INSERTING TOKEN = p3
p3 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(p1, p2)

 EVALUATING WITH (p1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: p1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
getting all proc indexes
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = p1 p.size = 2
FIRST PARAM = p1
it2->ans1 = 1
it2->ans1 = 2
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
47 - With, variable, procedure
variable v1,v2,v3; procedure p1,p2,p3;
Select p1 with p1.procName=v1.varName
none
5000
Evaluating query 47 - With, variable, procedure
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(p1, v1)

 EVALUATING WITH (p1 v1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: p1
r.tk2: v1
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
getting all var indexes
tk1 type != tk2 type and tk1 type =variable OR procedure
pushing back procName Second
pushing back procName InsaneWhile
pushing back varName i
pushing back varName j
pushing back varName x
pushing back varName z
pushing back varName y
pushing back varName a
pushing back varName b
pushing back varName c
pushing back varName d
pushing back varName e
pushing back varName f
pushing back varName varA
pushing back varName varB
pushing back varName varC
pushing back varName varD
pushing back varName g
pushing back varName varE
pushing back varName varF
pushing back varName varG
pushing back varName loop1
pushing back varName loop2
pushing back varName loop3
pushing back varName loop4
pushing back varName loop5
pushing back varName varLoop5
pushing back varName loop6
pushing back varName loop7
pushing back varName loop8
pushing back varName loop9
pushing back varName loop10
pushing back varName lastLoop
pushing back varName varLastLoop
pushing back varName varLoop10
pushing back varName varLoop9
pushing back varName varLoop8
pushing back varName varLoop7
pushing back varName varLoop6
pushing back varName loop4Inside
pushing back varName varLoop4
pushing back varName varLoop3
pushing back varName varLoop2
pushing back varName varLoop1
intersect is empty: 1
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = p1 p.size = 0
FIRST PARAM = p1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
48 - With, variable, procedure
variable v1,v2,v3; procedure p1,p2,p3;
Select v1 with p1.procName=v1.varName
none
5000
Evaluating query 48 - With, variable, procedure
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(p1, v1)

 EVALUATING WITH (p1 v1)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: p1
r.tk2: v1
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
getting all var indexes
tk1 type != tk2 type and tk1 type =variable OR procedure
pushing back procName Second
pushing back procName InsaneWhile
pushing back varName i
pushing back varName j
pushing back varName x
pushing back varName z
pushing back varName y
pushing back varName a
pushing back varName b
pushing back varName c
pushing back varName d
pushing back varName e
pushing back varName f
pushing back varName varA
pushing back varName varB
pushing back varName varC
pushing back varName varD
pushing back varName g
pushing back varName varE
pushing back varName varF
pushing back varName varG
pushing back varName loop1
pushing back varName loop2
pushing back varName loop3
pushing back varName loop4
pushing back varName loop5
pushing back varName varLoop5
pushing back varName loop6
pushing back varName loop7
pushing back varName loop8
pushing back varName loop9
pushing back varName loop10
pushing back varName lastLoop
pushing back varName varLastLoop
pushing back varName varLoop10
pushing back varName varLoop9
pushing back varName varLoop8
pushing back varName varLoop7
pushing back varName varLoop6
pushing back varName loop4Inside
pushing back varName varLoop4
pushing back varName varLoop3
pushing back varName varLoop2
pushing back varName varLoop1
intersect is empty: 1
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = v1 p.size = 0
FIRST PARAM = p1
SECOND PARAM = v1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
49 - With, variable, procedure
variable v1,v2,v3; procedure p1,p2,p3;
Select p1 with p1.procName=p2.procName and v1.varName=v2.varName
Second, InsaneWhile
5000
Evaluating query 49 - With, variable, procedure
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(v1, v2)

 EVALUATING WITH (v1 v2)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v1
r.tk2: v2
2 alpha tokens found
tk1 does not exist in linkages
getting all var indexes
getting all var indexes
In intersect Pairs: both do not exist
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(p1, p2)

 EVALUATING WITH (p1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: p1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
getting all proc indexes
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p1 p.size = 2
FIRST PARAM = p1
it2->ans1 = 1
it2->ans1 = 2
RETURNING FINAL ANSWERS




Your answer: Second InsaneWhile 
Correct answer: Second InsaneWhile 
50 - With, variable, procedure
variable v1,v2,v3; procedure p1,p2,p3;
Select v1 with p1.procName=p2.procName and v1.varName=v2.varName
i, j, x, z, y, a, b, c, d, e, f, varA, varB, varC, varD, g, varE, varF, varG, loop1, loop2, loop3, loop4, loop5, varLoop5, loop6, loop7, loop8, loop9, loop10, lastLoop, varLastLoop, varLoop10, varLoop9, varLoop8, varLoop7, varLoop6, loop4Inside, varLoop4, varLoop3, varLoop2, varLoop1
5000
Evaluating query 50 - With, variable, procedure
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
with(v1, v2)

 EVALUATING WITH (v1 v2)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v1
r.tk2: v2
2 alpha tokens found
tk1 does not exist in linkages
getting all var indexes
getting all var indexes
In intersect Pairs: both do not exist
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(p1, p2)

 EVALUATING WITH (p1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: p1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
getting all proc indexes
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v1 p.size = 42
FIRST PARAM = v1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 9
it2->ans1 = 10
it2->ans1 = 11
it2->ans1 = 12
it2->ans1 = 13
it2->ans1 = 14
it2->ans1 = 15
it2->ans1 = 16
it2->ans1 = 17
it2->ans1 = 18
it2->ans1 = 19
it2->ans1 = 20
it2->ans1 = 21
it2->ans1 = 22
it2->ans1 = 23
it2->ans1 = 24
it2->ans1 = 25
it2->ans1 = 26
it2->ans1 = 27
it2->ans1 = 28
it2->ans1 = 29
it2->ans1 = 30
it2->ans1 = 31
it2->ans1 = 32
it2->ans1 = 33
it2->ans1 = 34
it2->ans1 = 35
it2->ans1 = 36
it2->ans1 = 37
it2->ans1 = 38
it2->ans1 = 39
it2->ans1 = 40
it2->ans1 = 41
it2->ans1 = 42
RETURNING FINAL ANSWERS




Your answer: i j x z y a b c d e f varA varB varC varD g varE varF varG loop1 loop2 loop3 loop4 loop5 varLoop5 loop6 loop7 loop8 loop9 loop10 lastLoop varLastLoop varLoop10 varLoop9 varLoop8 varLoop7 varLoop6 loop4Inside varLoop4 varLoop3 varLoop2 varLoop1 
Correct answer: i j x z y a b c d e f varA varB varC varD g varE varF varG loop1 loop2 loop3 loop4 loop5 varLoop5 loop6 loop7 loop8 loop9 loop10 lastLoop varLastLoop varLoop10 varLoop9 varLoop8 varLoop7 varLoop6 loop4Inside varLoop4 varLoop3 varLoop2 varLoop1 
51 - With, variable, procedure
variable v1,v2,v3; procedure p1,p2,p3;
Select v1 with p1.procName=p2.procName and v1.varName=p2.procName and v1.varName=v2.varName and v2.varName ="varLoop3"
none
5000
Evaluating query 51 - With, variable, procedure
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
with relationship found
with relationship found
After Ordering Relations, r.size = 4
Initializing Variables
 
with(v2, "varLoop3")

 EVALUATING WITH (v2 "varLoop3")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v2
r.tk2: "varLoop3"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "varLoop3" index = 40
In intersect Pairs: both do not exist
Insert links for tk1 =v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(p1, p2)

 EVALUATING WITH (p1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: p1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
getting all proc indexes
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, p2)

 EVALUATING WITH (v1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: v1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all var indexes
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = p2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
End retrieving token
tk1 type != tk2 type and tk1 type =variable OR procedure
pushing back varName 1
pushing back varName 2
pushing back varName 3
pushing back varName 4
pushing back varName 5
pushing back varName 6
pushing back varName 7
pushing back varName 8
pushing back varName 9
pushing back varName 10
pushing back varName 11
pushing back varName 12
pushing back varName 13
pushing back varName 14
pushing back varName 15
pushing back varName 16
pushing back varName 17
pushing back varName 18
pushing back varName 19
pushing back varName 20
pushing back varName 21
pushing back varName 22
pushing back varName 23
pushing back varName 24
pushing back varName 25
pushing back varName 26
pushing back varName 27
pushing back varName 28
pushing back varName 29
pushing back varName 30
pushing back varName 31
pushing back varName 32
pushing back varName 33
pushing back varName 34
pushing back varName 35
pushing back varName 36
pushing back varName 37
pushing back varName 38
pushing back varName 39
pushing back varName 40
pushing back varName 41
pushing back varName 42
pushing back procName 1
pushing back procName 2
intersect is empty: 1
IntersectPairs tk2 Exists tk2 = p2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = p2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 1
Erasing element 2
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 2
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, v2)

 EVALUATING WITH (v1 v2)

---START EVALUATE WITH METHOD---
Relationship Index: 3
r.tk1: v1
r.tk2: v2
2 alpha tokens found
tk1 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = v1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
40
End retrieving token
Both tk1 and tk2 Exists tk1 = v1 tk2 = v2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
end of RemovePairsFromRelAns
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
40
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 2
PairIndex: 1

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 40
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Found in Linkages
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Found Relations to be False or Empty
Found Relations to be False or Empty
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = v1 p.size = 0
FIRST PARAM = v1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
52 - With, variable, procedure
variable v1,v2,v3; procedure p1,p2,p3;
Select p1 with p1.procName=p2.procName and v1.varName=p2.procName and v1.varName=v2.varName and v2.varName ="varLoop3"
none
5000
Evaluating query 52 - With, variable, procedure
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
with relationship found
with relationship found
After Ordering Relations, r.size = 4
Initializing Variables
 
with(v2, "varLoop3")

 EVALUATING WITH (v2 "varLoop3")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v2
r.tk2: "varLoop3"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "varLoop3" index = 40
In intersect Pairs: both do not exist
Insert links for tk1 =v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(p1, p2)

 EVALUATING WITH (p1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: p1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
getting all proc indexes
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, p2)

 EVALUATING WITH (v1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: v1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all var indexes
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = p2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
End retrieving token
tk1 type != tk2 type and tk1 type =variable OR procedure
pushing back varName 1
pushing back varName 2
pushing back varName 3
pushing back varName 4
pushing back varName 5
pushing back varName 6
pushing back varName 7
pushing back varName 8
pushing back varName 9
pushing back varName 10
pushing back varName 11
pushing back varName 12
pushing back varName 13
pushing back varName 14
pushing back varName 15
pushing back varName 16
pushing back varName 17
pushing back varName 18
pushing back varName 19
pushing back varName 20
pushing back varName 21
pushing back varName 22
pushing back varName 23
pushing back varName 24
pushing back varName 25
pushing back varName 26
pushing back varName 27
pushing back varName 28
pushing back varName 29
pushing back varName 30
pushing back varName 31
pushing back varName 32
pushing back varName 33
pushing back varName 34
pushing back varName 35
pushing back varName 36
pushing back varName 37
pushing back varName 38
pushing back varName 39
pushing back varName 40
pushing back varName 41
pushing back varName 42
pushing back procName 1
pushing back procName 2
intersect is empty: 1
IntersectPairs tk2 Exists tk2 = p2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = p2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 1
Erasing element 2
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 2
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, v2)

 EVALUATING WITH (v1 v2)

---START EVALUATE WITH METHOD---
Relationship Index: 3
r.tk1: v1
r.tk2: v2
2 alpha tokens found
tk1 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = v1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
40
End retrieving token
Both tk1 and tk2 Exists tk1 = v1 tk2 = v2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
end of RemovePairsFromRelAns
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
40
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 2
PairIndex: 1

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 40
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Found in Linkages
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Found Relations to be False or Empty
Found Relations to be False or Empty
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = p1 p.size = 0
FIRST PARAM = p1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
53 - With, variable, procedure
variable v1,v2,v3; procedure p1,p2,p3;
Select v1 with p1.procName=p2.procName and v1.varName=p2.procName and v1.varName=v2.varName and v2.varName ="Second"
none
5000
Evaluating query 53 - With, variable, procedure
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
with relationship found
with relationship found
After Ordering Relations, r.size = 4
Initializing Variables
 
with(v2, "Second")

 EVALUATING WITH (v2 "Second")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v2
r.tk2: "Second"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "Second" index = -1
In intersect Pairs: both do not exist
Insert links for tk1 =v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(p1, p2)

 EVALUATING WITH (p1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: p1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
getting all proc indexes
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, p2)

 EVALUATING WITH (v1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: v1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all var indexes
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = p2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
End retrieving token
tk1 type != tk2 type and tk1 type =variable OR procedure
pushing back varName 1
pushing back varName 2
pushing back varName 3
pushing back varName 4
pushing back varName 5
pushing back varName 6
pushing back varName 7
pushing back varName 8
pushing back varName 9
pushing back varName 10
pushing back varName 11
pushing back varName 12
pushing back varName 13
pushing back varName 14
pushing back varName 15
pushing back varName 16
pushing back varName 17
pushing back varName 18
pushing back varName 19
pushing back varName 20
pushing back varName 21
pushing back varName 22
pushing back varName 23
pushing back varName 24
pushing back varName 25
pushing back varName 26
pushing back varName 27
pushing back varName 28
pushing back varName 29
pushing back varName 30
pushing back varName 31
pushing back varName 32
pushing back varName 33
pushing back varName 34
pushing back varName 35
pushing back varName 36
pushing back varName 37
pushing back varName 38
pushing back varName 39
pushing back varName 40
pushing back varName 41
pushing back varName 42
pushing back procName 1
pushing back procName 2
intersect is empty: 1
IntersectPairs tk2 Exists tk2 = p2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = p2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 1
Erasing element 2
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 2
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, v2)

 EVALUATING WITH (v1 v2)

---START EVALUATE WITH METHOD---
Relationship Index: 3
r.tk1: v1
r.tk2: v2
2 alpha tokens found
tk1 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = v1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
Both tk1 and tk2 Exists tk1 = v1 tk2 = v2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
end of RemovePairsFromRelAns
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 2
PairIndex: 1

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Found in Linkages
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Found Relations to be False or Empty
Found Relations to be False or Empty
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = v1 p.size = 0
FIRST PARAM = v1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
54 - With, variable, procedure
variable v1,v2,v3; procedure p1,p2,p3;
Select v1 with p1.procName=p2.procName and v1.varName=p2.procName and v1.varName=v2.varName and v2.varName ="InsaneWhile"
none
5000
Evaluating query 54 - With, variable, procedure
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
with relationship found
with relationship found
After Ordering Relations, r.size = 4
Initializing Variables
 
with(v2, "InsaneWhile")

 EVALUATING WITH (v2 "InsaneWhile")

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: v2
r.tk2: "InsaneWhile"
only 1 alpha token found
variable
null
First token VARIABLE
tk2 = "InsaneWhile" index = -1
In intersect Pairs: both do not exist
Insert links for tk1 =v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Not Found in Linkages and relIndex = 0
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(p1, p2)

 EVALUATING WITH (p1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: p1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all proc indexes
getting all proc indexes
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, p2)

 EVALUATING WITH (v1 p2)

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: v1
r.tk2: p2
2 alpha tokens found
tk1 does not exist in linkages
getting all var indexes
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = p2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
End retrieving token
tk1 type != tk2 type and tk1 type =variable OR procedure
pushing back varName 1
pushing back varName 2
pushing back varName 3
pushing back varName 4
pushing back varName 5
pushing back varName 6
pushing back varName 7
pushing back varName 8
pushing back varName 9
pushing back varName 10
pushing back varName 11
pushing back varName 12
pushing back varName 13
pushing back varName 14
pushing back varName 15
pushing back varName 16
pushing back varName 17
pushing back varName 18
pushing back varName 19
pushing back varName 20
pushing back varName 21
pushing back varName 22
pushing back varName 23
pushing back varName 24
pushing back varName 25
pushing back varName 26
pushing back varName 27
pushing back varName 28
pushing back varName 29
pushing back varName 30
pushing back varName 31
pushing back varName 32
pushing back varName 33
pushing back varName 34
pushing back varName 35
pushing back varName 36
pushing back varName 37
pushing back varName 38
pushing back varName 39
pushing back varName 40
pushing back varName 41
pushing back varName 42
pushing back procName 1
pushing back procName 2
intersect is empty: 1
IntersectPairs tk2 Exists tk2 = p2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = p2
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 1
PairIndex: 2
Erasing element 1
Erasing element 2
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Not Found in Linkages and relIndex = 2
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
 
with(v1, v2)

 EVALUATING WITH (v1 v2)

---START EVALUATE WITH METHOD---
Relationship Index: 3
r.tk1: v1
r.tk2: v2
2 alpha tokens found
tk1 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = v1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
tk2 exist in linkages
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
Both tk1 and tk2 Exists tk1 = v1 tk2 = v2
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v1
Retrieving Token Evaluated Answers with first relationship index = 2
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
end of RemovePairsFromRelAns
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = v2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
End retrieving token
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 2
PairIndex: 1

---START REMOVE PAIRS METHOD---
RelIndex of clause with contents being removed: 0
PairIndex: 1
Insert links for tk1 =v1
IN INSERT LINKS INSERTING TOKEN = v1
v1 Found in Linkages
Insert links for tk2 = v2
IN INSERT LINKS INSERTING TOKEN = v2
v2 Found in Linkages
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Found Relations to be False or Empty
Found Relations to be False or Empty
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = v1 p.size = 0
FIRST PARAM = v1
RETURNING FINAL ANSWERS




Your answer: 
Correct answer: 
55 - With, boolean

Select BOOLEAN with 1 = 2
false
5000
Evaluating query 55 - With, boolean
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 1
Initializing Variables
 
with(1, 2)

 EVALUATING WITH (1 2)

---START EVALUATE WITH METHOD---
Relationship Index: 0
r.tk1: 1
r.tk2: 2
In intersect Pairs: both do not exist
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
RETURNING FINAL ANSWERS




Your answer: false 
Correct answer: false 
End of evaluating Query File.
AutoTester Completed !
