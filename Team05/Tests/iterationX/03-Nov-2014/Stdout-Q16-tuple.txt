Parameters : S16-tuple.txt Q16-tuple.txt R16-tuple.xml
Beginning to parse Simple Program.
Begin CodeParser
End CodeParser
Begin DesignExtractor
DE: Extracted Relationships
Building CFG
End DesignExtractor
End of parsing Simple Program.
iterationX
Beginning to evaluate Query File.
New Category :  Tuple
1 - NoLinks :: 
assign a1, a2; while w;
Select <a1, a2, w> such that Affects*(6,a1) and Uses(a2, "b")
5 9 2,10 9 2
5000
Evaluating query 1 - NoLinks :: 
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
relationships with only one alpha token found
After Ordering Relations, r.size = 2
Initializing Variables
 
affects*(6, a1)

 EVALUATING AFFECTSSTAR
Case 3: Right is Synonym
IN INSERT LINKS INSERTING TOKEN = a1
a1 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
uses(a2, "b")

 EVALUATING USES (a2 "b")
In intersect Pairs: both do not exist
Insert links for tk1 =a2
IN INSERT LINKS INSERTING TOKEN = a2
a2 Not Found in Linkages and relIndex = 1
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a1 p.size = 8
FIRST PARAM = 6
SECOND PARAM = a1
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 8
it2->ans2 = 9
it2->ans2 = 10
Iterating Selected Syn
token in selectedSyn = a2 p.size = 1
FIRST PARAM = a2
it2->ans1 = 9
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 11
Case 3
Case 3.2
Tuple Table Size: 8
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 5
Case 2
Case 2.2
Tuple Table Size: 8
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the following syn: a1
Syn has already been processed.
Checking for the following syn: a2
Syn has already been processed.
Checking for the following syn: w
w has not been processed
End handling unprocessed selected synonyms
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 1 9 2 3 9 2 4 9 2 5 9 2 6 9 2 8 9 2 9 9 2 10 9 2 
Correct answer: 5 9 2 10 9 2 
Missing: 
Additional: 1 9 2 3 9 2 4 9 2 6 9 2 8 9 2 9 9 2 
2 - SomeLinks ::
stmt s1, s2; assign a;
Select <s1, s2, a> such that Parent(s1, s2) pattern a("a", _)
2 3 8,2 4 8,2 5 8,2 6 8, 2 3 9, 2 4 9, 2 5 9, 2 6 9, 7 8 8, 7 9 8, 7 8 9, 7 9 9
5000
Evaluating query 2 - SomeLinks ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s1, s2)

 EVALUATING PARENT (s1 s2)
answer = 1
answer = 2
it2it23
it2it24
it2it25
it2it26
answer = 3
answer = 4
answer = 5
answer = 6
answer = 7
it7it28
it7it29
answer = 8
answer = 9
answer = 10
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
after intersect pairs
Inserting tokens into relParameters
 
pattern("a", _)

 EVALUATING PATTERN
IN INSERT LINKS INSERTING TOKEN = a
a Not Found in Linkages and relIndex = 1
token 1 = "a"token 2 = _
PRINTING PATTERNANS
ans1 = 9 ans2 = 9
ans1 = 8 ans2 = 8
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 6
FIRST PARAM = s1
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 7
it2->ans1 = 7
Iterating Selected Syn
token in selectedSyn = s2 p.size = 6
FIRST PARAM = s1
SECOND PARAM = s2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 8
it2->ans2 = 9
Iterating Selected Syn
token in selectedSyn = a p.size = 2
FIRST PARAM = a
it2->ans1 = 9
it2->ans1 = 8
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 2
Case 1
Case 1.1
Tuple Table Size: 6
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 13
Case 2
Case 2.2
Tuple Table Size: 12
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the following syn: s1
Syn has already been processed.
Checking for the following syn: s2
Syn has already been processed.
Checking for the following syn: a
Syn has already been processed.
End handling unprocessed selected synonyms
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 2 3 9 2 3 8 2 4 9 2 4 8 2 5 9 2 5 8 2 6 9 2 6 8 7 8 9 7 8 8 7 9 9 7 9 8 
Correct answer: 2 3 8 2 4 8 2 5 8 2 6 8 2 3 9 2 4 9 2 5 9 2 6 9 7 8 8 7 9 8 7 8 9 7 9 9 
3 - SomeLinks :: linked component is split
stmt s1, s2; assign a;
Select <s1, a, s2> such that Parent(s1, s2) pattern a("a", _)
2 8 3,2 8 4,2 8 5,2 8 6, 2 9 3, 2 9 4, 2 9 5, 2 9 6, 7 8 8, 7 9 8, 7 8 9, 7 9 9
5000
Evaluating query 3 - SomeLinks :: linked component is split
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
pattern found
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s1, s2)

 EVALUATING PARENT (s1 s2)
answer = 1
answer = 2
it2it23
it2it24
it2it25
it2it26
answer = 3
answer = 4
answer = 5
answer = 6
answer = 7
it7it28
it7it29
answer = 8
answer = 9
answer = 10
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
after intersect pairs
Inserting tokens into relParameters
 
pattern("a", _)

 EVALUATING PATTERN
IN INSERT LINKS INSERTING TOKEN = a
a Not Found in Linkages and relIndex = 1
token 1 = "a"token 2 = _
PRINTING PATTERNANS
ans1 = 9 ans2 = 9
ans1 = 8 ans2 = 8
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 6
FIRST PARAM = s1
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 7
it2->ans1 = 7
Iterating Selected Syn
token in selectedSyn = a p.size = 2
FIRST PARAM = a
it2->ans1 = 9
it2->ans1 = 8
Iterating Selected Syn
token in selectedSyn = s2 p.size = 6
FIRST PARAM = s1
SECOND PARAM = s2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 8
it2->ans2 = 9
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 2
Case 1
Case 1.1
Tuple Table Size: 6
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 13
Case 2
Case 2.2
Tuple Table Size: 12
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the following syn: s1
Syn has already been processed.
Checking for the following syn: a
Syn has already been processed.
Checking for the following syn: s2
Syn has already been processed.
End handling unprocessed selected synonyms
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 2 9 3 2 8 3 2 9 4 2 8 4 2 9 5 2 8 5 2 9 6 2 8 6 7 9 8 7 8 8 7 9 9 7 8 9 
Correct answer: 2 8 3 2 8 4 2 8 5 2 8 6 2 9 3 2 9 4 2 9 5 2 9 6 7 8 8 7 9 8 7 8 9 7 9 9 
4 - AllLinks ::
stmt s1, s2, s3;
Select <s1, s2, s3> such that Parent(s1, s2) and Follows(s2, s3)
2 3 4, 2 4 5, 2 5 6
5000
Evaluating query 4 - AllLinks ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s1, s2)

 EVALUATING PARENT (s1 s2)
answer = 1
answer = 2
it2it23
it2it24
it2it25
it2it26
answer = 3
answer = 4
answer = 5
answer = 6
answer = 7
it7it28
it7it29
answer = 8
answer = 9
answer = 10
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
after intersect pairs
Inserting tokens into relParameters
 
follows(s2, s3)

 EVALUATING FOLLOWS (s2 s3)
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
3
4
5
6
8
9
End retrieving token
in for loop
follows: null 4
Pushing back 3
in for loop
follows: null 5
Pushing back 4
in for loop
follows: null 6
Pushing back 5
in for loop
follows: null -1
in for loop
follows: null -1
in for loop
follows: null -1

---START REMOVE PAIRS METHOD---
Inserting 3
Inserting 4
Inserting 5
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 6
Erasing element 8
Erasing element 9
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
IN INSERT LINKS INSERTING TOKEN = s3
s3 Not Found in Linkages and relIndex = 1
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 3
FIRST PARAM = s1
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
Iterating Selected Syn
token in selectedSyn = s2 p.size = 3
FIRST PARAM = s1
SECOND PARAM = s2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
Iterating Selected Syn
token in selectedSyn = s3 p.size = 3
FIRST PARAM = s2
SECOND PARAM = s3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 2
Case 1
Case 1.1
Tuple Table Size: 3
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 0
Case 1
Case 1.3
Tuple Table Size: 3
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the following syn: s1
Syn has already been processed.
Checking for the following syn: s2
Syn has already been processed.
Checking for the following syn: s3
Syn has already been processed.
End handling unprocessed selected synonyms
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 2 3 3 2 4 4 2 5 5 
Correct answer: 2 3 4 2 4 5 2 5 6 
Missing: 2 3 4 2 4 5 2 5 6 
Additional: 2 3 3 2 4 4 2 5 5 
5 - KnownValue ::
stmt s1, s2; variable v;
Select <s1, s2, v> such that Parent(s1, s2) with v.varName = "w"
2 3 w,2 4 w,2 5 w,2 6 w,7 8 w,7 9 w
5000
Evaluating query 5 - KnownValue ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s1, s2)

 EVALUATING PARENT (s1 s2)
answer = 1
answer = 2
it2it23
it2it24
it2it25
it2it26
answer = 3
answer = 4
answer = 5
answer = 6
answer = 7
it7it28
it7it29
answer = 8
answer = 9
answer = 10
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
after intersect pairs
Inserting tokens into relParameters
 
with(v, "w")

 EVALUATING WITH (v "w")

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: v
r.tk2: "w"
only 1 alpha token found
First token VARIABLE
tk2 = "w" index = 6
In intersect Pairs: both do not exist
Insert links for tk1 =v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 6
FIRST PARAM = s1
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 7
it2->ans1 = 7
Iterating Selected Syn
token in selectedSyn = s2 p.size = 6
FIRST PARAM = s1
SECOND PARAM = s2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 8
it2->ans2 = 9
Iterating Selected Syn
token in selectedSyn = v p.size = 1
FIRST PARAM = v
it2->ans1 = 6
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 2
Case 1
Case 1.1
Tuple Table Size: 6
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 12
Case 2
Case 2.2
Tuple Table Size: 6
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the following syn: s1
Syn has already been processed.
Checking for the following syn: s2
Syn has already been processed.
Checking for the following syn: v
Syn has already been processed.
End handling unprocessed selected synonyms
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 2 3 w 2 4 w 2 5 w 2 6 w 7 8 w 7 9 w 
Correct answer: 2 3 w 2 4 w 2 5 w 2 6 w 7 8 w 7 9 w 
6 - KnownValue ::
stmt s1, s2; assign a;
Select <s1, s2, a> such that Parent(s1, s2) with a.stmt# = 8
2 3 8,2 4 8,2 5 8,2 6 8,7 8 8,7 9 8
5000
Evaluating query 6 - KnownValue ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s1, s2)

 EVALUATING PARENT (s1 s2)
answer = 1
answer = 2
it2it23
it2it24
it2it25
it2it26
answer = 3
answer = 4
answer = 5
answer = 6
answer = 7
it7it28
it7it29
answer = 8
answer = 9
answer = 10
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
after intersect pairs
Inserting tokens into relParameters
 
with(a, 8)

 EVALUATING WITH (a 8)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: a
r.tk2: 8
only 1 alpha token found
First token NEITHER VAR NOR PROC
Index: 8
In intersect Pairs: both do not exist
Insert links for tk1 =a
IN INSERT LINKS INSERTING TOKEN = a
a Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 6
FIRST PARAM = s1
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 7
it2->ans1 = 7
Iterating Selected Syn
token in selectedSyn = s2 p.size = 6
FIRST PARAM = s1
SECOND PARAM = s2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 8
it2->ans2 = 9
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 8
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 2
Case 1
Case 1.1
Tuple Table Size: 6
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 12
Case 2
Case 2.2
Tuple Table Size: 6
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the following syn: s1
Syn has already been processed.
Checking for the following syn: s2
Syn has already been processed.
Checking for the following syn: a
Syn has already been processed.
End handling unprocessed selected synonyms
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 2 3 8 2 4 8 2 5 8 2 6 8 7 8 8 7 9 8 
Correct answer: 2 3 8 2 4 8 2 5 8 2 6 8 7 8 8 7 9 8 
7 - KnownValue :: with the known value inserted in between
stmt s1, s2; assign a;
Select <s1, a, s2> such that Parent(s1, s2) with a.stmt# = 8
2 8 3,2 8 4,2 8 5,2 8 6,7 8 8,7 8 9
5000
Evaluating query 7 - KnownValue :: with the known value inserted in between
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
with relationship found
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s1, s2)

 EVALUATING PARENT (s1 s2)
answer = 1
answer = 2
it2it23
it2it24
it2it25
it2it26
answer = 3
answer = 4
answer = 5
answer = 6
answer = 7
it7it28
it7it29
answer = 8
answer = 9
answer = 10
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
after intersect pairs
Inserting tokens into relParameters
 
with(a, 8)

 EVALUATING WITH (a 8)

---START EVALUATE WITH METHOD---
Relationship Index: 1
r.tk1: a
r.tk2: 8
only 1 alpha token found
First token NEITHER VAR NOR PROC
Index: 8
In intersect Pairs: both do not exist
Insert links for tk1 =a
IN INSERT LINKS INSERTING TOKEN = a
a Not Found in Linkages and relIndex = 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 6
FIRST PARAM = s1
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 7
it2->ans1 = 7
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 8
Iterating Selected Syn
token in selectedSyn = s2 p.size = 6
FIRST PARAM = s1
SECOND PARAM = s2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 8
it2->ans2 = 9
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 2
Case 1
Case 1.1
Tuple Table Size: 6
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 12
Case 2
Case 2.2
Tuple Table Size: 6
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the following syn: s1
Syn has already been processed.
Checking for the following syn: a
Syn has already been processed.
Checking for the following syn: s2
Syn has already been processed.
End handling unprocessed selected synonyms
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 2 8 3 2 8 4 2 8 5 2 8 6 7 8 8 7 8 9 
Correct answer: 2 8 3 2 8 4 2 8 5 2 8 6 7 8 8 7 8 9 
8 - Mix ::
assign a1, a2, a3, x, y; stmt w;
Select <a1,x,y,a2,a3,w> such that Follows(a1,a2) and Follows(a1,a3) and Follows(x,y) and Parent(w,_)
3 3 4 4 4 2, 3 4 5 4 4 2, 3 5 6 4 4 2, 3 3 4 4 4 7, 3 4 5 4 4 7, 3 5 6 4 4 7, 4 3 4 5 5 2, 4 4 5 5 5 2, 4 5 6 5 5 2, 4 3 4 5 5 7, 4 4 5 5 5 7, 4 5 6 5 5 7, 5 3 4 6 6 2, 5 4 5 6 6 2, 5 5 6 6 6 2, 5 3 4 6 6 7, 5 4 5 6 6 7, 5 5 6 6 6 7
5000
Evaluating query 8 - Mix ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 4
Initializing Variables
 
parent(w, _)

 EVALUATING PARENT (w _)
answer = 1
answer = 2
answer = 3
answer = 4
answer = 5
answer = 6
answer = 7
answer = 8
answer = 9
answer = 10
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =w
IN INSERT LINKS INSERTING TOKEN = w
w Not Found in Linkages and relIndex = 0
after intersect pairs
Inserting tokens into relParameters
 
follows(a1, a3)

 EVALUATING FOLLOWS (a1 a3)
Both tokens are alpha and do not exist in linkages
trying is follows0
first.at(i) = 3second.at(i) = 4
first.at(i) = 4second.at(i) = 5
first.at(i) = 5second.at(i) = 6
IN INSERT LINKS INSERTING TOKEN = a1
a1 Not Found in Linkages and relIndex = 1
IN INSERT LINKS INSERTING TOKEN = a3
a3 Not Found in Linkages and relIndex = 1
Inserting tokens into relParameters
 
follows(x, y)

 EVALUATING FOLLOWS (x y)
Both tokens are alpha and do not exist in linkages
trying is follows0
first.at(i) = 3second.at(i) = 4
first.at(i) = 4second.at(i) = 5
first.at(i) = 5second.at(i) = 6
IN INSERT LINKS INSERTING TOKEN = x
x Not Found in Linkages and relIndex = 2
IN INSERT LINKS INSERTING TOKEN = y
y Not Found in Linkages and relIndex = 2
Inserting tokens into relParameters
 
follows(a1, a2)

 EVALUATING FOLLOWS (a1 a2)
In retrieveTokenEvaluatedAnswers Finding tk = a1
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
3
4
5
End retrieving token
in for loop
follows: assign 4
Pushing back 3
in for loop
follows: assign 5
Pushing back 4
in for loop
follows: assign 6
Pushing back 5

---START REMOVE PAIRS METHOD---
Inserting 3
Inserting 4
Inserting 5
RelIndex of clause with contents being removed: 1
PairIndex: 1
IN INSERT LINKS INSERTING TOKEN = a1
a1 Found in Linkages
IN INSERT LINKS INSERTING TOKEN = a2
a2 Not Found in Linkages and relIndex = 3
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a1 p.size = 3
FIRST PARAM = a1
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
Iterating Selected Syn
token in selectedSyn = x p.size = 3
FIRST PARAM = x
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
Iterating Selected Syn
token in selectedSyn = y p.size = 3
FIRST PARAM = x
SECOND PARAM = y
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
Iterating Selected Syn
token in selectedSyn = a2 p.size = 3
FIRST PARAM = a1
SECOND PARAM = a2
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
Iterating Selected Syn
token in selectedSyn = a3 p.size = 3
FIRST PARAM = a1
SECOND PARAM = a3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
Iterating Selected Syn
token in selectedSyn = w p.size = 0
FIRST PARAM = w
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 2
Case 2
empty clause detected, returning empty table
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the following syn: a1
a1 has not been processed
Checking for the following syn: x
x has not been processed
Checking for the following syn: y
y has not been processed
Checking for the following syn: a2
a2 has not been processed
Checking for the following syn: a3
a3 has not been processed
Checking for the following syn: w
Syn has already been processed.
End handling unprocessed selected synonyms




Your answer: 
Correct answer: 3 3 4 4 4 2 3 4 5 4 4 2 3 5 6 4 4 2 3 3 4 4 4 7 3 4 5 4 4 7 3 5 6 4 4 7 4 3 4 5 5 2 4 4 5 5 5 2 4 5 6 5 5 2 4 3 4 5 5 7 4 4 5 5 5 7 4 5 6 5 5 7 5 3 4 6 6 2 5 4 5 6 6 2 5 5 6 6 6 2 5 3 4 6 6 7 5 4 5 6 6 7 5 5 6 6 6 7 
Missing: 3 3 4 4 4 2 3 3 4 4 4 7 3 4 5 4 4 2 3 4 5 4 4 7 3 5 6 4 4 2 3 5 6 4 4 7 4 3 4 5 5 2 4 3 4 5 5 7 4 4 5 5 5 2 4 4 5 5 5 7 4 5 6 5 5 2 4 5 6 5 5 7 5 3 4 6 6 2 5 3 4 6 6 7 5 4 5 6 6 2 5 4 5 6 6 7 5 5 6 6 6 2 5 5 6 6 6 7 
Additional: 
9 - Duplicates ::
assign a1, a2, a3, x, y; stmt w;
Select <a1,a1,x,a1> such that Follows(a1,a2) and Follows(a1,a3) and Follows(x,y) and Parent(w,_)
3 3 3 3, 3 3 4 3, 3 3 5 3, 4 4 3 4, 4 4 4 4, 4 4 5 4, 5 5 3 5, 5 5 4 5, 5 5 5 5
5000
Evaluating query 9 - Duplicates ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
After Ordering Relations, r.size = 4
Initializing Variables
 
parent(w, _)

 EVALUATING PARENT (w _)
answer = 1
answer = 2
answer = 3
answer = 4
answer = 5
answer = 6
answer = 7
answer = 8
answer = 9
answer = 10
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =w
IN INSERT LINKS INSERTING TOKEN = w
w Not Found in Linkages and relIndex = 0
after intersect pairs
Inserting tokens into relParameters
 
follows(a1, a3)

 EVALUATING FOLLOWS (a1 a3)
Both tokens are alpha and do not exist in linkages
trying is follows0
first.at(i) = 3second.at(i) = 4
first.at(i) = 4second.at(i) = 5
first.at(i) = 5second.at(i) = 6
IN INSERT LINKS INSERTING TOKEN = a1
a1 Not Found in Linkages and relIndex = 1
IN INSERT LINKS INSERTING TOKEN = a3
a3 Not Found in Linkages and relIndex = 1
Inserting tokens into relParameters
 
follows(x, y)

 EVALUATING FOLLOWS (x y)
Both tokens are alpha and do not exist in linkages
trying is follows0
first.at(i) = 3second.at(i) = 4
first.at(i) = 4second.at(i) = 5
first.at(i) = 5second.at(i) = 6
IN INSERT LINKS INSERTING TOKEN = x
x Not Found in Linkages and relIndex = 2
IN INSERT LINKS INSERTING TOKEN = y
y Not Found in Linkages and relIndex = 2
Inserting tokens into relParameters
 
follows(a1, a2)

 EVALUATING FOLLOWS (a1 a2)
In retrieveTokenEvaluatedAnswers Finding tk = a1
Retrieving Token Evaluated Answers with first relationship index = 1
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
3
4
5
End retrieving token
in for loop
follows: assign 4
Pushing back 3
in for loop
follows: assign 5
Pushing back 4
in for loop
follows: assign 6
Pushing back 5

---START REMOVE PAIRS METHOD---
Inserting 3
Inserting 4
Inserting 5
RelIndex of clause with contents being removed: 1
PairIndex: 1
IN INSERT LINKS INSERTING TOKEN = a1
a1 Found in Linkages
IN INSERT LINKS INSERTING TOKEN = a2
a2 Not Found in Linkages and relIndex = 3
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = a1 p.size = 3
FIRST PARAM = a1
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
Iterating Selected Syn
token in selectedSyn = a1 p.size = 3
FIRST PARAM = a1
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
Iterating Selected Syn
token in selectedSyn = x p.size = 3
FIRST PARAM = x
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
Iterating Selected Syn
token in selectedSyn = a1 p.size = 3
FIRST PARAM = a1
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 2
Case 2
empty clause detected, returning empty table
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the following syn: a1
a1 has not been processed
Checking for the following syn: a1
Syn has already been processed.
Checking for the following syn: x
x has not been processed
Checking for the following syn: a1
Syn has already been processed.
End handling unprocessed selected synonyms




Your answer: 
Correct answer: 3 3 3 3 3 3 4 3 3 3 5 3 4 4 3 4 4 4 4 4 4 4 5 4 5 5 3 5 5 5 4 5 5 5 5 5 
Missing: 3 3 3 3 3 3 4 3 3 3 5 3 4 4 3 4 4 4 4 4 4 4 5 4 5 5 3 5 5 5 4 5 5 5 5 5 
Additional: 
9 - Duplicates ::
assign a;
Select <a,a>
1 1,3 3,4 4,5 5,6 6,8 8,9 9,10 10
5000
Evaluating query 9 - Duplicates ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 0
Initializing Variables
Relations found empty
Iterating Selected Syn
Iterating Selected Syn
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the following syn: a
a has not been processed
Checking for the following syn: a
Syn has already been processed.
End handling unprocessed selected synonyms
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 1 1 3 3 4 4 5 5 6 6 8 8 9 9 10 10 
Correct answer: 1 1 3 3 4 4 5 5 6 6 8 8 9 9 10 10 
End of evaluating Query File.
AutoTester Completed !
