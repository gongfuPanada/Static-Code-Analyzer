21
cat: All Queries
1 - FollowsStar :: 
stmt s, s1;
Select s such that Follows* (s, s1) and Follows* (s1, s)
none
5000
2 - ParentStar :: 
stmt s, s1, s2;
Select s such that Parent* (s, s1) and Parent* (s1, s)
none
5000
3 - Modifies, Uses :: 
assign a;
Select a such that Modifies (a, "a") and Uses (a, "a")
7
5000
4 - Modifies, Uses, ParentStar :: 
stmt s, s1; if ifstat;
Select s1 such that Uses (s, "i") and Modifies (s, "h") and Parent*(s1, s) with s.stmt# = 40
36,38
5000
5 - Next :: 
prog_line n, n1;
Select n such that Next (n, n1) and Next (n1, n)
27,28
5000
6 - Follows :: 
stmt s, s1, s2, s3, s4;
Select s such that Follows (s, s1) and Follows (s1, s2) and Follows (s2, s3) and Follows (s3, s4)  
1,2
5000
7 - Follows, Modifies :: 
stmt s, s1, s2;
Select s such that Follows (s, s1) and Follows (s1, s2) and Modifies (s, "j")
39,43
5000
8 - Affects, Modifies, FollowsStar :: 
assign a, a1; stmt s; 
Select a such that Affects (a, a1) and Modifies (a, "i") and Follows*(39, a)
41
5000
9 - Next, Uses, Modifies, Parent, Follows :: 
assign a, a1; stmt s, s1, s2; 
Select a such that Next (a, a1) and Uses (a, _) and Modifies(a, "c") such that Parent (s, 19) and Follows (s1, s) and Modifies (s1, _)
3
5000
10 - Calls, CallsStar, Uses, Modifies, Parent, ParentsStar, Follows, FollowsStar, Next :: 
assign a, a1; stmt s, s1, s2, s3, s4, s5; procedure p, p1; 
Select a such that Next (a, a1) and Uses (a, _) and Modifies(a, "c") such that Parent (s, 19) and Follows* (s1, s) and Modifies (s1, _) and Calls(p, "Delta") and Calls*("Bravo",p1) and Parent*(s3, s4) and Follows (s4, _)
3
5000
11 - With :: 
assign a; stmt s; if ifstat; while w;
Select <a,s> with a.stmt# = 1 with s.stmt# = 2
1 2
5000
12 - Next, Uses, Modifies, Parent, FollowsStar :: 
assign a, a1; stmt s, s1, s2; 
Select <a, s1> such that Next (a, a1) and Uses (a, _) and Modifies(a, "c") such that Parent (s, 19) and Follows* (s1, s) and Modifies (s1, _)
3 16, 3 17
5000
13 - With :: 
assign a; stmt s; if ifstat; while w; procedure p; variable v;
Select <a,s,ifstat,w, p, v> with a.stmt# = 1 with s.stmt# = 2 with ifstat.stmt# = 6 with w.stmt# = 8 with p.procName = "Alpha" with v.varName = "a"
1 2 6 8 Alpha a
5000
14 - Parent, Uses ::
while w; if ifstat; variable v;
Select w such that Parent(w, ifstat) and Uses(ifstat, v) with v.varName = "e"
23
5000
15 - Next ::
prog_line p, p1;
Select BOOLEAN such that Next(20,18) and Next(23,20) and Next(27,23) and Next(31,23)
true
5000
16 - Affects ::
assign a, a1, a2, a3, a4;
Select a such that Affects(a,a1) and Affects(a,a2) and Affects(a1,a2) and Affects(a2,a3) and Affects(a1,a3) and Affects(a,a3) and Affects(a3,a4)
26,28
5000
17 - Pattern ::
assign a; procedure p; while w; variable v;
Select a such that Uses(p, v) and Uses(w, v) and Modifies(a, v) and Parent(w, a) with v.varName = "h"
40
5000
18 - Next, NextStar, Affects :: 
assign a, a1, a2, a3, a4; prog_line n, n1, n2, n3;
Select n such that Next*(n, a) and Affects(a, a1) and Next*(a1,n2) and Affects(a2,a3) and Affects(a3,a4) and Next*(a2,n) and Next*(n,n3)
2,3,4,5,6,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45
5000
19 - NextStar ::
prog_line n, n1, n2; assign a, a1, a2;
Select a such that Next*(n,n1) and Next*(n1,n2) and Next*(n,a) and Next*(n,a1)
2,3,4,5,7,9,10,14,15,17,19,21,22,24,26,28,30,32,37,39,40,41,43,44,45
5000
20 - NextStar ::
prog_line n, n1, n2; assign a, a1, a2;
Select a such that Next*(n,n1) and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)
2,3,4,5,7,9,10,17,19,21,22,24,26,28,30,32,37,39,40,41,43,44,45
5000
21 - NextStar ::
prog_line n, n1, n2; assign a, a1, a2;
Select a such that Next*(n,n1) and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1) and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)and Next*(n1,n2) and Next*(n,a) and Next*(n,a1) and Next*(a,a1)
2,3,4,5,7,9,10,17,19,21,22,24,26,28,30,32,37,39,40,41,43,44,45
5000