13
cat: such that, with, pattern in one query
1 - related ::
prog_line n1, n2; procedure p1, p2; assign a1, a2; variable v; constant c;
Select a1 such that Modifies (a1, v) with v.varName = "x" pattern a1 (_, "y+5")
2
5000
2 - multiple ::
prog_line n1, n2; procedure p1, p2; assign a1, a2; variable v; constant c;
Select p1 such that Calls (p1, p2) with p2.procName = "Orchid" pattern a1 ("y", _)
Fern
5000
3 - multiple ::
assign a1, a2; stmt s1, s2;
Select s1 such that Parent (s1, a2) with a2.stmt# = 10 pattern a2 (_, "x + z")

5000
4 - multiple ::
stmt s1, s2; variable v; assign a1, a2;
Select a1 such that Uses (a1, "idx") with a1.stmt# = 18 pattern a1 (_, _)
18
5000
5 - multiple ::
stmt s1, s2; assign a1, a2; variable v; procedure p1, p2;
Select v such that Uses (p1, v) with p1.procName = "Orchid" pattern a1 (_, "idx - 1")
idx
5000
6 - multiple, pattern, while ::
stmt s1, s2; while w1, w2; if i1, i2;
Select w1 such that Uses (w1, "idx") and Uses (w2, "idx") and Parent (w1, i1) with w1.stmt# = w2.stmt# pattern w2 ("idx", _)
9
5000
7 - multiple, pattern, if ::
stmt s1, s2; while w1, w2; if i1, i2;
Select i1 such that Uses (w1, "idx") and Uses (w2, "idx") and Parent (w1, i1) with w1. stmt# = w2.stmt# pattern i1 ("idx", _, _)

5000
8 - multiple, pattern, if ::
stmt s1, s2; while w1, w2; if i1, i2;
Select i1 such that Uses (w1, "idx") and Uses (w2, "idx") and Parent (w1, i1) with w1.stmt# = w2.stmt# pattern i1 ("y", _, _)
11
5000
9 - multiple ::
stmt s1, s2; assign a1, a2; while w1, w2; if i1, i2;
Select s2 such that Modifies (a1, "x") and Modifies (s2, "y") and Uses (s2, "x") with a1.stmt# = 2 pattern a1 ("x", _)
20, 25, 30
5000
10 - multiple ::
stmt s1, s2; assign a1, a2; while w1, w2; if i1, i2;
Select  such that Parent (w1, s2) and Next (s1, s2) with s1.stmt# = s2.stmt# pattern w1(_, _)
10, 20, 21
5000
11 - multiple ::
stmt s1, s2; assign a1, a2;
Select s1 such that Modifies (s1, "y") and Modifies (a1, "x") with a1.stmt# = 2 pattern a1 ("x", _)
1, 5, 7, 15, 18, 20, 21, 25, 30
5000
12 - multiple ::
while w1, w2; stmt s1, s2; assign a1, a2; procedure p;
Select w1 such that Parent (w1, s2) and Next (a1, s2) and Parent (w1, a1) with p.procName = "Orchid" pattern w1 ("idx", _)
9, 19
5000
13 - multiple ::
while w1, w2; stmt s1, s2; assign a1, a2; procedure p;
Select a1 such that Parent (w1, s2) and Next (a1, s2) and Parent (w1, a1) with p.procName = "Orchid" pattern w1 ("idx", _)
10, 20
5000