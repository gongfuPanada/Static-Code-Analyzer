Parameters : Source2A.txt QBasic2C-invalid-queries.txt ResultQBasic2C-invalid-queries.xml
Beginning to parse Simple Program.
Begin CodeParser
End CodeParser
Begin DesignExtractor
DE: Extracted Relationships
Building CFG
End DesignExtractor
End of parsing Simple Program.
iteration2
Beginning to evaluate Query File.
New Category :  invalid queries
1 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select a1 such that Next(a1, n2)

5000
Evaluating query 1 - invalid ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
next(a1, n2)

 EVALUATING NEXT (a1 n2)
Both Tokens are Alpha
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,
9 has next consisting of 10,18,
10 has next consisting of 11,
11 has next consisting of 12,14,
12 has next consisting of 13,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 9,
18 has next consisting of 
19 has next consisting of 20,23,
20 has next consisting of 21,
21 has next consisting of 22,
22 has next consisting of 19,
23 has next consisting of 
24 has next consisting of 25,26,
25 has next consisting of 24,
26 has next consisting of 
27 has next consisting of 28,
28 has next consisting of 29,30,
29 has next consisting of 27,
30 has next consisting of 27,
Pushing in pairs (1 2)
Pushing in pairs (2 3)
Pushing in pairs (3 4)
Pushing in pairs (4 5)
Pushing in pairs (6 7)
Pushing in pairs (8 9)
Pushing in pairs (17 9)
Pushing in pairs (10 11)
Pushing in pairs (12 13)
Pushing in pairs (14 15)
Pushing in pairs (13 17)
Pushing in pairs (16 17)
Pushing in pairs (22 19)
Pushing in pairs (20 21)
Pushing in pairs (25 24)
Pushing in pairs (29 27)
Pushing in pairs (30 27)
IN INSERT LINKS INSERTING TOKEN = a1
a1 Not Found in Linkages and relIndex = 0
IN INSERT LINKS INSERTING TOKEN = n2
n2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a1 p.size = 17
FIRST PARAM = a1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 6
it2->ans1 = 8
it2->ans1 = 17
it2->ans1 = 10
it2->ans1 = 12
it2->ans1 = 14
it2->ans1 = 13
it2->ans1 = 16
it2->ans1 = 22
it2->ans1 = 20
it2->ans1 = 25
it2->ans1 = 29
it2->ans1 = 30
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 8
Case 1
Case 1.1
Tuple Table Size: 17
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: a1
End handling unprocessed selected synonyms
2
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 1 2 3 4 6 8 17 10 12 14 13 16 22 20 25 29 30 
Correct answer: 
Missing: 
Additional: 1 10 12 13 14 16 17 2 20 22 25 29 3 30 4 6 8 
2 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select s1 such that Next (s1, s2)

5000
Evaluating query 2 - invalid ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
next(s1, s2)

 EVALUATING NEXT (s1 s2)
Both Tokens are Alpha
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,
9 has next consisting of 10,18,
10 has next consisting of 11,
11 has next consisting of 12,14,
12 has next consisting of 13,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 9,
18 has next consisting of 
19 has next consisting of 20,23,
20 has next consisting of 21,
21 has next consisting of 22,
22 has next consisting of 19,
23 has next consisting of 
24 has next consisting of 25,26,
25 has next consisting of 24,
26 has next consisting of 
27 has next consisting of 28,
28 has next consisting of 29,30,
29 has next consisting of 27,
30 has next consisting of 27,
Pushing in pairs (1 2)
Pushing in pairs (2 3)
Pushing in pairs (3 4)
Pushing in pairs (4 5)
Pushing in pairs (5 6)
Pushing in pairs (6 7)
Pushing in pairs (7 8)
Pushing in pairs (8 9)
Pushing in pairs (17 9)
Pushing in pairs (9 10)
Pushing in pairs (10 11)
Pushing in pairs (11 12)
Pushing in pairs (12 13)
Pushing in pairs (11 14)
Pushing in pairs (14 15)
Pushing in pairs (15 16)
Pushing in pairs (13 17)
Pushing in pairs (16 17)
Pushing in pairs (9 18)
Pushing in pairs (22 19)
Pushing in pairs (19 20)
Pushing in pairs (20 21)
Pushing in pairs (21 22)
Pushing in pairs (19 23)
Pushing in pairs (25 24)
Pushing in pairs (24 25)
Pushing in pairs (24 26)
Pushing in pairs (29 27)
Pushing in pairs (30 27)
Pushing in pairs (27 28)
Pushing in pairs (28 29)
Pushing in pairs (28 30)
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 32
FIRST PARAM = s1
it2->ans1 = 1
it2->ans1 = 2
it2->ans1 = 3
it2->ans1 = 4
it2->ans1 = 5
it2->ans1 = 6
it2->ans1 = 7
it2->ans1 = 8
it2->ans1 = 17
it2->ans1 = 9
it2->ans1 = 10
it2->ans1 = 11
it2->ans1 = 12
it2->ans1 = 11
it2->ans1 = 14
it2->ans1 = 15
it2->ans1 = 13
it2->ans1 = 16
it2->ans1 = 9
it2->ans1 = 22
it2->ans1 = 19
it2->ans1 = 20
it2->ans1 = 21
it2->ans1 = 19
it2->ans1 = 25
it2->ans1 = 24
it2->ans1 = 24
it2->ans1 = 29
it2->ans1 = 30
it2->ans1 = 27
it2->ans1 = 28
it2->ans1 = 28
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 8
Case 1
Case 1.1
Tuple Table Size: 32
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: s1
End handling unprocessed selected synonyms
2
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 1 2 3 4 5 6 7 8 17 9 10 11 12 14 15 13 16 22 19 20 21 25 24 29 30 27 28 
Correct answer: 
Missing: 
Additional: 1 10 11 12 13 14 15 16 17 19 2 20 21 22 24 25 27 28 29 3 30 4 5 6 7 8 9 
3 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select w1 such that Next (w1, w2)

5000
Evaluating query 3 - invalid ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
next(w1, w2)

 EVALUATING NEXT (w1 w2)
Both Tokens are Alpha
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,
9 has next consisting of 10,18,
10 has next consisting of 11,
11 has next consisting of 12,14,
12 has next consisting of 13,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 9,
18 has next consisting of 
19 has next consisting of 20,23,
20 has next consisting of 21,
21 has next consisting of 22,
22 has next consisting of 19,
23 has next consisting of 
24 has next consisting of 25,26,
25 has next consisting of 24,
26 has next consisting of 
27 has next consisting of 28,
28 has next consisting of 29,30,
29 has next consisting of 27,
30 has next consisting of 27,
IN INSERT LINKS INSERTING TOKEN = w1
w1 Not Found in Linkages and relIndex = 0
IN INSERT LINKS INSERTING TOKEN = w2
w2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = w1 p.size = 0
FIRST PARAM = w1
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
empty clause detected, returning empty table
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: w1
w1 has not been processed
End handling unprocessed selected synonyms
<exception/>
4 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select i1 such that Next (i1, i2)

5000
Evaluating query 4 - invalid ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
next(i1, i2)

 EVALUATING NEXT (i1 i2)
Both Tokens are Alpha
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,
9 has next consisting of 10,18,
10 has next consisting of 11,
11 has next consisting of 12,14,
12 has next consisting of 13,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 9,
18 has next consisting of 
19 has next consisting of 20,23,
20 has next consisting of 21,
21 has next consisting of 22,
22 has next consisting of 19,
23 has next consisting of 
24 has next consisting of 25,26,
25 has next consisting of 24,
26 has next consisting of 
27 has next consisting of 28,
28 has next consisting of 29,30,
29 has next consisting of 27,
30 has next consisting of 27,
IN INSERT LINKS INSERTING TOKEN = i1
i1 Not Found in Linkages and relIndex = 0
IN INSERT LINKS INSERTING TOKEN = i2
i2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = i1 p.size = 0
FIRST PARAM = i1
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
empty clause detected, returning empty table
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: i1
i1 has not been processed
End handling unprocessed selected synonyms
<exception/>
5 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select p1 such that Next (p1, p2)

5000
Evaluating query 5 - invalid ::
Begin parse query
Query Invalid




Your answer: 
Correct answer: 
6 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select v such that Next (v, v)

5000
Evaluating query 6 - invalid ::
Begin parse query
Query Invalid




Your answer: 
Correct answer: 
7 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select c such that Next (c, c)

5000
Evaluating query 7 - invalid ::
Begin parse query
Query Invalid




Your answer: 
Correct answer: 
8 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select a1 such that Next*(a1, n2)

5000
Evaluating query 8 - invalid ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(a1, n2)

 EVALUATING NEXT* (a1 n2)
In intersect Pairs: both do not exist
Insert links for tk1 =a1
IN INSERT LINKS INSERTING TOKEN = a1
a1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = n2
IN INSERT LINKS INSERTING TOKEN = n2
n2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a1 p.size = 165
FIRST PARAM = a1
it2->ans1 = 30
it2->ans1 = 30
it2->ans1 = 30
it2->ans1 = 30
it2->ans1 = 29
it2->ans1 = 29
it2->ans1 = 29
it2->ans1 = 29
it2->ans1 = 25
it2->ans1 = 25
it2->ans1 = 25
it2->ans1 = 22
it2->ans1 = 22
it2->ans1 = 22
it2->ans1 = 22
it2->ans1 = 22
it2->ans1 = 20
it2->ans1 = 20
it2->ans1 = 20
it2->ans1 = 20
it2->ans1 = 20
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 9
Case 1
Case 1.1
Tuple Table Size: 165
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: a1
End handling unprocessed selected synonyms
2
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 30 29 25 22 20 17 16 14 13 12 10 8 6 4 3 2 1 
Correct answer: 
Missing: 
Additional: 1 10 12 13 14 16 17 2 20 22 25 29 3 30 4 6 8 
9 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select s1 such that Next*(s1, s2)

5000
Evaluating query 9 - invalid ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(s1, s2)

 EVALUATING NEXT* (s1 s2)
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s1 p.size = 241
FIRST PARAM = s1
it2->ans1 = 30
it2->ans1 = 30
it2->ans1 = 30
it2->ans1 = 30
it2->ans1 = 29
it2->ans1 = 29
it2->ans1 = 29
it2->ans1 = 29
it2->ans1 = 28
it2->ans1 = 28
it2->ans1 = 28
it2->ans1 = 28
it2->ans1 = 27
it2->ans1 = 27
it2->ans1 = 27
it2->ans1 = 27
it2->ans1 = 25
it2->ans1 = 25
it2->ans1 = 25
it2->ans1 = 24
it2->ans1 = 24
it2->ans1 = 24
it2->ans1 = 22
it2->ans1 = 22
it2->ans1 = 22
it2->ans1 = 22
it2->ans1 = 22
it2->ans1 = 21
it2->ans1 = 21
it2->ans1 = 21
it2->ans1 = 21
it2->ans1 = 21
it2->ans1 = 20
it2->ans1 = 20
it2->ans1 = 20
it2->ans1 = 20
it2->ans1 = 20
it2->ans1 = 19
it2->ans1 = 19
it2->ans1 = 19
it2->ans1 = 19
it2->ans1 = 19
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 17
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 16
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 15
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 14
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 13
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 12
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 10
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 8
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 7
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 6
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 5
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 4
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 3
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 2
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 9
Case 1
Case 1.1
Tuple Table Size: 241
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: s1
End handling unprocessed selected synonyms
2
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 30 29 28 27 25 24 22 21 20 19 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 
Correct answer: 
Missing: 
Additional: 1 10 11 12 13 14 15 16 17 19 2 20 21 22 24 25 27 28 29 3 30 4 5 6 7 8 9 
10 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select w1 such that Next*(w1, w2)

5000
Evaluating query 10 - invalid ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(w1, w2)

 EVALUATING NEXT* (w1 w2)
In intersect Pairs: both do not exist
Insert links for tk1 =w1
IN INSERT LINKS INSERTING TOKEN = w1
w1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = w2
IN INSERT LINKS INSERTING TOKEN = w2
w2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = w1 p.size = 23
FIRST PARAM = w1
it2->ans1 = 27
it2->ans1 = 27
it2->ans1 = 27
it2->ans1 = 27
it2->ans1 = 24
it2->ans1 = 24
it2->ans1 = 24
it2->ans1 = 19
it2->ans1 = 19
it2->ans1 = 19
it2->ans1 = 19
it2->ans1 = 19
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
it2->ans1 = 9
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 9
Case 1
Case 1.1
Tuple Table Size: 23
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: w1
End handling unprocessed selected synonyms
2
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 27 24 19 9 
Correct answer: 
Missing: 
Additional: 19 24 27 9 
11 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select i1 such that Next*(i1, i2)

5000
Evaluating query 11 - invalid ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 1
Initializing Variables
 
next*(i1, i2)

 EVALUATING NEXT* (i1 i2)
In intersect Pairs: both do not exist
Insert links for tk1 =i1
IN INSERT LINKS INSERTING TOKEN = i1
i1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = i2
IN INSERT LINKS INSERTING TOKEN = i2
i2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = i1 p.size = 15
FIRST PARAM = i1
it2->ans1 = 28
it2->ans1 = 28
it2->ans1 = 28
it2->ans1 = 28
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
it2->ans1 = 11
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 9
Case 1
Case 1.1
Tuple Table Size: 15
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: i1
End handling unprocessed selected synonyms
2
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 28 11 
Correct answer: 
Missing: 
Additional: 11 28 
12 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select p1 such that Next*(p1, p2)

5000
Evaluating query 12 - invalid ::
Begin parse query
Query Invalid




Your answer: 
Correct answer: 
13 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select v such that Next*(v, v)

5000
Evaluating query 13 - invalid ::
Begin parse query
Query Invalid




Your answer: 
Correct answer: 
14 - invalid ::
assign a1, a2; prog_line n1, n2; stmt s1, s2; while w1, w2; if i1, i2; procedure p1, p2; variable v; constant c;
Select c such that Next*(c, c)

5000
Evaluating query 14 - invalid ::
Begin parse query
Query Invalid




Your answer: 
Correct answer: 
End of evaluating Query File.
AutoTester Completed !
