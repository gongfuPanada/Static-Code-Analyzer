Parameters : Source2A.txt QInterm2A-such-that-such-that.txt ResultQInterm2A-such-that-such-that.xml
Beginning to parse Simple Program.
Begin CodeParser
End CodeParser
Begin DesignExtractor
DE: Extracted Relationships
Building CFG
End DesignExtractor
End of parsing Simple Program.
iteration2
Beginning to evaluate Query File.
New Category :  multiple such that clause
1 - Multiple ::
assign a; while w;
Select a such that Modifies (a, "idx") and Uses (a, "idx") and Follows (15, a) and Parent* (w, a)
16
5000
Evaluating query 1 - Multiple ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
relationships with only one alpha token found
relationships with only one alpha token found
After Ordering Relations, r.size = 4
Initializing Variables
 
modifies(a, "idx")

 EVALUATING MODIFIES (a "idx")
6
answer is empty: 0
modifiesAnswer9 6
modifiesAnswer11 6
modifiesAnswer13 6
modifiesAnswer16 6
modifiesAnswer18 6
modifiesAnswer19 6
modifiesAnswer22 6
In intersect Pairs: both do not exist
Insert links for tk1 =a
IN INSERT LINKS INSERTING TOKEN = a
a Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
uses(a, "idx")

 EVALUATING USES (a "idx")
IntersectPairs tk1 Exists tk1 = a
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
13
16
22
End retrieving token
in for loop
pair index is 116
in for loop
pair index is 122
in for loop
pair index is 123
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 16
Inserting 22
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 6
Insert links for tk1 =a
IN INSERT LINKS INSERTING TOKEN = a
a Found in Linkages
Inserting tokens into relParameters
 
follows(15, a)

 EVALUATING FOLLOWS (15 a)
a Found to Exist in Linkages
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
16
22
End retrieving token

---START REMOVE PAIRS METHOD---
Inserting 16
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 6
RelIndex of clause with contents being removed: 1
PairIndex: 1
Erasing element 6
IN INSERT LINKS INSERTING TOKEN = a
a Found in Linkages
Inserting tokens into relParameters
 
parent*(w, a)

 EVALUATING PARENT* (w a)
Initialzing all Parent* variables
If both tokens are alpha or one of them is a wildcard
In retrieveTokenEvaluatedAnswers Finding tk = a
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
16
End retrieving token
sb is Empty: 0
Iterating token 2 set Sb
IN INSERT LINKS INSERTING TOKEN = w
w Not Found in Linkages and relIndex = 3
IN INSERT LINKS INSERTING TOKEN = a
a Found in Linkages
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a p.size = 1
FIRST PARAM = a
it2->ans1 = 16
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 2
Case 2.2
Tuple Table Size: 1
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 5
Case 2
Case 2.1
Tuple Table Size: 1
Adding relationship 2 to tuple table
Relation Type being added to tuple table: 0
Case 3
Case 3.1
Tuple Table Size: 1
Adding relationship 3 to tuple table
Relation Type being added to tuple table: 3
Case 1
Case 1.2
Tuple Table Size: 1
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: a
End handling unprocessed selected synonyms
2
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 16 
Correct answer: 16 
2 - Multiple ::
prog_line n;
Select n such that Next* (10, n) and Next* (n, 9)
9, 10, 11, 12, 13, 14, 15, 16, 17
5000
Evaluating query 2 - Multiple ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
relationships with only one alpha token found
After Ordering Relations, r.size = 2
Initializing Variables
 
next*(10, n)

 EVALUATING NEXT* (10 n)
In intersect Pairs: both do not exist
Insert links for tk2 = n
IN INSERT LINKS INSERTING TOKEN = n
n Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
next*(n, 9)

 EVALUATING NEXT* (n 9)
In Next*(token, digit)
Traversing 8
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 7
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 6
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 5
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 4
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 3
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 2
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 1
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 17
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 13
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 12
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 11
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 10
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 9
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 8
Type is progline
Node traversed before. Moving on to next node
SynType match, inserting pair
Traversing 13
Type is progline
Node traversed before. Moving on to next node
SynType match, inserting pair
Traversing 15
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 14
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 11
Type is progline
Node traversed before. Moving on to next node
Traversing 16
Type is progline
Node not traversed before
SynType match, inserting pair
Traversing 15
Type is progline
Node traversed before. Moving on to next node
Pushing into answer the pair 14and9
Pushing into answer the pair 15and9
Pushing into answer the pair 16and9
Pushing into answer the pair 17and9
Pushing into answer the pair 9and9
Pushing into answer the pair 10and9
Pushing into answer the pair 11and9
Pushing into answer the pair 12and9
Pushing into answer the pair 13and9
Pushing into answer the pair 17and9
Pushing into answer the pair 1and9
Pushing into answer the pair 2and9
Pushing into answer the pair 3and9
Pushing into answer the pair 4and9
Pushing into answer the pair 5and9
Pushing into answer the pair 6and9
Pushing into answer the pair 7and9
Pushing into answer the pair 8and9
IntersectPairs tk1 Exists tk1 = n
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = n
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
9
10
11
12
13
14
15
16
17
18
End retrieving token
in for loop
pair index is 114
in for loop
pair index is 115
in for loop
pair index is 116
in for loop
pair index is 117
in for loop
pair index is 19
in for loop
pair index is 110
in for loop
pair index is 111
in for loop
pair index is 112
in for loop
pair index is 113
in for loop
pair index is 117
in for loop
pair index is 11
in for loop
pair index is 12
in for loop
pair index is 13
in for loop
pair index is 14
in for loop
pair index is 15
in for loop
pair index is 16
in for loop
pair index is 17
in for loop
pair index is 18
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 14
Inserting 15
Inserting 16
Inserting 17
Inserting 9
Inserting 10
Inserting 11
Inserting 12
Inserting 13
Inserting 17
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 18
Insert links for tk1 =n
IN INSERT LINKS INSERTING TOKEN = n
n Found in Linkages
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = n p.size = 9
FIRST PARAM = 10
SECOND PARAM = n
it2->ans2 = 16
it2->ans2 = 15
it2->ans2 = 14
it2->ans2 = 10
it2->ans2 = 9
it2->ans2 = 17
it2->ans2 = 13
it2->ans2 = 12
it2->ans2 = 11
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 9
Case 3
Case 3.2
Tuple Table Size: 9
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 9
Case 2
Case 2.1
Tuple Table Size: 10
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: n
End handling unprocessed selected synonyms
1
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 16 15 14 10 9 17 13 12 11 
Correct answer: 9 10 11 12 13 14 15 16 17 
3 - unrelated ::
procedure p1, p2; stmt s1, s2; variable v;
Select p2 such that Calls (p1, p2) and Modifies (s1, v)
Tulip, Lily, Orchid
5000
Evaluating query 3 - unrelated ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 2
Initializing Variables
 
calls(p1, p2)

 EVALUATING CALLS (p1 p2)
it = 1 it2 = 2
it = 1 it2 = 3
it = 1 it2 = 4
it = 2 it2 = 4
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
modifies(s1, v)

 EVALUATING MODIFIES (s1 v)
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 1
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p2 p.size = 4
FIRST PARAM = p1
SECOND PARAM = p2
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 4
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 6
Case 1
Case 1.1
Tuple Table Size: 4
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 4
Case 1
Case 1.1
Tuple Table Size: 192
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p2
End handling unprocessed selected synonyms
4
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: Orchid Lily Tulip 
Correct answer: Tulip Lily Orchid 
4 - unrelated ::
prog_line n1, n2; stmt s1, s2; variable v;
Select v such that Uses (s1, v) and Next (n1, n2)
x, y, z, v, idx, t
5000
Evaluating query 4 - unrelated ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 2
Initializing Variables
 
uses(s1, v)

 EVALUATING USES (s1 v)
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
next(n1, n2)

 EVALUATING NEXT (n1 n2)
Both Tokens are Alpha
Next Table
0 has next consisting of 
1 has next consisting of 2,
2 has next consisting of 3,
3 has next consisting of 4,
4 has next consisting of 5,
5 has next consisting of 6,
6 has next consisting of 7,
7 has next consisting of 8,
8 has next consisting of 9,
9 has next consisting of 10,18,
10 has next consisting of 11,
11 has next consisting of 12,14,
12 has next consisting of 13,
13 has next consisting of 17,
14 has next consisting of 15,
15 has next consisting of 16,
16 has next consisting of 17,
17 has next consisting of 9,
18 has next consisting of 
19 has next consisting of 20,23,
20 has next consisting of 21,
21 has next consisting of 22,
22 has next consisting of 19,
23 has next consisting of 
24 has next consisting of 25,26,
25 has next consisting of 24,
26 has next consisting of 
27 has next consisting of 28,
28 has next consisting of 29,30,
29 has next consisting of 27,
30 has next consisting of 27,
Pushing in pairs (1 2)
Pushing in pairs (2 3)
Pushing in pairs (3 4)
Pushing in pairs (4 5)
Pushing in pairs (5 6)
Pushing in pairs (6 7)
Pushing in pairs (7 8)
Pushing in pairs (8 9)
Pushing in pairs (17 9)
Pushing in pairs (9 10)
Pushing in pairs (10 11)
Pushing in pairs (11 12)
Pushing in pairs (12 13)
Pushing in pairs (11 14)
Pushing in pairs (14 15)
Pushing in pairs (15 16)
Pushing in pairs (13 17)
Pushing in pairs (16 17)
Pushing in pairs (9 18)
Pushing in pairs (22 19)
Pushing in pairs (19 20)
Pushing in pairs (20 21)
Pushing in pairs (21 22)
Pushing in pairs (19 23)
Pushing in pairs (25 24)
Pushing in pairs (24 25)
Pushing in pairs (24 26)
Pushing in pairs (29 27)
Pushing in pairs (30 27)
Pushing in pairs (27 28)
Pushing in pairs (28 29)
Pushing in pairs (28 30)
IN INSERT LINKS INSERTING TOKEN = n1
n1 Not Found in Linkages and relIndex = 1
IN INSERT LINKS INSERTING TOKEN = n2
n2 Not Found in Linkages and relIndex = 1
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 92
FIRST PARAM = s1
SECOND PARAM = v
it2->ans2 = 1
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 4
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 4
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 4
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 6
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 4
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 4
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 1
Case 1.1
Tuple Table Size: 92
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 8
Case 1
Case 1.1
Tuple Table Size: 2944
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: v
End handling unprocessed selected synonyms
4
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: y x z v t idx 
Correct answer: x y z v idx t 
5 - unrelated ::
procedure p1, p2; stmt s1, s2; variable v;
Select p2 such that Calls ("Fern", p2) and Modifies (s1, "x")
Tulip, Lily, Orchid
5000
Evaluating query 5 - unrelated ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
relationships with only one alpha token found
relationships with only one alpha token found
After Ordering Relations, r.size = 2
Initializing Variables
 
calls("Fern", p2)

 EVALUATING CALLS ("Fern" p2)
Call - Pushing Pair (1 2)
Call - Pushing Pair (1 3)
Call - Pushing Pair (1 4)
In intersect Pairs: both do not exist
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
modifies(s1, "x")

 EVALUATING MODIFIES (s1 "x")
2
answer is empty: 0
modifiesAnswer2 2
modifiesAnswer5 2
modifiesAnswer7 2
modifiesAnswer9 2
modifiesAnswer11 2
modifiesAnswer14 2
modifiesAnswer15 2
modifiesAnswer17 2
modifiesAnswer18 2
modifiesAnswer19 2
modifiesAnswer21 2
modifiesAnswer26 2
modifiesAnswer27 2
modifiesAnswer28 2
modifiesAnswer29 2
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 1
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p2 p.size = 3
FIRST PARAM = "Fern"
SECOND PARAM = p2
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 6
Case 3
Case 3.2
Tuple Table Size: 3
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 4
Case 2
Case 2.2
Tuple Table Size: 45
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p2
End handling unprocessed selected synonyms
2
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: Orchid Lily Tulip 
Correct answer: Tulip Lily Orchid 
6 - related ::
procedure p1, p2; variable v;
Select p1 such that Calls (p1, p2) and Modifies (p1, v)
Fern, Orchid
5000
Evaluating query 6 - related ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 2
Initializing Variables
 
calls(p1, p2)

 EVALUATING CALLS (p1 p2)
it = 1 it2 = 2
it = 1 it2 = 3
it = 1 it2 = 4
it = 2 it2 = 4
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
modifies(p1, v)

 EVALUATING MODIFIES (p1 v)
IntersectPairs tk1 Exists tk1 = p1
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = p1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
1
2
End retrieving token
in for loop
pair index is 11
in for loop
pair index is 11
in for loop
pair index is 11
in for loop
pair index is 11
in for loop
pair index is 11
in for loop
pair index is 11
in for loop
pair index is 12
in for loop
pair index is 12
in for loop
pair index is 12
in for loop
pair index is 12
in for loop
pair index is 13
in for loop
pair index is 13
in for loop
pair index is 14
in for loop
pair index is 14
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 1
Inserting 1
Inserting 1
Inserting 1
Inserting 1
Inserting 1
Inserting 2
Inserting 2
Inserting 2
Inserting 2
RelIndex of clause with contents being removed: 0
PairIndex: 1
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Found in Linkages
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 1
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p1 p.size = 4
FIRST PARAM = p1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 1
it2->ans1 = 2
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 6
Case 1
Case 1.1
Tuple Table Size: 4
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 4
Case 1
Case 1.3
Tuple Table Size: 22
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: p1
End handling unprocessed selected synonyms
3
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: Fern Orchid 
Correct answer: Fern Orchid 
7 - related, all ::
stmt s1, s2; variable v;
Select s2 such that Uses (s1, v) and Parent (s1, s2)
10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 25, 28, 29, 30
5000
Evaluating query 7 - related, all ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 2
Initializing Variables
 
uses(s1, v)

 EVALUATING USES (s1 v)
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
parent(s1, s2)

 EVALUATING PARENT (s1 s2)
In retrieveTokenEvaluatedAnswers Finding tk = s1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
End retrieving token
answer = 2
answer = 3
answer = 4
answer = 5
answer = 6
answer = 7
answer = 8
answer = 9
it9it210
it9it211
it9it217
answer = 10
answer = 11
it11it212
it11it213
it11it214
it11it215
it11it216
answer = 12
answer = 13
answer = 14
answer = 15
answer = 16
answer = 17
answer = 18
answer = 19
it19it220
it19it221
it19it222
answer = 20
answer = 21
answer = 22
answer = 23
answer = 24
it24it225
answer = 25
answer = 26
answer = 27
it27it228
answer = 28
it28it229
it28it230
answer = 29
answer = 30
before intersect pairs
IntersectPairs tk1 Exists tk1 = s1
removePairsfrom RELANS
In retrieveTokenEvaluatedAnswers Finding tk = s1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
End retrieving token
in for loop
pair index is 19
in for loop
pair index is 19
in for loop
pair index is 19
in for loop
pair index is 111
in for loop
pair index is 111
in for loop
pair index is 111
in for loop
pair index is 111
in for loop
pair index is 111
in for loop
pair index is 119
in for loop
pair index is 119
in for loop
pair index is 119
in for loop
pair index is 124
in for loop
pair index is 127
in for loop
pair index is 128
in for loop
pair index is 128
end of RemovePairsFromRelAns

---START REMOVE PAIRS METHOD---
Inserting 9
Inserting 9
Inserting 9
Inserting 11
Inserting 11
Inserting 11
Inserting 11
Inserting 11
Inserting 19
Inserting 19
Inserting 19
Inserting 24
Inserting 27
Inserting 28
Inserting 28
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 1
Erasing element 1
Erasing element 2
Erasing element 2
Erasing element 3
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 2
Erasing element 3
Erasing element 1
Erasing element 3
Erasing element 3
Erasing element 1
Erasing element 3
Erasing element 1
Erasing element 2
Erasing element 4
Erasing element 6
Erasing element 1
Erasing element 3
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 2
Erasing element 3
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Erasing element 6
Erasing element 6
Erasing element 1
Erasing element 3
Erasing element 6
Erasing element 1
Erasing element 2
Erasing element 1
Erasing element 2
Erasing element 1
Erasing element 1
Erasing element 2
Erasing element 3
Erasing element 4
Erasing element 5
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Found in Linkages
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 1
after intersect pairs
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = s2 p.size = 15
FIRST PARAM = s1
SECOND PARAM = s2
it2->ans2 = 10
it2->ans2 = 11
it2->ans2 = 17
it2->ans2 = 12
it2->ans2 = 13
it2->ans2 = 14
it2->ans2 = 15
it2->ans2 = 16
it2->ans2 = 20
it2->ans2 = 21
it2->ans2 = 22
it2->ans2 = 25
it2->ans2 = 28
it2->ans2 = 29
it2->ans2 = 30
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 5
Case 1
Case 1.1
Tuple Table Size: 31
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 2
Case 1
Case 1.3
Tuple Table Size: 79
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: s2
End handling unprocessed selected synonyms
3
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: 9 11 19 24 27 28 
Correct answer: 10 11 12 13 14 15 16 17 20 21 22 25 28 29 30 
Missing: 10 12 13 14 15 16 17 20 21 22 25 29 30 
Additional: 19 24 27 9 
8 - related, all::
stmt s1, s2;
Select s1 such that Parent (s1, s2) and Follows (s1, s2)

5000
Evaluating query 8 - related, all::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s1, s2)

 EVALUATING PARENT (s1 s2)
answer = 1
answer = 2
answer = 3
answer = 4
answer = 5
answer = 6
answer = 7
answer = 8
answer = 9
it9it210
it9it211
it9it217
answer = 10
answer = 11
it11it212
it11it213
it11it214
it11it215
it11it216
answer = 12
answer = 13
answer = 14
answer = 15
answer = 16
answer = 17
answer = 18
answer = 19
it19it220
it19it221
it19it222
answer = 20
answer = 21
answer = 22
answer = 23
answer = 24
it24it225
answer = 25
answer = 26
answer = 27
it27it228
answer = 28
it28it229
it28it230
answer = 29
answer = 30
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
after intersect pairs
Inserting tokens into relParameters
 
follows(s1, s2)

 EVALUATING FOLLOWS (s1 s2)
In retrieveTokenEvaluatedAnswers Finding tk = s1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
9
11
19
24
27
28
End retrieving token
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
10
11
12
13
14
15
16
17
20
21
22
25
28
29
30
End retrieving token
10
11
12
13
14
15
16
17
20
21
22
25
28
29
30

---START REMOVE PAIRS METHOD---
Inserting 11
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 10
Erasing element 11
Erasing element 17
Erasing element 20
Erasing element 21
Erasing element 22
Erasing element 25
Erasing element 28
Erasing element 29
Erasing element 30

---START REMOVE PAIRS METHOD---
Inserting 17
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 12
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
IN INSERT LINKS INSERTING TOKEN = s1
s1 Found in Linkages
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s1 p.size = 0
FIRST PARAM = s1
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
empty clause detected, returning empty table
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: s1
s1 has not been processed
End handling unprocessed selected synonyms
<exception/>
9 - related ::
stmt s1, s2;
Select s2 such that Parent (s1, s2) and Follows (s1, s2)

5000
Evaluating query 9 - related ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 2
Initializing Variables
 
parent(s1, s2)

 EVALUATING PARENT (s1 s2)
answer = 1
answer = 2
answer = 3
answer = 4
answer = 5
answer = 6
answer = 7
answer = 8
answer = 9
it9it210
it9it211
it9it217
answer = 10
answer = 11
it11it212
it11it213
it11it214
it11it215
it11it216
answer = 12
answer = 13
answer = 14
answer = 15
answer = 16
answer = 17
answer = 18
answer = 19
it19it220
it19it221
it19it222
answer = 20
answer = 21
answer = 22
answer = 23
answer = 24
it24it225
answer = 25
answer = 26
answer = 27
it27it228
answer = 28
it28it229
it28it230
answer = 29
answer = 30
before intersect pairs
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = s2
IN INSERT LINKS INSERTING TOKEN = s2
s2 Not Found in Linkages and relIndex = 0
after intersect pairs
Inserting tokens into relParameters
 
follows(s1, s2)

 EVALUATING FOLLOWS (s1 s2)
In retrieveTokenEvaluatedAnswers Finding tk = s1
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
9
11
19
24
27
28
End retrieving token
In retrieveTokenEvaluatedAnswers Finding tk = s2
Retrieving Token Evaluated Answers with first relationship index = 0
PRINTING ELEMENTS OF RETRIEVED TOKEN: 
10
11
12
13
14
15
16
17
20
21
22
25
28
29
30
End retrieving token
10
11
12
13
14
15
16
17
20
21
22
25
28
29
30

---START REMOVE PAIRS METHOD---
Inserting 11
RelIndex of clause with contents being removed: 0
PairIndex: 1
Erasing element 10
Erasing element 11
Erasing element 17
Erasing element 20
Erasing element 21
Erasing element 22
Erasing element 25
Erasing element 28
Erasing element 29
Erasing element 30

---START REMOVE PAIRS METHOD---
Inserting 17
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 12
Erasing element 13
Erasing element 14
Erasing element 15
Erasing element 16
IN INSERT LINKS INSERTING TOKEN = s1
s1 Found in Linkages
IN INSERT LINKS INSERTING TOKEN = s2
s2 Found in Linkages
Inserting tokens into relParameters
Found Relations to be False or Empty
Iterating Selected Syn
token in selectedSyn = s2 p.size = 0
FIRST PARAM = s1
SECOND PARAM = s2
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
empty clause detected, returning empty table
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: s2
s2 has not been processed
End handling unprocessed selected synonyms
<exception/>
10 - exhaustive ::
procedure p1, p2; stmt s1, s2; prog_line n1, n2; variable v;
Select v such that Calls* (p1, p2) and Next* (n1, n2) and Uses (s1, v)
idx, t, v, x, y, z
5000
Evaluating query 10 - exhaustive ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
After Ordering Relations, r.size = 3
Initializing Variables
 
calls*(p1, p2)

 EVALUATING CALLS* (p1 p2)
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
next*(n1, n2)

 EVALUATING NEXT* (n1 n2)
In intersect Pairs: both do not exist
Insert links for tk1 =n1
IN INSERT LINKS INSERTING TOKEN = n1
n1 Not Found in Linkages and relIndex = 1
Insert links for tk2 = n2
IN INSERT LINKS INSERTING TOKEN = n2
n2 Not Found in Linkages and relIndex = 1
Inserting tokens into relParameters
 
uses(s1, v)

 EVALUATING USES (s1 v)
In intersect Pairs: both do not exist
Insert links for tk1 =s1
IN INSERT LINKS INSERTING TOKEN = s1
s1 Not Found in Linkages and relIndex = 2
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 2
Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = v p.size = 92
FIRST PARAM = s1
SECOND PARAM = v
it2->ans2 = 1
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 4
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 4
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 4
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 6
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 4
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 3
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 4
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
it2->ans2 = 6
it2->ans2 = 1
it2->ans2 = 1
it2->ans2 = 2
it2->ans2 = 3
it2->ans2 = 4
it2->ans2 = 5
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 7
Case 1
Case 1.1
Tuple Table Size: 5
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 9
Case 1
Case 1.1
Tuple Table Size: 1205
Adding relationship 2 to tuple table
Relation Type being added to tuple table: 5
Case 1
Case 1.1
Tuple Table Size: 110860
End creating tuple table
Begin handling unprocessed selected synonyms
Checking for the: v
End handling unprocessed selected synonyms
6
Begin creating tuple of answers
End creating tuple of answers
End projecting results




Your answer: y x z v t idx 
Correct answer: idx t v x y z 
End of evaluating Query File.
AutoTester Completed !
