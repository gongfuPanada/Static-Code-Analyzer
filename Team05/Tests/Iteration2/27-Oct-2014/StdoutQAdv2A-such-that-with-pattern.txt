Parameters : Source2A.txt QAdv2A-such-that-with-pattern.txt ResultQAdv2A-such-that-with-pattern.xml
Beginning to parse Simple Program.
Begin CodeParser
End CodeParser
Begin DesignExtractor
DE: Extracted Relationships
Building CFG
End DesignExtractor
End of parsing Simple Program.
iteration2
Beginning to evaluate Query File.
New Category :  such that, with, pattern in one query
1 - related ::
prog_line n1, n2; procedure p1, p2; assign a1, a2; variable v; constant c;
Select a1 such that Modifies (a1, v) with v.varName = "x" pattern a1 (_, "y+5")
2
5000
Evaluating query 1 - related ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 3
Initializing Variables
 
modifies(a1, v)

 EVALUATING MODIFIES (a1 v)
In intersect Pairs: both do not exist
Insert links for tk1 =a1
IN INSERT LINKS INSERTING TOKEN = a1
a1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = v
IN INSERT LINKS INSERTING TOKEN = v
v Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
pattern(_, "y+5")

 EVALUATING PATTERN
IN INSERT LINKS INSERTING TOKEN = a1
a1 Found in Linkages
token 1 = _token 2 = "y+5"
PRINTING PATTERNANS
ans1 = 2 ans2 = 2
Inserting tokens into relParameters
 
with(v, "x")

 EVALUATING WITH (v "x")

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: v
r.tk2: "x"
Tk1 exist in linkages
First token VARIABLE

---START REMOVE PAIRS METHOD---
Inserting 2
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 1
Erasing element 3
Erasing element 4
Erasing element 4
Erasing element 5
Erasing element 5
Erasing element 3
Erasing element 6
Erasing element 6
Erasing element 1
Erasing element 6
Erasing element 3
Erasing element 1
Erasing element 1
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = a1 p.size = 5
FIRST PARAM = a1
it2->ans1 = 2
it2->ans1 = 14
it2->ans1 = 17
it2->ans1 = 26
it2->ans1 = 29
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 4
Case 1
Case 1.1
Tuple Table Size: 5
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 13
Case 2
Case 2.1
Tuple Table Size: 1
Adding relationship 2 to tuple table
Relation Type being added to tuple table: 12
Case 2
Case 2.1
Tuple Table Size: 1
End creating tuple table
End projecting results




Your answer: 2 
Correct answer: 2 
2 - multiple ::
prog_line n1, n2; procedure p1, p2; assign a1, a2; variable v; constant c;
Select p1 such that Calls (p1, p2) with p2.procName = "Orchid" pattern a1 ("y", _)
Fern
5000
Evaluating query 2 - multiple ::
Begin parse query
End parse query
Begin evaluate query
Ordering Relationships
In orderRelationships
with relationship found
with relationship found
After Ordering Relations, r.size = 3
Initializing Variables
 
calls(p1, p2)

 EVALUATING CALLS (p1 p2)
it = 1 it2 = 2
it = 1 it2 = 3
it = 1 it2 = 4
it = 2 it2 = 4
In intersect Pairs: both do not exist
Insert links for tk1 =p1
IN INSERT LINKS INSERTING TOKEN = p1
p1 Not Found in Linkages and relIndex = 0
Insert links for tk2 = p2
IN INSERT LINKS INSERTING TOKEN = p2
p2 Not Found in Linkages and relIndex = 0
Inserting tokens into relParameters
 
pattern("y", _)

 EVALUATING PATTERN
IN INSERT LINKS INSERTING TOKEN = a1
a1 Not Found in Linkages and relIndex = 1
token 1 = "y"token 2 = _
PRINTING PATTERNANS
ans1 = 30 ans2 = 30
ans1 = 25 ans2 = 25
ans1 = 20 ans2 = 20
ans1 = 1 ans2 = 1
Inserting tokens into relParameters
 
with(p2, "Orchid")

 EVALUATING WITH (p2 "Orchid")

---START EVALUATE WITH METHOD---
Relationship Index: 2
r.tk1: p2
r.tk2: "Orchid"
Tk1 exist in linkages
First token PROCEDURE

---START REMOVE PAIRS METHOD---
Inserting 2
RelIndex of clause with contents being removed: 0
PairIndex: 2
Erasing element 3
Erasing element 4
Erasing element 4
---END EVALUATE WITH METHOD---

Inserting tokens into relParameters
Iterating Selected Syn
token in selectedSyn = p1 p.size = 1
FIRST PARAM = p1
it2->ans1 = 1
RETURNING FINAL ANSWERS
End evaluate query
Begin projecting results
Begin creating tuple table
Adding relationship 0 to tuple table
Relation Type being added to tuple table: 6
Case 1
Case 1.1
Tuple Table Size: 1
Adding relationship 1 to tuple table
Relation Type being added to tuple table: 13
Case 2
Case 2.2
Tuple Table Size: 4
Adding relationship 2 to tuple table
Relation Type being added to tuple table: 12
Case 2
Case 2.1
Tuple Table Size: 4
End creating tuple table
End projecting results




Your answer: Fern 
Correct answer: Fern 
3 - multiple ::
stmt s1, s2;
Select s1 such that Parent (s1, s2) with s2.stmt# = 10 pattern s2 (_, "x + z")

5000
Evaluating query 3 - multiple ::
Begin parse query
Query Invalid




Your answer: 
Correct answer: 
4 - multiple ::
stmt s1, s2; variable v;
Select s1 such that Uses (s1, "idx") with s1.stmt# = 18 pattern s1 (_, _)
18
5000
Evaluating query 4 - multiple ::
Begin parse query
Query Invalid




Your answer: 
Correct answer: 18 
Missing: 18 
Additional: 
5 - multiple ::
stmt s1, s2; variable v; procedure p1, p2;
Select v such that Uses (p1, v) wtih p1.procName = "Orchid" pattern s1 (_, "idx - 1")
idx
5000
Evaluating query 5 - multiple ::
Begin parse query
Query Invalid




Your answer: 
Correct answer: idx 
Missing: idx 
Additional: 
End of evaluating Query File.
AutoTester Completed !
